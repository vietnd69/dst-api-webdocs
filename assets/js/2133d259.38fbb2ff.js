"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6942],{3256:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api-vanilla/components/perishable","title":"Perishable","description":"The Perishable component allows items to spoil or deteriorate over time, particularly food items. It manages spoilage rates, preservation effects, and the resulting state changes.","source":"@site/docs/api-vanilla/components/perishable.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/perishable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/perishable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"id":"perishable","title":"Perishable","sidebar_position":11,"last_updated":"2023-07-06T00:00:00.000Z","version":619045},"sidebar":"docs","previous":{"title":"Growable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/growable"},"next":{"title":"Builder Component","permalink":"/dst-api-webdocs/docs/api-vanilla/components/builder"}}');var t=i(4848),r=i(8453);const l={id:"perishable",title:"Perishable",sidebar_position:11,last_updated:new Date("2023-07-06T00:00:00.000Z"),version:619045},a="Perishable Component",o={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Spoilage States",id:"spoilage-states",level:2},{value:"Preservation Factors",id:"preservation-factors",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2},{value:"Example: Creating a Perishable Food Item",id:"example-creating-a-perishable-food-item",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"perishable-component",children:"Perishable Component"})}),"\n",(0,t.jsx)(n.p,{children:"The Perishable component allows items to spoil or deteriorate over time, particularly food items. It manages spoilage rates, preservation effects, and the resulting state changes."}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Add a perishable component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("perishable")\n\n-- Configure the perishable component\nlocal perishable = entity.components.perishable\nperishable:SetPerishTime(TUNING.PERISH_FAST)\nperishable:StartPerishing()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"perishtime"})}),(0,t.jsx)(n.td,{children:"Number"}),(0,t.jsx)(n.td,{children:"Total time in seconds before the item fully perishes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"perishremainingtime"})}),(0,t.jsx)(n.td,{children:"Number"}),(0,t.jsx)(n.td,{children:"Remaining time before the item fully perishes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"perishfn"})}),(0,t.jsx)(n.td,{children:"Function"}),(0,t.jsx)(n.td,{children:"Function called when the item fully perishes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onperishreplacement"})}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Prefab to spawn when the item perishes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"perishpresfn"})}),(0,t.jsx)(n.td,{children:"Function"}),(0,t.jsx)(n.td,{children:"Custom function for modifying the perish rate"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"frozenfiremult"})}),(0,t.jsx)(n.td,{children:"Number"}),(0,t.jsx)(n.td,{children:"Multiplier for perish rate when frozen"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Set time until fully perished\nperishable:SetPerishTime(TUNING.PERISH_MED) -- Medium perish time\n\n-- Set current freshness (0-1, where 1 is fresh)\nperishable:SetPercent(0.5) -- Half spoiled\n\n-- Start the spoilage process\nperishable:StartPerishing()\n\n-- Pause spoilage\nperishable:StopPerishing()\n\n-- Get the current freshness percentage\nlocal freshness = perishable:GetPercent()\n\n-- Set replacement prefab when fully spoiled\nperishable:SetOnPerishFn(function(inst)\n    local spoiled = SpawnPrefab("spoiled_food")\n    -- Transfer position, owner, etc.\n    return spoiled\nend)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"spoilage-states",children:"Spoilage States"}),"\n",(0,t.jsx)(n.p,{children:"Items typically have three spoilage states:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fresh"})," (> 50% remaining time)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stale"})," (between 50% and 20% remaining time)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Spoiled"})," (< 20% remaining time)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Each state may affect the item's properties, such as hunger/health/sanity values for food."}),"\n",(0,t.jsx)(n.h2,{id:"preservation-factors",children:"Preservation Factors"}),"\n",(0,t.jsx)(n.p,{children:"Several factors can affect spoilage rate:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Containers like Ice Box slow spoilage (typically 0.5x rate)"}),"\n",(0,t.jsx)(n.li,{children:"Winter season slows spoilage (typically 0.75x rate)"}),"\n",(0,t.jsx)(n.li,{children:"Being frozen stops spoilage completely"}),"\n",(0,t.jsx)(n.li,{children:"Certain characters may have perish rate modifiers"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,t.jsx)(n.p,{children:"The Perishable component often works with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Edible"})," - Food values change as items spoil"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Stackable"})," - Stacking may average perish times"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Inventoryitem"})," - Containers affect perish rate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"FoodMemory"})," - For tracking when food was eaten"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/edible",children:"Edible Component"})," - For food values that change as items spoil"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/cookable",children:"Cookable Component"})," - For cooking effects on spoilage rates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/stackable",children:"Stackable Component"})," - For stacking perishable items"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/container",children:"Container Component"})," - For containers that preserve items"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/eater",children:"Eater Component"})," - For consuming perishable food"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-creating-a-perishable-food-item",children:"Example: Creating a Perishable Food Item"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local function MakeFood()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it an inventory item\n    inst:AddComponent("inventoryitem")\n    \n    -- Make it edible\n    inst:AddComponent("edible")\n    inst.components.edible.healthvalue = 1\n    inst.components.edible.hungervalue = 10\n    inst.components.edible.sanityvalue = 5\n    \n    -- Make it perishable\n    inst:AddComponent("perishable")\n    inst.components.perishable:SetPerishTime(TUNING.PERISH_MED)\n    inst.components.perishable:StartPerishing()\n    inst.components.perishable:SetOnPerishFn(function(inst)\n        local spoiled = SpawnPrefab("spoiled_food")\n        if inst.components.stackable ~= nil then\n            spoiled.components.stackable:SetStackSize(inst.components.stackable:StackSize())\n        end\n        return spoiled\n    end)\n    \n    return inst\nend\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);