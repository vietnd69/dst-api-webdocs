"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[44698],{335:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/actions/equipslotutil","title":"Equip Slot Utilities","description":"Utility module for managing equipment slot identifiers and conversions","source":"@site/docs/game-scripts/core-systems/fundamentals/actions/equipslotutil.md","sourceDirName":"game-scripts/core-systems/fundamentals/actions","slug":"/game-scripts/core-systems/fundamentals/actions/equipslotutil","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/equipslotutil","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"equipslotutil","title":"Equip Slot Utilities","description":"Utility module for managing equipment slot identifiers and conversions","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Component Actions","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/componentactions"},"next":{"title":"Game Configuration Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/"}}');var t=i(74848),l=i(28453);const o={id:"equipslotutil",title:"Equip Slot Utilities",description:"Utility module for managing equipment slot identifiers and conversions",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},r="Equip Slot Utilities",d={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Functions",id:"functions",level:2},{value:"equipslotutil.Initialize()",id:"initialize",level:3},{value:"equipslotutil.ToID(eslot)",id:"to-id",level:3},{value:"equipslotutil.FromID(eslotid)",id:"from-id",level:3},{value:"equipslotutil.Count()",id:"count",level:3},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Slot Ordering",id:"slot-ordering",level:3},{value:"Limitations",id:"limitations",level:3},{value:"Networking Considerations",id:"networking-considerations",level:3},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"equip-slot-utilities",children:"Equip Slot Utilities"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"equipslotutil"})," module provides utilities for managing equipment slot identifiers and conversions between slot names and numerical IDs. This module is essential for networking equipment data and ensuring consistent slot handling across the game."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Initialize the equip slots (done once during world initialization)\nlocal equipslotutil = require("equipslotutil")\nequipslotutil.Initialize()\n\n-- Convert slot name to ID for networking\nlocal slot_id = equipslotutil.ToID("hands")\nprint("Hands slot ID:", slot_id)\n\n-- Convert ID back to slot name\nlocal slot_name = equipslotutil.FromID(slot_id)\nprint("Slot name:", slot_name)\n\n-- Get total number of equipment slots\nlocal total_slots = equipslotutil.Count()\nprint("Total equipment slots:", total_slots)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"initialize",children:"equipslotutil.Initialize()"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nInitializes the equipment slot system by processing the global ",(0,t.jsx)(n.code,{children:"EQUIPSLOTS"})," table and creating internal mappings. This function must be called once during world initialization, after MODs have finished loading and modifying the global equipment slots."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\nNone"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns:"}),"\nNone"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Called once during world initialization\nequipslotutil.Initialize()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"to-id",children:"equipslotutil.ToID(eslot)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nConverts an equipment slot name to its corresponding numerical ID. This is primarily used for networking equipment data efficiently."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eslot"}),' (string): The equipment slot name (e.g., "hands", "head", "body", "beard")']}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(number): The numerical ID corresponding to the slot name, or nil if the slot doesn't exist"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local hands_id = equipslotutil.ToID("hands")\nlocal head_id = equipslotutil.ToID("head")\n-- Use IDs for networking or compact storage\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"from-id",children:"equipslotutil.FromID(eslotid)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nConverts a numerical equipment slot ID back to its corresponding slot name. This is the inverse operation of ",(0,t.jsx)(n.code,{children:"ToID()"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eslotid"})," (number): The numerical ID of the equipment slot"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): The slot name corresponding to the ID, or nil if the ID is invalid"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local slot_name = equipslotutil.FromID(1)\nprint("Slot 1 is:", slot_name) -- Might print "head" or another slot name\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"count",children:"equipslotutil.Count()"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nReturns the total number of equipment slots available in the game. This count includes both vanilla and mod-added equipment slots."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\nNone"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(number): The total number of equipment slots (maximum 63 slots supported)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local total_slots = equipslotutil.Count()\nfor i = 1, total_slots do\n    local slot_name = equipslotutil.FromID(i)\n    print("Slot", i, ":", slot_name)\nend\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,t.jsx)(n.h3,{id:"slot-ordering",children:"Slot Ordering"}),"\n",(0,t.jsxs)(n.p,{children:["The module uses a deterministic ordering for equipment slots based on ",(0,t.jsx)(n.code,{children:"orderedPairs()"})," iteration over the global ",(0,t.jsx)(n.code,{children:"EQUIPSLOTS"})," table. The order is then reversed to provide optimal priority ordering for deterministic checks."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Expected slot order:"})," ",(0,t.jsx)(n.code,{children:'{"head", "hands", "body", "beard"}'})]}),"\n",(0,t.jsx)(n.h3,{id:"limitations",children:"Limitations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Maximum slots:"})," The system supports a maximum of 63 equipment slots"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Initialization required:"})," All functions except ",(0,t.jsx)(n.code,{children:"Initialize()"})," are only valid after initialization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mod compatibility:"})," Must be initialized after all mods have finished modifying ",(0,t.jsx)(n.code,{children:"GLOBAL.EQUIPSLOTS"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"networking-considerations",children:"Networking Considerations"}),"\n",(0,t.jsx)(n.p,{children:"The numerical IDs generated by this module are designed for efficient networking and should remain consistent across all clients in a multiplayer game."}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./components/index.md",children:"Components"}),": Equipment-related components use these slot utilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./inventory.md",children:"Inventory System"}),": Inventory management relies on equipment slot identification"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../prefabs/index.md",children:"Prefabs"}),": Character and equipment prefabs utilize slot mappings"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(96540);const t={},l=s.createContext(t);function o(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);