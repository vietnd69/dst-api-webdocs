"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[84280],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(96540);const r={},d=i.createContext(r);function l(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(d.Provider,{value:n},e.children)}},44480:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"game-scripts/core-systems/game-configuration/settings/tuning-override","title":"Tuning Override","description":"System for overriding and disabling specific game mechanics and events through dummy function replacements","source":"@site/docs/game-scripts/core-systems/game-configuration/settings/tuning_override.md","sourceDirName":"game-scripts/core-systems/game-configuration/settings","slug":"/game-scripts/core-systems/game-configuration/settings/tuning-override","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/tuning-override","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"tuning-override","title":"Tuning Override","description":"System for overriding and disabling specific game mechanics and events through dummy function replacements","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Tuning","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/tuning"},"next":{"title":"Statistics and Metrics Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/stats/"}}');var r=s(74848),d=s(28453);const l={id:"tuning-override",title:"Tuning Override",description:"System for overriding and disabling specific game mechanics and events through dummy function replacements",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},t="Tuning Override",c={},o=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Module Structure",id:"module-structure",level:2},{value:"Return Table",id:"return-table",level:3},{value:"Override Categories",id:"override-categories",level:2},{value:"Creature Events",id:"creature-events",level:3},{value:"hounds",id:"hounds",level:4},{value:"wormattacks",id:"wormattacks",level:4},{value:"deerclops",id:"deerclops",level:4},{value:"bearger",id:"bearger",level:4},{value:"goosemoose",id:"goosemoose",level:4},{value:"dragonfly",id:"dragonfly",level:4},{value:"krampus",id:"krampus",level:4},{value:"deciduousmonster",id:"deciduousmonster",level:4},{value:"liefs",id:"liefs",level:4},{value:"Environmental Events",id:"environmental-events",level:3},{value:"antliontribute",id:"antliontribute",level:4},{value:"disease_delay",id:"disease_delay",level:4},{value:"wildfires",id:"wildfires",level:4},{value:"earthquakes",id:"earthquakes",level:4},{value:"meteorshowers",id:"meteorshowers",level:4},{value:"waves",id:"waves",level:4},{value:"petrification",id:"petrification",level:4},{value:"Wildlife and Spawning",id:"wildlife-and-spawning",level:3},{value:"perd",id:"perd",level:4},{value:"hunt",id:"hunt",level:4},{value:"alternatehunt",id:"alternatehunt",level:4},{value:"butterfly",id:"butterfly",level:4},{value:"birds",id:"birds",level:4},{value:"penguins",id:"penguins",level:4},{value:"beefaloheat",id:"beefaloheat",level:4},{value:"Environment and Vegetation",id:"environment-and-vegetation",level:3},{value:"flowers",id:"flowers",level:4},{value:"flower_cave",id:"flower_cave",level:4},{value:"lureplants",id:"lureplants",level:4},{value:"rock_ice",id:"rock_ice",level:4},{value:"regrowth",id:"regrowth",level:4},{value:"Weather and Seasons",id:"weather-and-seasons",level:3},{value:"day",id:"day",level:4},{value:"autumn",id:"autumn",level:4},{value:"winter",id:"winter",level:4},{value:"spring",id:"spring",level:4},{value:"summer",id:"summer",level:4},{value:"season_start",id:"season_start",level:4},{value:"weather",id:"weather",level:4},{value:"lightning",id:"lightning",level:4},{value:"frograin",id:"frograin",level:4},{value:"Ambience and Visual Effects",id:"ambience-and-visual-effects",level:3},{value:"creepyeyes",id:"creepyeyes",level:4},{value:"areaambient",id:"areaambient",level:4},{value:"areaambientdefault",id:"areaambientdefault",level:4},{value:"colourcube",id:"colourcube",level:4},{value:"Helper Function",id:"helper-function",level:2},{value:"dummyfn",id:"dummyfn",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Testing Environment Setup",id:"testing-environment-setup",level:3},{value:"Selective Mechanic Disabling",id:"selective-mechanic-disabling",level:3},{value:"Debug Mode Implementation",id:"debug-mode-implementation",level:3},{value:"Conditional Override Application",id:"conditional-override-application",level:3},{value:"Integration Notes",id:"integration-notes",level:2},{value:"Relationship to Tuning System",id:"relationship-to-tuning-system",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Testing and Development Benefits",id:"testing-and-development-benefits",level:3},{value:"Related Modules",id:"related-modules",level:2},{value:"Source Reference",id:"source-reference",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tuning-override",children:"Tuning Override"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"tuning_override"})," module provides a system for selectively disabling or overriding specific game mechanics, events, and world features. It returns a table of override functions that can replace default game behaviors, primarily used for testing, debugging, or creating specialized game modes where certain mechanics need to be disabled."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Access the tuning override table\nlocal overrides = require("tuning_override")\n\n-- Apply override to disable hound attacks\nlocal original_hounds = some_hounds_function\nsome_hounds_function = overrides.hounds  -- Now does nothing\n\n-- Check if override is a dummy function\nif overrides.deerclops == dummyfn then\n    print("Deerclops events are disabled")\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"module-structure",children:"Module Structure"}),"\n",(0,r.jsx)(n.h3,{id:"return-table",children:"Return Table"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"table"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," The module returns a table mapping game mechanic names to their override functions. Most overrides use a dummy function that performs no operations, effectively disabling the associated mechanics."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"{\n    [mechanic_name] = function_override,\n    [event_name] = function_override,\n    [system_name] = function_override\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"override-categories",children:"Override Categories"}),"\n",(0,r.jsx)(n.h3,{id:"creature-events",children:"Creature Events"}),"\n",(0,r.jsx)(n.p,{children:"These overrides control various creature-related events and spawning mechanics:"}),"\n",(0,r.jsx)(n.h4,{id:"hounds",children:"hounds"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables hound attack events and related mechanics."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Disable hound attacks\nlocal overrides = require("tuning_override")\nHoundAttackManager.StartAttack = overrides.hounds\n'})}),"\n",(0,r.jsx)(n.h4,{id:"wormattacks",children:"wormattacks"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables worm attack events in caves."]}),"\n",(0,r.jsx)(n.h4,{id:"deerclops",children:"deerclops"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Deerclops boss spawning and related events."]}),"\n",(0,r.jsx)(n.h4,{id:"bearger",children:"bearger"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Bearger boss spawning and mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"goosemoose",children:"goosemoose"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Goose/Moose boss spawning and behaviors."]}),"\n",(0,r.jsx)(n.h4,{id:"dragonfly",children:"dragonfly"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Dragonfly boss mechanics and events."]}),"\n",(0,r.jsx)(n.h4,{id:"krampus",children:"krampus"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Krampus spawning mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"deciduousmonster",children:"deciduousmonster"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Treeguard spawning from chopping trees."]}),"\n",(0,r.jsx)(n.h4,{id:"liefs",children:"liefs"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Treeguard (Leif) related mechanics."]}),"\n",(0,r.jsx)(n.h3,{id:"environmental-events",children:"Environmental Events"}),"\n",(0,r.jsx)(n.h4,{id:"antliontribute",children:"antliontribute"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Antlion tribute mechanics and events."]}),"\n",(0,r.jsx)(n.h4,{id:"disease_delay",children:"disease_delay"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables disease spread delay mechanisms."]}),"\n",(0,r.jsx)(n.h4,{id:"wildfires",children:"wildfires"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables wildfire events and spread mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"earthquakes",children:"earthquakes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables earthquake events."]}),"\n",(0,r.jsx)(n.h4,{id:"meteorshowers",children:"meteorshowers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables meteor shower events."]}),"\n",(0,r.jsx)(n.h4,{id:"waves",children:"waves"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables ocean wave mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"petrification",children:"petrification"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables petrification effects and mechanics."]}),"\n",(0,r.jsx)(n.h3,{id:"wildlife-and-spawning",children:"Wildlife and Spawning"}),"\n",(0,r.jsx)(n.h4,{id:"perd",children:"perd"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables Perd (turkey) spawning and behaviors."]}),"\n",(0,r.jsx)(n.h4,{id:"hunt",children:"hunt"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables hunting events and mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"alternatehunt",children:"alternatehunt"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables alternative hunting mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"butterfly",children:"butterfly"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables butterfly spawning and behaviors."]}),"\n",(0,r.jsx)(n.h4,{id:"birds",children:"birds"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables bird spawning mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"penguins",children:"penguins"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables penguin spawning in winter."]}),"\n",(0,r.jsx)(n.h4,{id:"beefaloheat",children:"beefaloheat"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables beefalo heat/mating mechanics."]}),"\n",(0,r.jsx)(n.h3,{id:"environment-and-vegetation",children:"Environment and Vegetation"}),"\n",(0,r.jsx)(n.h4,{id:"flowers",children:"flowers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables flower spawning and growth."]}),"\n",(0,r.jsx)(n.h4,{id:"flower_cave",children:"flower_cave"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables cave flower mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"lureplants",children:"lureplants"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables lureplant spawning and growth."]}),"\n",(0,r.jsx)(n.h4,{id:"rock_ice",children:"rock_ice"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables ice rock formation mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"regrowth",children:"regrowth"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables plant and resource regrowth."]}),"\n",(0,r.jsx)(n.h3,{id:"weather-and-seasons",children:"Weather and Seasons"}),"\n",(0,r.jsx)(n.h4,{id:"day",children:"day"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables day cycle events."]}),"\n",(0,r.jsx)(n.h4,{id:"autumn",children:"autumn"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables autumn season mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"winter",children:"winter"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables winter season mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"spring",children:"spring"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables spring season mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"summer",children:"summer"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables summer season mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"season_start",children:"season_start"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables season start events."]}),"\n",(0,r.jsx)(n.h4,{id:"weather",children:"weather"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables weather change mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"lightning",children:"lightning"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables lightning strike events."]}),"\n",(0,r.jsx)(n.h4,{id:"frograin",children:"frograin"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables frog rain events in spring."]}),"\n",(0,r.jsx)(n.h3,{id:"ambience-and-visual-effects",children:"Ambience and Visual Effects"}),"\n",(0,r.jsx)(n.h4,{id:"creepyeyes",children:"creepyeyes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables creepy eyes ambient effects."]}),"\n",(0,r.jsx)(n.h4,{id:"areaambient",children:"areaambient"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables area-specific ambient effects."]}),"\n",(0,r.jsx)(n.h4,{id:"areaambientdefault",children:"areaambientdefault"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables default area ambient mechanics."]}),"\n",(0,r.jsx)(n.h4,{id:"colourcube",children:"colourcube"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Function:"})," ",(0,r.jsx)(n.code,{children:"dummyfn"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables color cube visual effects."]}),"\n",(0,r.jsx)(n.h2,{id:"helper-function",children:"Helper Function"}),"\n",(0,r.jsx)(n.h3,{id:"dummyfn",children:"dummyfn"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"function"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," A placeholder function that performs no operations. Used as the default override for most mechanics to effectively disable them."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local dummyfn = function() end\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Check if a mechanic is disabled\nlocal overrides = require("tuning_override")\nif overrides.hounds == dummyfn then\n    print("Hound attacks are disabled")\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"testing-environment-setup",children:"Testing Environment Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local tuning_overrides = require("tuning_override")\n\n-- Disable all hostile events for peaceful testing\nfunction SetupPeacefulMode()\n    -- Disable boss spawns\n    BossSpawnManager.SpawnDeerclops = tuning_overrides.deerclops\n    BossSpawnManager.SpawnBearger = tuning_overrides.bearger\n    BossSpawnManager.SpawnGoose = tuning_overrides.goosemoose\n    \n    -- Disable hostile events\n    HoundAttackManager.StartAttack = tuning_overrides.hounds\n    EarthquakeManager.StartQuake = tuning_overrides.earthquakes\n    \n    -- Disable environmental hazards\n    WildfireManager.StartFire = tuning_overrides.wildfires\n    LightningManager.Strike = tuning_overrides.lightning\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"selective-mechanic-disabling",children:"Selective Mechanic Disabling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'function CreateCustomGameMode()\n    local overrides = require("tuning_override")\n    \n    -- Keep seasons but disable weather events\n    WeatherManager.SetWeather = overrides.weather\n    WeatherManager.StartRain = overrides.frograin\n    \n    -- Keep wildlife but disable aggressive spawns\n    SpawnManager.SpawnHounds = overrides.hounds\n    SpawnManager.SpawnKrampus = overrides.krampus\n    \n    -- Allow growth but disable regrowth\n    GrowthManager.Regrow = overrides.regrowth\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"debug-mode-implementation",children:"Debug Mode Implementation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'function EnableDebugMode()\n    local overrides = require("tuning_override")\n    \n    -- Store original functions for restoration\n    local original_functions = {}\n    \n    -- Disable disruptive events during debugging\n    local debug_overrides = {\n        "earthquakes", "wildfires", "meteorshowers",\n        "hounds", "deerclops", "bearger"\n    }\n    \n    for _, override_name in ipairs(debug_overrides) do\n        original_functions[override_name] = _G[override_name]\n        _G[override_name] = overrides[override_name]\n    end\n    \n    return original_functions  -- For later restoration\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"conditional-override-application",children:"Conditional Override Application"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'function ApplyDifficultyOverrides(difficulty_level)\n    local overrides = require("tuning_override")\n    \n    if difficulty_level == "peaceful" then\n        -- Disable all hostile mechanics\n        return {\n            hounds = overrides.hounds,\n            krampus = overrides.krampus,\n            deerclops = overrides.deerclops,\n            wildfires = overrides.wildfires\n        }\n    elseif difficulty_level == "casual" then\n        -- Disable only the most disruptive events\n        return {\n            earthquakes = overrides.earthquakes,\n            meteorshowers = overrides.meteorshowers\n        }\n    end\n    \n    return {}  -- No overrides for normal/hard difficulty\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"integration-notes",children:"Integration Notes"}),"\n",(0,r.jsx)(n.h3,{id:"relationship-to-tuning-system",children:"Relationship to Tuning System"}),"\n",(0,r.jsxs)(n.p,{children:["The tuning override system works alongside the main ",(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/tuning",children:"Tuning System"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tuning"}),": Controls numeric values and balance parameters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tuning Override"}),": Controls function behavior and feature availability"]}),"\n",(0,r.jsx)(n.li,{children:"Both systems can be used together for comprehensive game customization"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dummy function calls have minimal performance impact"}),"\n",(0,r.jsx)(n.li,{children:"Override functions are called instead of original functions, not in addition"}),"\n",(0,r.jsx)(n.li,{children:"Memory usage is minimal since most overrides share the same dummy function"}),"\n",(0,r.jsx)(n.li,{children:"No cleanup required as overrides simply replace function references"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing-and-development-benefits",children:"Testing and Development Benefits"}),"\n",(0,r.jsx)(n.p,{children:"The override system provides several advantages for development:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Isolated Testing"}),": Disable specific mechanics to test others in isolation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Debug Sessions"}),": Prevent disruptive events during debugging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Testing"}),": Disable expensive systems to measure impact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Feature Validation"}),": Test new features without interference from existing systems"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/tuning",children:"Tuning"}),": Main game balance and configuration system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/constants",children:"Constants"}),": Game constants and non-tunable values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./debugtools.md",children:"Debug Tools"}),": Development and testing utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./worldsettings.md",children:"World Settings"}),": Player-configurable world options"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"source-reference",children:"Source Reference"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File Location:"})," ",(0,r.jsx)(n.code,{children:"scripts/tuning_override.lua"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Module Type:"})," Function override table"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Global Access:"})," Accessed via ",(0,r.jsx)(n.code,{children:'require("tuning_override")'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Dependencies:"})," None (standalone module)"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);