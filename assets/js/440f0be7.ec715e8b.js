"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[41243],{28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>o});var t=i(96540);const s={},a=t.createContext(s);function r(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(a.Provider,{value:e},n.children)}},66068:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/containers/containers","title":"Containers","description":"Container system configuration and widget setup for various storage types in Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/game-mechanics/containers/containers.md","sourceDirName":"game-scripts/core-systems/game-mechanics/containers","slug":"/game-scripts/core-systems/game-mechanics/containers/","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/containers/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Containers","description":"Container system configuration and widget setup for various storage types in Don\'t Starve Together","sidebar_position":1,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var s=i(74848),a=i(28453);const r={title:"Containers",description:"Container system configuration and widget setup for various storage types in Don't Starve Together",sidebar_position:1,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},o="Containers",c={},l=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Core Functions",id:"core-functions",level:2},{value:"containers.widgetsetup(container, prefab, data)",id:"containerswidgetsetupcontainer-prefab-data",level:3},{value:"containers.MAXITEMSLOTS",id:"containersmaxitemslots",level:3},{value:"Container Configuration Structure",id:"container-configuration-structure",level:2},{value:"Widget Properties",id:"widget-properties",level:3},{value:"Container Behavior",id:"container-behavior",level:3},{value:"Item Validation",id:"item-validation",level:3},{value:"Container Types",id:"container-types",level:2},{value:"Storage Containers",id:"storage-containers",level:3},{value:"Backpacks",id:"backpacks",level:4},{value:"Chests",id:"chests",level:4},{value:"Specialized Storage",id:"specialized-storage",level:4},{value:"Cooking Containers",id:"cooking-containers",level:3},{value:"Cook Pot",id:"cook-pot",level:4},{value:"Portable Spicer",id:"portable-spicer",level:4},{value:"Character-Specific Containers",id:"character-specific-containers",level:3},{value:"Wendy&#39;s Sisturn",id:"wendys-sisturn",level:4},{value:"Wortox&#39;s Soul Jar",id:"wortoxs-soul-jar",level:4},{value:"Beard Sacks (Webber&#39;s Beard)",id:"beard-sacks-webbers-beard",level:4},{value:"Equipment Containers",id:"equipment-containers",level:3},{value:"Fishing Rod",id:"fishing-rod",level:4},{value:"Slingshot Variants",id:"slingshot-variants",level:4},{value:"Slingshot Modification Container",id:"slingshot-modification-container",level:4},{value:"Antlion Hat",id:"antlion-hat",level:4},{value:"Alter Guardian Hat",id:"alter-guardian-hat",level:4},{value:"Specialized Containers",id:"specialized-containers",level:3},{value:"Bundle Wrapper",id:"bundle-wrapper",level:4},{value:"Construction Containers",id:"construction-containers",level:4},{value:"Woby Containers",id:"woby-containers",level:4},{value:"Offering Pots",id:"offering-pots",level:4},{value:"Mushroom Lights",id:"mushroom-lights",level:4},{value:"Winter Tree Decorations",id:"winter-tree-decorations",level:4},{value:"Merm Buildings",id:"merm-buildings",level:4},{value:"Pocket Watch",id:"pocket-watch",level:4},{value:"Book Station",id:"book-station",level:4},{value:"Tackle Containers",id:"tackle-containers",level:4},{value:"Halloween Tree",id:"halloween-tree",level:4},{value:"Dragonfly Furnace",id:"dragonfly-furnace",level:4},{value:"Balatro Machine",id:"balatro-machine",level:4},{value:"Webber&#39;s Beard Sacks",id:"webbers-beard-sacks",level:4},{value:"Additional Specialized Containers",id:"additional-specialized-containers",level:4},{value:"Event-Specific Containers (Quagmire)",id:"event-specific-containers-quagmire",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Priority Systems",id:"priority-systems",level:3},{value:"Deprecated Containers",id:"deprecated-containers",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Creating Custom Containers",id:"creating-custom-containers",level:3},{value:"Conditional Item Acceptance",id:"conditional-item-acceptance",level:3},{value:"Complex Button Actions",id:"complex-button-actions",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Related Modules",id:"related-modules",level:2},{value:"Notes",id:"notes",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"containers",children:"Containers"})}),"\n",(0,s.jsx)(e.h2,{id:"version-history",children:"Version History"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Build Version"}),(0,s.jsx)(e.th,{children:"Change Date"}),(0,s.jsx)(e.th,{children:"Change Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsx)(e.tbody,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"676042"}),(0,s.jsx)(e.td,{children:"2025-06-21"}),(0,s.jsx)(e.td,{children:"stable"}),(0,s.jsx)(e.td,{children:"Current version"})]})})]}),"\n",(0,s.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(e.p,{children:"The containers system manages all storage interfaces in Don't Starve Together, including backpacks, chests, cooking stations, and specialized containers. It defines UI layouts, item validation rules, and interaction behaviors for each container type."}),"\n",(0,s.jsx)(e.p,{children:"The containers module provides:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Widget Configuration"}),": Slot positions, animations, and UI layout for container interfaces"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Item Validation"}),": Rules determining which items can be placed in specific containers"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Interaction Behaviors"}),": Button actions, sounds, and special container mechanics"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Container Types"}),": Support for different container categories (pack, chest, cooker, hand_inv, side_inv_behind, top_rack)"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,s.jsx)(e.h3,{id:"containerswidgetsetupcontainer-prefab-data",children:"containers.widgetsetup(container, prefab, data)"}),"\n",(0,s.jsx)(e.p,{children:"Sets up container widget configuration based on prefab or provided data."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"container"})," - The container component instance"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"prefab"})," - Container prefab name (optional)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"data"})," - Custom configuration data (optional)"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Called automatically during container initialization\ncontainers.widgetsetup(self, "backpack")\n\n-- Using custom data\nlocal custom_config = {\n    widget = {\n        slotpos = {Vector3(0, 0, 0)},\n        animbank = "ui_chest_1x1",\n        animbuild = "ui_chest_1x1"\n    },\n    type = "chest"\n}\ncontainers.widgetsetup(self, nil, custom_config)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"containersmaxitemslots",children:"containers.MAXITEMSLOTS"}),"\n",(0,s.jsx)(e.p,{children:"Maximum number of item slots across all container types, calculated automatically during module initialization."}),"\n",(0,s.jsx)(e.h2,{id:"container-configuration-structure",children:"Container Configuration Structure"}),"\n",(0,s.jsxs)(e.p,{children:["Each container configuration in ",(0,s.jsx)(e.code,{children:"params"})," table contains:"]}),"\n",(0,s.jsx)(e.h3,{id:"widget-properties",children:"Widget Properties"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"slotpos"}),": Array of Vector3 positions for inventory slots"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"animbank/animbuild"}),": Animation assets for container UI"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"pos"}),": Container widget position offset"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"side_align_tip"}),": Tooltip alignment for side containers"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"buttoninfo"}),": Configuration for action buttons (cooking, crafting, etc.)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"slotbg"}),": Custom slot background images"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"opensound/closesound"}),": Audio cues for container interactions"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"container-behavior",children:"Container Behavior"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"type"}),": Container category (",(0,s.jsx)(e.code,{children:'"pack"'}),", ",(0,s.jsx)(e.code,{children:'"chest"'}),", ",(0,s.jsx)(e.code,{children:'"cooker"'}),", ",(0,s.jsx)(e.code,{children:'"hand_inv"'}),", ",(0,s.jsx)(e.code,{children:'"side_inv_behind"'}),", ",(0,s.jsx)(e.code,{children:'"top_rack"'}),", ",(0,s.jsx)(e.code,{children:'"backpack"'}),")"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"acceptsstacks"}),": Whether container accepts item stacks"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"usespecificslotsforitems"}),": Forces items to specific slot positions"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"issidewidget"}),": Renders container as side panel"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"openlimit"}),": Maximum concurrent users"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"excludefromcrafting"}),": Hides container contents from crafting recipes"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"lowpriorityselection"}),": Lower priority for automatic item selection"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"item-validation",children:"Item Validation"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"itemtestfn"}),": Function determining valid items for container"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"priorityfn"}),": Function for automatic item sorting priority"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"container-types",children:"Container Types"}),"\n",(0,s.jsx)(e.h3,{id:"storage-containers",children:"Storage Containers"}),"\n",(0,s.jsx)(e.h4,{id:"backpacks",children:"Backpacks"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"backpack"}),", ",(0,s.jsx)(e.code,{children:"icepack"}),", ",(0,s.jsx)(e.code,{children:"krampus_sack"}),", ",(0,s.jsx)(e.code,{children:"piggyback"}),", ",(0,s.jsx)(e.code,{children:"seedpouch"}),", ",(0,s.jsx)(e.code,{children:"candybag"}),", ",(0,s.jsx)(e.code,{children:"spicepack"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Backpack configuration example (2x4 slots)\nparams.backpack = {\n    widget = {\n        slotpos = {}, -- 2x4 grid calculated in loop\n        animbank = "ui_backpack_2x4",\n        animbuild = "ui_backpack_2x4",\n        pos = Vector3(-5, -80, 0),\n    },\n    issidewidget = true,\n    type = "pack",\n    openlimit = 1,\n}\n\n-- Spice pack (2x3 slots)\nparams.spicepack = {\n    widget = {\n        slotpos = {}, -- 2x3 grid\n        animbank = "ui_icepack_2x3",\n        animbuild = "ui_icepack_2x3",\n        pos = Vector3(-5, -70, 0),\n    },\n    issidewidget = true,\n    type = "pack",\n    openlimit = 1,\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"chests",children:"Chests"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"treasurechest"}),", ",(0,s.jsx)(e.code,{children:"icebox"}),", ",(0,s.jsx)(e.code,{children:"chester"}),", ",(0,s.jsx)(e.code,{children:"hutch"}),", ",(0,s.jsx)(e.code,{children:"fish_box"}),", ",(0,s.jsx)(e.code,{children:"boat_ancient_container"}),", ",(0,s.jsx)(e.code,{children:"sacred_chest"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Chester configuration (3x3 slots)\nparams.chester = {\n    widget = {\n        slotpos = {}, -- 3x3 grid calculated in loop\n        animbank = "ui_chest_3x3",\n        animbuild = "ui_chest_3x3",\n        pos = Vector3(0, 200, 0),\n        side_align_tip = 160,\n    },\n    type = "chest",\n}\n\n-- Icebox with food validation\nfunction params.icebox.itemtestfn(container, item, slot)\n    if item:HasTag("icebox_valid") then\n        return true\n    end\n    \n    -- Must be perishable\n    if not (item:HasTag("fresh") or item:HasTag("stale") or item:HasTag("spoiled")) then\n        return false\n    end\n    \n    -- Must not be small creature\n    if item:HasTag("smallcreature") then\n        return false\n    end\n    \n    -- Must be edible\n    for k, v in pairs(FOODTYPE) do\n        if item:HasTag("edible_"..v) then\n            return true\n        end\n    end\n    \n    return false\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"specialized-storage",children:"Specialized Storage"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Fish Box"})," - Stores ocean creatures:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.fish_box.itemtestfn(container, item, slot)\n    return item:HasTag("smalloceancreature")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Salt Box"})," - Preserves cookable foods:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.saltbox.itemtestfn(container, item, slot)\n    return ((item:HasTag("fresh") or item:HasTag("stale") or item:HasTag("spoiled"))\n        and item:HasTag("cookable")\n        and not item:HasTag("deployable")\n        and not item:HasTag("smallcreature")\n        and item.replica.health == nil)\n        or item:HasTag("saltbox_valid")\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"cooking-containers",children:"Cooking Containers"}),"\n",(0,s.jsx)(e.h4,{id:"cook-pot",children:"Cook Pot"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"cookpot"}),", ",(0,s.jsx)(e.code,{children:"archive_cookpot"}),", ",(0,s.jsx)(e.code,{children:"portablecookpot"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Cook pot with cooking action\nparams.cookpot = {\n    widget = {\n        slotpos = {\n            Vector3(0, 64 + 32 + 8 + 4, 0),\n            Vector3(0, 32 + 4, 0),\n            Vector3(0, -(32 + 4), 0),\n            Vector3(0, -(64 + 32 + 8 + 4), 0),\n        },\n        buttoninfo = {\n            text = STRINGS.ACTIONS.COOK,\n            position = Vector3(0, -165, 0),\n        }\n    },\n    acceptsstacks = false,\n    type = "cooker",\n}\n\nfunction params.cookpot.itemtestfn(container, item, slot)\n    return cooking.IsCookingIngredient(item.prefab) and not container.inst:HasTag("burnt")\nend\n\nfunction params.cookpot.widget.buttoninfo.fn(inst, doer)\n    if inst.components.container ~= nil then\n        BufferedAction(doer, inst, ACTIONS.COOK):Do()\n    elseif inst.replica.container ~= nil and not inst.replica.container:IsBusy() then\n        SendRPCToServer(RPC.DoWidgetButtonAction, ACTIONS.COOK.code, inst, ACTIONS.COOK.mod_name)\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"portable-spicer",children:"Portable Spicer"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"portablespicer"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Specific slot requirements for spicing\nparams.portablespicer = {\n    widget = {\n        slotpos = {\n            Vector3(0, 32 + 4, 0),    -- Food slot\n            Vector3(0, -(32 + 4), 0), -- Spice slot\n        },\n        slotbg = {\n            { image = "cook_slot_food.tex" },\n            { image = "cook_slot_spice.tex" },\n        },\n    },\n    usespecificslotsforitems = true,\n    type = "cooker",\n}\n\nfunction params.portablespicer.itemtestfn(container, item, slot)\n    return item.prefab ~= "wetgoop"\n        and (   (slot == 1 and item:HasTag("preparedfood") and not item:HasTag("spicedfood")) or\n                (slot == 2 and item:HasTag("spice")) or\n                (slot == nil and (item:HasTag("spice") or (item:HasTag("preparedfood") and not item:HasTag("spicedfood"))))\n            )\n        and not container.inst:HasTag("burnt")\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"character-specific-containers",children:"Character-Specific Containers"}),"\n",(0,s.jsx)(e.h4,{id:"wendys-sisturn",children:"Wendy's Sisturn"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.sisturn.itemtestfn(container, item, slot)\n    local owner\n    if TheWorld.ismastersim then\n        owner = container.inst.components.container:GetOpeners()[1]\n    elseif ThePlayer and container:IsOpenedBy(ThePlayer) then\n        owner = ThePlayer\n    end\n\n    -- Skill tree integration for expanded functionality\n    if not owner or (owner.components.skilltreeupdater and \n       owner.components.skilltreeupdater:IsActivated("wendy_sisturn_3")) then\n        return item.prefab == "petals" or item.prefab == "moon_tree_blossom" or item.prefab == "petals_evil"\n    end\n\n    return item.prefab == "petals" \nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"wortoxs-soul-jar",children:"Wortox's Soul Jar"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.wortox_souljar.itemtestfn(container, item, slot)\n    return item:HasTag("soul") and not item:HasTag("nosouljar")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"beard-sacks-webbers-beard",children:"Beard Sacks (Webber's Beard)"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"beard_sack_1"}),", ",(0,s.jsx)(e.code,{children:"beard_sack_2"}),", ",(0,s.jsx)(e.code,{children:"beard_sack_3"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Progressive storage capacity based on beard length\nparams.beard_sack_1 = {\n    widget = {\n        slotpos = { Vector3(0, 0, 0) },\n        slotbg = { { image = "inv_slot_morsel.tex" } },\n        animbank = "ui_beard_1x1",\n        animbuild = "ui_beard_1x1",\n        pos = Vector3(-82, 89, 0),\n        bottom_align_tip = -100,\n    },\n    type = "side_inv_behind",\n    acceptsstacks = true,\n    lowpriorityselection = true,\n}\n\nfunction params.beard_sack_1.itemtestfn(container, item, slot)\n    -- Accepts any edible items\n    for k, v in pairs(FOODGROUP.OMNI.types) do\n        if item:HasTag("edible_"..v) then\n            return true\n        end\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"equipment-containers",children:"Equipment Containers"}),"\n",(0,s.jsx)(e.h4,{id:"fishing-rod",children:"Fishing Rod"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"oceanfishingrod"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Fishing tackle attachment\nparams.oceanfishingrod = {\n    widget = {\n        slotpos = {\n            Vector3(0,   32 + 4,  0), -- Bobber slot\n            Vector3(0, -(32 + 4), 0), -- Lure slot\n        },\n        slotbg = {\n            { image = "fishing_slot_bobber.tex" },\n            { image = "fishing_slot_lure.tex" },\n        },\n    },\n    usespecificslotsforitems = true,\n    type = "hand_inv",\n    excludefromcrafting = true,\n}\n\nfunction params.oceanfishingrod.itemtestfn(container, item, slot)\n    return (slot == nil and (item:HasTag("oceanfishing_bobber") or item:HasTag("oceanfishing_lure")))\n        or (slot == 1 and item:HasTag("oceanfishing_bobber"))\n        or (slot == 2 and item:HasTag("oceanfishing_lure"))\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"slingshot-variants",children:"Slingshot Variants"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"slingshot"}),", ",(0,s.jsx)(e.code,{children:"slingshotex"}),", ",(0,s.jsx)(e.code,{children:"slingshot2"}),", ",(0,s.jsx)(e.code,{children:"slingshot2ex"}),", ",(0,s.jsx)(e.code,{children:"slingshot999ex"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Ammunition container with skill requirements\nfunction params.slingshot.itemtestfn(container, item, slot)\n    if item.REQUIRED_SKILL then\n        local owner\n        if TheWorld.ismastersim then\n            owner = container.inst.components.container:GetOpeners()[1]\n        elseif ThePlayer and container:IsOpenedBy(ThePlayer) then\n            owner = ThePlayer\n        end\n        \n        if owner and not (owner.components.skilltreeupdater and \n           owner.components.skilltreeupdater:IsActivated(item.REQUIRED_SKILL)) then\n            return false\n        end\n    end\n    return item:HasTag("slingshotammo")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"slingshot-modification-container",children:"Slingshot Modification Container"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"slingshotmodscontainer"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'params.slingshotmodscontainer = {\n    widget = {\n        slotpos = {\n            Vector3(220, 125, 0),   -- Band slot\n            Vector3(20, -60, 0),    -- Frame slot\n            Vector3(220, -150, 0),  -- Handle slot\n        },\n        slotbg = {\n            { image = "inv_slot_sketchy.tex", atlas = "images/hud2.xml" },\n            { image = "inv_slot_sketchy.tex", atlas = "images/hud2.xml" },\n            { image = "inv_slot_sketchy.tex", atlas = "images/hud2.xml" },\n        },\n        slotscale = 1.6,\n        slothighlightscale = 1.75,\n    },\n    usespecificslotsforitems = true,\n    acceptsstacks = false,\n    type = "cooker",\n    openlimit = 1,\n}\n\nfunction params.slingshotmodscontainer.itemtestfn(container, item, slot)\n    if slot == 1 then\n        return item:HasTag("slingshot_band")\n    elseif slot == 2 then\n        return item:HasTag("slingshot_frame")\n    elseif slot == 3 then\n        return item:HasTag("slingshot_handle")\n    elseif slot == nil then\n        return item:HasAnyTag("slingshot_band", "slingshot_frame", "slingshot_handle")\n    end\n    return false\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"antlion-hat",children:"Antlion Hat"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"antlionhat"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'params.antlionhat = {\n    widget = {\n        slotpos = { Vector3(0, 2, 0) },\n        slotbg = { { image = "turf_slot.tex", atlas = "images/hud2.xml" } },\n        animbank = "ui_antlionhat_1x1",\n        animbuild = "ui_antlionhat_1x1",\n        pos = Vector3(106, 40, 0),\n    },\n    type = "hand_inv",\n    excludefromcrafting = true,\n}\n\nfunction params.antlionhat.itemtestfn(container, item, slot)\n    return item:HasTag("groundtile") and item.tile\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"alter-guardian-hat",children:"Alter Guardian Hat"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"alterguardianhatshard"}),", ",(0,s.jsx)(e.code,{children:"alterguardianhat"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Shard version (1 slot)\nfunction params.alterguardianhatshard.itemtestfn(container, item, slot)\n    return item:HasTag("spore")\nend\n\n-- Full version (5 slots)\nlocal ALTERGUARDIANHAT_ITEMS = {"spore", "lunarseed"}\nfunction params.alterguardianhat.itemtestfn(container, item, slot)\n    return item:HasAnyTag(ALTERGUARDIANHAT_ITEMS)\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"specialized-containers",children:"Specialized Containers"}),"\n",(0,s.jsx)(e.h4,{id:"bundle-wrapper",children:"Bundle Wrapper"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"bundle_container"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Bundle creation interface\nfunction params.bundle_container.itemtestfn(container, item, slot)\n    return not (item:HasTag("irreplaceable") or item:HasTag("_container") or \n               item:HasTag("bundle") or item:HasTag("nobundling"))\nend\n\nfunction params.bundle_container.widget.buttoninfo.validfn(inst)\n    return inst.replica.container ~= nil and not inst.replica.container:IsEmpty() and \n           not inst.replica.container:IsReadOnlyContainer()\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"construction-containers",children:"Construction Containers"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"construction_container"}),", ",(0,s.jsx)(e.code,{children:"construction_repair_container"}),", ",(0,s.jsx)(e.code,{children:"construction_rebuild_container"}),", ",(0,s.jsx)(e.code,{children:"enable_shadow_rift_construction_container"}),", ",(0,s.jsx)(e.code,{children:"enable_lunar_rift_construction_container"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:"-- Construction material interface\nfunction params.construction_container.itemtestfn(container, item, slot)\n    local doer = container.inst.entity:GetParent()\n    return doer ~= nil\n        and doer.components.constructionbuilderuidata ~= nil\n        and doer.components.constructionbuilderuidata:GetIngredientForSlot(slot) == item.prefab\nend\n"})}),"\n",(0,s.jsx)(e.h4,{id:"woby-containers",children:"Woby Containers"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"wobysmall"}),", ",(0,s.jsx)(e.code,{children:"wobybig"}),", ",(0,s.jsx)(e.code,{children:"woby_rack_container"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Woby rack for drying items\nfunction params.woby_rack_container.itemtestfn(container, item, slot)\n    return item:HasTag("dryable")\n        or (TheWorld.ismastersim and (\n                item:GetTimeAlive() == 0 or -- Items perishing replaced by spoiled_food/fish\n                container.inst:GetTimeAlive() == 0 or -- Transferring items during woby transform\n                (   item.wobyrack_lastinfo and -- Failing to move items; return to slot\n                    item.wobyrack_lastinfo.container == container and\n                    item.wobyrack_lastinfo.slot == slot\n                )\n            ))\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"offering-pots",children:"Offering Pots"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"offering_pot"}),", ",(0,s.jsx)(e.code,{children:"offering_pot_upgraded"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.offering_pot.itemtestfn(container, item, slot)\n    return not container.inst:HasTag("burnt") and item.prefab == "kelp"\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"mushroom-lights",children:"Mushroom Lights"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"mushroom_light"}),", ",(0,s.jsx)(e.code,{children:"mushroom_light2"}),", ",(0,s.jsx)(e.code,{children:"yots_lantern_post"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.mushroom_light.itemtestfn(container, item, slot)\n    return (item:HasTag("lightbattery") or item:HasTag("lightcontainer")) and not container.inst:HasTag("burnt")\nend\n\n-- Enhanced version accepts spores too\nfunction params.mushroom_light2.itemtestfn(container, item, slot)\n    return (item:HasTag("lightbattery") or item:HasTag("spore") or item:HasTag("lightcontainer")) and not container.inst:HasTag("burnt")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"winter-tree-decorations",children:"Winter Tree Decorations"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"winter_tree"}),", ",(0,s.jsx)(e.code,{children:"winter_twiggytree"}),", ",(0,s.jsx)(e.code,{children:"winter_deciduoustree"}),", ",(0,s.jsx)(e.code,{children:"winter_palmconetree"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.winter_tree.itemtestfn(container, item, slot)\n    return item:HasTag("winter_ornament") and not container.inst:HasTag("burnt")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"merm-buildings",children:"Merm Buildings"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"merm_toolshed"}),", ",(0,s.jsx)(e.code,{children:"merm_toolshed_upgraded"}),", ",(0,s.jsx)(e.code,{children:"merm_armory"}),", ",(0,s.jsx)(e.code,{children:"merm_armory_upgraded"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Tool shed (twigs and rocks)\nfunction params.merm_toolshed.itemtestfn(container, item, slot)\n    return not container.inst:HasTag("burnt") and (\n        (slot == 1 and item.prefab == "twigs") or\n        (slot == 2 and item.prefab == "rocks") or\n        (slot == nil and (item.prefab == "twigs" or item.prefab == "rocks"))\n    )\nend\n\n-- Armory (logs and cut grass)\nfunction params.merm_armory.itemtestfn(container, item, slot)\n    return not container.inst:HasTag("burnt") and (\n        (slot == 1 and item.prefab == "log") or\n        (slot == 2 and item.prefab == "cutgrass") or\n        (slot == nil and (item.prefab == "log" or item.prefab == "cutgrass"))\n    )\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"pocket-watch",children:"Pocket Watch"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"pocketwatch"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.pocketwatch.itemtestfn(container, item, slot)\n    return item:HasTag("pocketwatchpart")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"book-station",children:"Book Station"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"bookstation"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.bookstation.itemtestfn(container, item, slot)\n    return item:HasTag("bookcabinet_item")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"tackle-containers",children:"Tackle Containers"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"tacklecontainer"}),", ",(0,s.jsx)(e.code,{children:"supertacklecontainer"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.tacklecontainer.itemtestfn(container, item, slot)\n    return item:HasTag("oceanfishing_bobber") or item:HasTag("oceanfishing_lure")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"halloween-tree",children:"Halloween Tree"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"livingtree_halloween"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.livingtree_halloween.itemtestfn(container, item, slot)\n    return item:HasTag("halloween_ornament") and not container.inst:HasTag("burnt")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"dragonfly-furnace",children:"Dragonfly Furnace"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"dragonflyfurnace"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.dragonflyfurnace.itemtestfn(container, item, slot)\n    return not item:HasTag("irreplaceable")\nend\n\nfunction params.dragonflyfurnace.widget.buttoninfo.fn(inst, doer)\n    if inst.components.container ~= nil then\n        BufferedAction(doer, inst, ACTIONS.INCINERATE):Do()\n    elseif inst.replica.container ~= nil and not inst.replica.container:IsBusy() then\n        SendRPCToServer(RPC.DoWidgetButtonAction, ACTIONS.INCINERATE.code, inst, ACTIONS.INCINERATE.mod_name)\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"balatro-machine",children:"Balatro Machine"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefab:"})," ",(0,s.jsx)(e.code,{children:"balatro_machine"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'params.balatro_machine = {\n    widget = {\n        slotpos = {\n            Vector3(0, 0, 0),\n            Vector3(68, 0, 0),\n            Vector3(68+68, 0, 0),\n            Vector3(68+68+68, 0, 0),\n            Vector3(68+68+68+68, 0, 0),\n        },\n        slotbg = {\n            { image = "sisturn_slot_petals.tex" },\n            { image = "sisturn_slot_petals.tex" },\n            { image = "sisturn_slot_petals.tex" },\n            { image = "sisturn_slot_petals.tex" },\n            { image = "sisturn_slot_petals.tex" },\n        },\n        buttoninfo = {\n            text = STRINGS.ACTIONS.ACTIVATE.GENERIC,\n            position = Vector3(68+68, -68, 0),\n        },\n    },\n    acceptsstacks = false,\n    type = "cooker",\n    openlimit = 1,\n}\n\nfunction params.balatro_machine.itemtestfn(container, item, slot)\n    return not container.inst:HasTag("burnt")\nend\n\nfunction params.balatro_machine.widget.buttoninfo.fn(inst, doer)\n    if inst.components.container ~= nil then\n        BufferedAction(doer, inst, ACTIONS.ACTIVATE_CONTAINER):Do()\n    elseif inst.replica.container ~= nil and not inst.replica.container:IsBusy() then\n        SendRPCToServer(RPC.DoWidgetButtonAction, ACTIONS.ACTIVATE_CONTAINER.code, inst, ACTIONS.ACTIVATE_CONTAINER.mod_name)\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"webbers-beard-sacks",children:"Webber's Beard Sacks"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Prefabs:"})," ",(0,s.jsx)(e.code,{children:"beard_sack_1"}),", ",(0,s.jsx)(e.code,{children:"beard_sack_2"}),", ",(0,s.jsx)(e.code,{children:"beard_sack_3"})]}),"\n",(0,s.jsx)(e.p,{children:"These containers represent Webber's growing beard functionality, providing increasing storage capacity:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Level 1 beard (1 slot)\nparams.beard_sack_1 = {\n    widget = {\n        slotpos = { Vector3(0, 0, 0) },\n        slotbg = { { image = "inv_slot_morsel.tex" } },\n        animbank = "ui_beard_1x1",\n        animbuild = "ui_beard_1x1",\n        pos = Vector3(-82, 89, 0),\n        bottom_align_tip = -100,\n    },\n    type = "side_inv_behind",\n    acceptsstacks = true,\n    lowpriorityselection = true,\n}\n\n-- Level 2 beard (2 slots)\nparams.beard_sack_2 = {\n    widget = {\n        slotpos = {\n            Vector3(-(64 + 12)/2, 0, 0),\n            Vector3( (64 + 12)/2, 0, 0),\n        },\n        slotbg = {\n            { image = "inv_slot_morsel.tex" },\n            { image = "inv_slot_morsel.tex" },\n        },\n        animbank = "ui_beard_2x1",\n        animbuild = "ui_beard_2x1",\n        pos = Vector3(-82, 89, 0),\n        bottom_align_tip = -100,\n    },\n    type = "side_inv_behind",\n    acceptsstacks = true,\n    lowpriorityselection = true,\n}\n\n-- Level 3 beard (3 slots)\nparams.beard_sack_3 = {\n    widget = {\n        slotpos = {\n            Vector3(-(64 + 12), 0, 0),\n            Vector3(0, 0, 0),\n            Vector3(64 + 12, 0, 0),\n        },\n        slotbg = {\n            { image = "inv_slot_morsel.tex" },\n            { image = "inv_slot_morsel.tex" },\n            { image = "inv_slot_morsel.tex" },\n        },\n        animbank = "ui_beard_3x1",\n        animbuild = "ui_beard_3x1",\n        pos = Vector3(-82, 89, 0),\n        bottom_align_tip = -100,\n    },\n    type = "side_inv_behind",\n    acceptsstacks = true,\n    lowpriorityselection = true,\n}\n\nfunction params.beard_sack_1.itemtestfn(container, item, slot)\n    -- Accepts any edible items\n    for k, v in pairs(FOODGROUP.OMNI.types) do\n        if item:HasTag("edible_"..v) then\n            return true\n        end\n    end\nend\n\n-- Shared item test function for all beard levels\nparams.beard_sack_2.itemtestfn = params.beard_sack_1.itemtestfn\nparams.beard_sack_3.itemtestfn = params.beard_sack_1.itemtestfn\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'params.balatro_machine = {\n    widget = {\n        slotpos = {\n            Vector3(0, 0, 0),\n            Vector3(68, 0, 0),\n            Vector3(68+68, 0, 0),\n            Vector3(68+68+68, 0, 0),\n            Vector3(68+68+68+68, 0, 0),\n        },\n        buttoninfo = {\n            text = STRINGS.ACTIONS.ACTIVATE.GENERIC,\n            position = Vector3(68+68, -68, 0),\n        },\n    },\n    acceptsstacks = false,\n    type = "cooker",\n    openlimit = 1,\n}\n\nfunction params.balatro_machine.itemtestfn(container, item, slot)\n    return not container.inst:HasTag("burnt")\nend\n'})}),"\n",(0,s.jsx)(e.h4,{id:"additional-specialized-containers",children:"Additional Specialized Containers"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Elixir Container"})," (Wendy):"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.elixir_container.itemtestfn(container, item, slot)\n    return item:HasTag("ghostlyelixir") or item:HasTag("ghostflower")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Battle Song Container"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.battlesong_container.itemtestfn(container, item, slot)\n    return item:HasTag("battlesong")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Bearger Fur Sack"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.beargerfur_sack.itemtestfn(container, item, slot)\n    return item:HasTag("beargerfur_sack_valid") or item:HasTag("preparedfood")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Houndstooth Blowpipe"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.houndstooth_blowpipe.itemtestfn(container, item, slot)\n    return item:HasTag("blowpipeammo")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Slingshot Ammo Container"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.slingshotammo_container.itemtestfn(container, item, slot)\n    return item:HasTag("slingshotammo")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Ocean Trawler"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.ocean_trawler.itemtestfn(container, item, slot)\n    return item:HasTag("cookable") or item:HasTag("oceanfish")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"YOTb Sewing Machine"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.yotb_sewingmachine.itemtestfn(container, item, slot)\n    return item:HasTag("yotb_pattern_fragment")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Elixir Container"})," (Wendy):"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.elixir_container.itemtestfn(container, item, slot)\n    return item:HasTag("ghostlyelixir") or item:HasTag("ghostflower")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Battle Song Container"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.battlesong_container.itemtestfn(container, item, slot)\n    return item:HasTag("battlesong")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Bearger Fur Sack"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.beargerfur_sack.itemtestfn(container, item, slot)\n    return item:HasTag("beargerfur_sack_valid") or item:HasTag("preparedfood")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Houndstooth Blowpipe"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.houndstooth_blowpipe.itemtestfn(container, item, slot)\n    return item:HasTag("blowpipeammo")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Slingshot Ammo Container"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.slingshotammo_container.itemtestfn(container, item, slot)\n    return item:HasTag("slingshotammo")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Ocean Trawler"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.ocean_trawler.itemtestfn(container, item, slot)\n    return item:HasTag("cookable") or item:HasTag("oceanfish")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Teleportato Base"})," (Legacy):"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.teleportato_base.itemtestfn(container, item, slot)\n    return not item:HasTag("nonpotatable")\nend\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Shadow/Rabbit King Horn Containers"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.shadow_container.itemtestfn(container, item, slot)\n    return not item:HasTag("irreplaceable")\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"event-specific-containers-quagmire",children:"Event-Specific Containers (Quagmire)"}),"\n",(0,s.jsx)(e.p,{children:"These containers are used during the Quagmire event:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Quagmire Cooking Containers:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"quagmire_pot"}),", ",(0,s.jsx)(e.code,{children:"quagmire_pot_small"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"quagmire_casseroledish"}),", ",(0,s.jsx)(e.code,{children:"quagmire_casseroledish_small"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"quagmire_grill"}),", ",(0,s.jsx)(e.code,{children:"quagmire_grill_small"})]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"quagmire_pot_syrup"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Quagmire Backpacks:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"quagmire_backpack_small"})," (4 slots)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"quagmire_backpack"})," (8 slots)"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'function params.quagmire_pot.itemtestfn(container, item, slot)\n    return item:HasTag("quagmire_stewable")\n        and item.prefab ~= "quagmire_sap"\n        and ((item.components.inventoryitem ~= nil and not item.components.inventoryitem:IsHeld()) or\n            not (item.prefab == "spoiled_food" or item:HasTag("preparedfood") or item:HasTag("overcooked") or container.inst:HasTag("takeonly")))\nend\n\nfunction params.quagmire_pot_syrup.itemtestfn(container, item, slot)\n    return item:HasTag("quagmire_stewable")\n        and ((item.components.inventoryitem ~= nil and not item.components.inventoryitem:IsHeld()) or\n            (item.prefab == "quagmire_sap" and not container.inst:HasTag("takeonly")))\nend\n'})}),"\n",(0,s.jsx)(e.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,s.jsx)(e.h3,{id:"priority-systems",children:"Priority Systems"}),"\n",(0,s.jsx)(e.p,{children:"Specialized containers can implement priority functions for automatic item sorting:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Seed pouch prioritizes seeds\nfunction params.seedpouch.itemtestfn(container, item, slot)\n    return item.prefab == "seeds" or string.match(item.prefab, "_seeds") or item:HasTag("treeseed")\nend\n\nparams.seedpouch.priorityfn = params.seedpouch.itemtestfn\n\n-- Candy bag prioritizes Halloween items\nfunction params.candybag.itemtestfn(container, item, slot)\n    return item:HasTag("halloweencandy") or item:HasTag("halloween_ornament") or string.sub(item.prefab, 1, 8) == "trinket_"\nend\n\nparams.candybag.priorityfn = params.candybag.itemtestfn\n'})}),"\n",(0,s.jsx)(e.h3,{id:"deprecated-containers",children:"Deprecated Containers"}),"\n",(0,s.jsx)(e.p,{children:"Some containers are marked as deprecated but maintained for compatibility:"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Shadow Chester"})," - Used by Dragonfly Chest and Minotaur Chest:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'--Deprecated; keep definition for dragonflychest, minotaurchest, mods,\n--and also for legacy save data\nparams.shadowchester = {\n    widget = {\n        slotpos = {}, -- 3x4 grid\n        animbank = "ui_chester_shadow_3x4",\n        animbuild = "ui_chester_shadow_3x4",\n        pos = Vector3(0, 220, 0),\n        side_align_tip = 160,\n    },\n    type = "chest",\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,s.jsx)(e.h3,{id:"creating-custom-containers",children:"Creating Custom Containers"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Define new container configuration\nparams.my_custom_container = {\n    widget = {\n        slotpos = {\n            Vector3(-37.5, 32, 0),\n            Vector3(37.5, 32, 0),\n            Vector3(-37.5, -32, 0),\n            Vector3(37.5, -32, 0),\n        },\n        animbank = "ui_chest_2x2",\n        animbuild = "ui_chest_2x2",\n        pos = Vector3(200, 0, 0),\n        side_align_tip = 120,\n    },\n    type = "chest",\n}\n\n-- Add item validation\nfunction params.my_custom_container.itemtestfn(container, item, slot)\n    return item:HasTag("my_custom_tag")\nend\n\n-- Apply to prefab\nlocal function OnInit(inst)\n    containers.widgetsetup(inst.components.container, "my_custom_container")\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"conditional-item-acceptance",children:"Conditional Item Acceptance"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Dynamic item testing based on container state\nfunction params.conditional_container.itemtestfn(container, item, slot)\n    -- Check container upgrade level\n    if container.inst:HasTag("upgraded") then\n        return item:HasTag("advanced_material")\n    else\n        return item:HasTag("basic_material")\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"complex-button-actions",children:"Complex Button Actions"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Multi-stage button validation and execution\nfunction params.complex_container.widget.buttoninfo.validfn(inst)\n    local container = inst.replica.container\n    if not container or container:IsEmpty() then\n        return false\n    end\n    \n    -- Check for specific item combinations\n    local has_ingredient_a = container:Has("ingredient_a", 1)\n    local has_ingredient_b = container:Has("ingredient_b", 1)\n    \n    return has_ingredient_a and has_ingredient_b\nend\n\nfunction params.complex_container.widget.buttoninfo.fn(inst, doer)\n    -- Custom action execution with confirmation dialog\n    if inst.components.container ~= nil then\n        BufferedAction(doer, inst, ACTIONS.CUSTOM_ACTION):Do()\n    elseif inst.replica.container ~= nil and not inst.replica.container:IsBusy() then\n        SendRPCToServer(RPC.DoWidgetButtonAction, ACTIONS.CUSTOM_ACTION.code, inst, ACTIONS.CUSTOM_ACTION.mod_name)\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsxs)(e.p,{children:["The containers system calculates ",(0,s.jsx)(e.code,{children:"MAXITEMSLOTS"})," automatically at module initialization:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:"for k, v in pairs(params) do\n    containers.MAXITEMSLOTS = math.max(containers.MAXITEMSLOTS, v.widget.slotpos ~= nil and #v.widget.slotpos or 0)\nend\n"})}),"\n",(0,s.jsx)(e.p,{children:"This ensures proper memory allocation for the largest possible container configuration."}),"\n",(0,s.jsx)(e.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./components/",children:"Components"})})," - Container component implementation"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./actions.md",children:"Actions"})})," - Container interaction actions"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./recipes.md",children:"Recipes"})})," - Crafting integration with containers"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./networking.md",children:"Networking"})})," - Container state synchronization"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./prefabs.md",children:"Prefabs"})})," - Container prefab definitions"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./cooking.md",children:"Cooking"})})," - Cooking system integration"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"./player.md",children:"Player"})})," - Player inventory interactions"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(e.p,{children:["\ud83d\udfe2 ",(0,s.jsx)(e.strong,{children:"Stable API"}),": Container configuration structure is established and stable across updates."]}),"\n",(0,s.jsxs)(e.p,{children:["\u26a0\ufe0f ",(0,s.jsx)(e.strong,{children:"Performance"}),": Large containers with complex ",(0,s.jsx)(e.code,{children:"itemtestfn"})," can impact performance during item validation."]}),"\n",(0,s.jsxs)(e.p,{children:["\ud83d\udd27 ",(0,s.jsx)(e.strong,{children:"Modding"}),": Custom containers can be added by extending the ",(0,s.jsx)(e.code,{children:"params"})," table and ensuring proper widget setup."]}),"\n",(0,s.jsxs)(e.p,{children:["\ud83d\udce6 ",(0,s.jsx)(e.strong,{children:"Memory"}),": Container slot positions are pre-calculated during module load for optimal performance."]}),"\n",(0,s.jsxs)(e.p,{children:["\ud83c\udfaf ",(0,s.jsx)(e.strong,{children:"Skill Integration"}),": Some containers check player skill tree progression for expanded functionality."]}),"\n",(0,s.jsxs)(e.p,{children:["\u2b50 ",(0,s.jsx)(e.strong,{children:"Event Containers"}),": Quagmire containers are event-specific and may not be available in standard gameplay."]})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);