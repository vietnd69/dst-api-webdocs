"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[9601],{17529:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"game-scripts/core-systems/networking-communication/chat-commands/voteutil","title":"VoteUtil","description":"Utility functions for vote tallying and validation in user vote commands","source":"@site/docs/game-scripts/core-systems/networking-communication/chat-commands/voteutil.md","sourceDirName":"game-scripts/core-systems/networking-communication/chat-commands","slug":"/game-scripts/core-systems/networking-communication/chat-commands/voteutil","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/voteutil","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"voteutil","title":"VoteUtil","description":"Utility functions for vote tallying and validation in user vote commands","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"User Commands System","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/usercommands"},"next":{"title":"Word Filter","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/wordfilter"}}');var o=t(74848),i=t(28453);const l={id:"voteutil",title:"VoteUtil",description:"Utility functions for vote tallying and validation in user vote commands",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},r="VoteUtil",a={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Vote Results Data Structure",id:"vote-results-data-structure",level:2},{value:"Vote Result Functions",id:"vote-result-functions",level:2},{value:"DefaultUnanimousVote(params, voteresults)",id:"defaultunanimousvote",level:3},{value:"DefaultMajorityVote(params, voteresults)",id:"defaultmajorityvote",level:3},{value:"YesNoUnanimousVote(params, voteresults)",id:"yesnounanimousvote",level:3},{value:"YesNoMajorityVote(params, voteresults)",id:"yesnomajorityvote",level:3},{value:"Vote Validation Functions",id:"vote-validation-functions",level:2},{value:"DefaultCanStartVote(command, caller, targetid)",id:"defaultcanstartvote",level:3},{value:"Custom Vote Validation",id:"custom-vote-validation",level:2},{value:"Vote Command Integration",id:"vote-command-integration",level:2},{value:"Complete Vote Command Example",id:"complete-vote-command-example",level:3},{value:"Vote Command Properties",id:"vote-command-properties",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Player Management Votes",id:"player-management-votes",level:3},{value:"Server Management Votes",id:"server-management-votes",level:3},{value:"World State Votes",id:"world-state-votes",level:3},{value:"Vote Result Decision Matrix",id:"vote-result-decision-matrix",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Vote Function Selection",id:"vote-function-selection",level:3},{value:"Custom Validation Guidelines",id:"custom-validation-guidelines",level:3},{value:"Vote Timeout Recommendations",id:"vote-timeout-recommendations",level:3},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"voteutil",children:"VoteUtil"})}),"\n",(0,o.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Build Version"}),(0,o.jsx)(n.th,{children:"Change Date"}),(0,o.jsx)(n.th,{children:"Change Type"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"676042"}),(0,o.jsx)(n.td,{children:"2025-06-21"}),(0,o.jsx)(n.td,{children:"stable"}),(0,o.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"voteutil.lua"})," module provides utility functions for implementing vote systems in Don't Starve Together. It contains pre-built vote tallying algorithms and validation functions that can be used in user vote commands. The module supports both unanimous and majority vote types, with specialized variants for Yes/No voting patterns."]}),"\n",(0,o.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Define a custom vote command using VoteUtil functions\nAddUserCommand("kickplayer", {\n    prettyname = "Kick Player",\n    desc = "Vote to kick a player from the server",\n    permission = COMMAND_PERMISSION.VOTE,\n    vote = true,\n    votetimeout = 30,\n    voteresultfn = VoteUtil.YesNoMajorityVote,\n    votecanstartfn = VoteUtil.DefaultCanStartVote,\n    serverfn = function(params)\n        -- Implementation when vote passes\n    end,\n})\n'})}),"\n",(0,o.jsx)(n.h2,{id:"vote-results-data-structure",children:"Vote Results Data Structure"}),"\n",(0,o.jsxs)(n.p,{children:["All vote result functions receive a ",(0,o.jsx)(n.code,{children:"voteresults"})," table with the following structure:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"voteresults = {\n    total_not_voted = number,  -- Players who abstained after timeout\n    total_voted = number,      -- Players who cast votes\n    total = number,           -- Total eligible voters\n    options = {\n        [1] = number,         -- 'Yes' vote count  \n        [2] = number,         -- 'No' vote count\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Important Notes:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Target users who cannot vote are excluded from all counts"}),"\n",(0,o.jsx)(n.li,{children:"Minimum player count validation is handled elsewhere"}),"\n",(0,o.jsx)(n.li,{children:"Vote result functions only need to determine the winning outcome"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"vote-result-functions",children:"Vote Result Functions"}),"\n",(0,o.jsx)(n.h3,{id:"defaultunanimousvote",children:"DefaultUnanimousVote(params, voteresults)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Status:"})," ",(0,o.jsx)(n.code,{children:"stable"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description:"}),"\nRequires all votes to be for the same option. Returns the result only if every vote cast was for the same choice."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," (table): Vote command parameters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"voteresults"})," (table): Vote tallying results"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"(number, number): Option index and vote count if unanimous, nil otherwise"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- All 5 players vote 'Yes'\nlocal voteresults = {\n    total_voted = 5,\n    total_not_voted = 0,\n    total = 5,\n    options = {5, 0}  -- 5 Yes, 0 No\n}\n\nlocal result, count = VoteUtil.DefaultUnanimousVote({}, voteresults)\n-- result = 1, count = 5 (unanimous Yes)\n\n-- Mixed voting scenario\nlocal voteresults2 = {\n    total_voted = 5,\n    total_not_voted = 0,\n    total = 5,\n    options = {3, 2}  -- 3 Yes, 2 No\n}\n\nlocal result2, count2 = VoteUtil.DefaultUnanimousVote({}, voteresults2)\n-- result2 = nil, count2 = nil (not unanimous)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"defaultmajorityvote",children:"DefaultMajorityVote(params, voteresults)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Status:"})," ",(0,o.jsx)(n.code,{children:"stable"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description:"}),"\nReturns the option with the most votes. In case of a tie, no winner is declared."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," (table): Vote command parameters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"voteresults"})," (table): Vote tallying results"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"(number, number): Winning option index and vote count, or (nil, nil) for ties"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- Clear majority\nlocal voteresults = {\n    total_voted = 7,\n    total_not_voted = 1,\n    total = 8,\n    options = {5, 2}  -- 5 Yes, 2 No\n}\n\nlocal result, count = VoteUtil.DefaultMajorityVote({}, voteresults)\n-- result = 1, count = 5 (Yes wins)\n\n-- Tie scenario\nlocal voteresults2 = {\n    total_voted = 6,\n    total_not_voted = 0,\n    total = 6,\n    options = {3, 3}  -- 3 Yes, 3 No\n}\n\nlocal result2, count2 = VoteUtil.DefaultMajorityVote({}, voteresults2)\n-- result2 = nil, count2 = nil (tie)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"yesnounanimousvote",children:"YesNoUnanimousVote(params, voteresults)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Status:"})," ",(0,o.jsx)(n.code,{children:"stable"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description:"}),"\nSpecialized unanimous vote that only returns a result for 'Yes' outcomes. Useful for votes where only positive consensus should trigger action."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," (table): Vote command parameters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"voteresults"})," (table): Vote tallying results"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"(number, number): Returns (1, count) for unanimous Yes, nil otherwise"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- Unanimous Yes\nlocal voteresults = {\n    total_voted = 4,\n    total_not_voted = 0,\n    total = 4,\n    options = {4, 0}  -- 4 Yes, 0 No\n}\n\nlocal result, count = VoteUtil.YesNoUnanimousVote({}, voteresults)\n-- result = 1, count = 4 (action will be taken)\n\n-- Unanimous No\nlocal voteresults2 = {\n    total_voted = 4,\n    total_not_voted = 0,\n    total = 4,\n    options = {0, 4}  -- 0 Yes, 4 No\n}\n\nlocal result2, count2 = VoteUtil.YesNoUnanimousVote({}, voteresults2)\n-- result2 = nil, count2 = nil (no action taken)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"yesnomajorityvote",children:"YesNoMajorityVote(params, voteresults)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Status:"})," ",(0,o.jsx)(n.code,{children:"stable"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description:"}),"\nSpecialized majority vote that only returns a result for 'Yes' outcomes. The vote must have both a majority AND that majority must be 'Yes'."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," (table): Vote command parameters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"voteresults"})," (table): Vote tallying results"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"(number, number): Returns (1, count) for Yes majority, nil otherwise"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- Yes majority\nlocal voteresults = {\n    total_voted = 7,\n    total_not_voted = 1,\n    total = 8,\n    options = {5, 2}  -- 5 Yes, 2 No\n}\n\nlocal result, count = VoteUtil.YesNoMajorityVote({}, voteresults)\n-- result = 1, count = 5 (action will be taken)\n\n-- No majority\nlocal voteresults2 = {\n    total_voted = 7,\n    total_not_voted = 1,\n    total = 8,\n    options = {2, 5}  -- 2 Yes, 5 No\n}\n\nlocal result2, count2 = VoteUtil.YesNoMajorityVote({}, voteresults2)\n-- result2 = nil, count2 = nil (no action taken)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"vote-validation-functions",children:"Vote Validation Functions"}),"\n",(0,o.jsx)(n.h3,{id:"defaultcanstartvote",children:"DefaultCanStartVote(command, caller, targetid)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Status:"})," ",(0,o.jsx)(n.code,{children:"stable"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description:"}),"\nDefault validation function that always allows votes to start. This is used as a base implementation for custom vote validation logic."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"command"})," (string): The vote command being started"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"caller"})," (string): Player ID of the vote initiator"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"targetid"})," (string): Target player ID (if applicable)"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"(boolean, string): Success flag and optional failure reason"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local can_start, reason = VoteUtil.DefaultCanStartVote("kickplayer", "KU_player1", "KU_player2")\n-- can_start = true, reason = nil (always allows)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"custom-vote-validation",children:"Custom Vote Validation"}),"\n",(0,o.jsx)(n.p,{children:"You can create custom vote validation functions by following the same pattern:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Example: Prevent votes during night\nfunction CannotStartVoteAtNight(command, caller, targetid)\n    if TheWorld.state.isnight then\n        return false, "NIGHT"  -- Custom fail reason for UI tooltip\n    end\n    return true, nil\nend\n\n-- Add custom tooltip for the fail reason\nSTRINGS.UI.PLAYERSTATUSSCREEN.VOTECANNOTSTART["NIGHT"] = "Can\'t start a vote at night."\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Important Constraints:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Validation logic ",(0,o.jsx)(n.strong,{children:"MUST"})," be valid on clients"]}),"\n",(0,o.jsx)(n.li,{children:"Do not re-validate minimum player count (handled elsewhere)"}),"\n",(0,o.jsx)(n.li,{children:"Use only game state that is synchronized to clients"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"vote-command-integration",children:"Vote Command Integration"}),"\n",(0,o.jsx)(n.h3,{id:"complete-vote-command-example",children:"Complete Vote Command Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("restartserver", {\n    prettyname = "Restart Server",\n    desc = "Vote to restart the server",\n    permission = COMMAND_PERMISSION.VOTE,\n    vote = true,\n    votetimeout = 45,\n    minplayers = 3,\n    voteresultfn = VoteUtil.YesNoUnanimousVote,  -- Requires unanimous Yes\n    votecanstartfn = function(command, caller, targetid)\n        -- Custom validation: only during day\n        if TheWorld.state.isnight then\n            return false, "NIGHT"\n        end\n        return true, nil\n    end,\n    serverfn = function(params)\n        print("Server restart vote passed - restarting...")\n        c_shutdown(true)  -- Restart server\n    end,\n})\n'})}),"\n",(0,o.jsx)(n.h3,{id:"vote-command-properties",children:"Vote Command Properties"}),"\n",(0,o.jsx)(n.p,{children:"When using VoteUtil functions, your vote command should include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"vote = true"}),": Mark as a vote command"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"votetimeout"}),": Duration in seconds (typically 30-60)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"minplayers"}),": Minimum players required to start vote"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"voteresultfn"}),": One of the VoteUtil result functions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"votecanstartfn"}),": Validation function (optional)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"serverfn"}),": Action to take when vote passes"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"player-management-votes",children:"Player Management Votes"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Kick player vote\nAddUserCommand("kick", {\n    prettyname = "Kick Player",\n    desc = "Vote to kick a player",\n    permission = COMMAND_PERMISSION.VOTE,\n    vote = true,\n    votetimeout = 30,\n    minplayers = 3,\n    voteresultfn = VoteUtil.YesNoMajorityVote,\n    votecanstartfn = VoteUtil.DefaultCanStartVote,\n    serverfn = function(params)\n        TheNet:Kick(params.target)\n    end,\n})\n'})}),"\n",(0,o.jsx)(n.h3,{id:"server-management-votes",children:"Server Management Votes"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Pause/unpause vote\nAddUserCommand("pause", {\n    prettyname = "Pause Game",\n    desc = "Vote to pause/unpause the game", \n    permission = COMMAND_PERMISSION.VOTE,\n    vote = true,\n    votetimeout = 20,\n    voteresultfn = VoteUtil.DefaultMajorityVote,\n    serverfn = function(params)\n        TheNet:SetServerPaused(not TheNet:GetServerIsPaused())\n    end,\n})\n'})}),"\n",(0,o.jsx)(n.h3,{id:"world-state-votes",children:"World State Votes"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Skip day/night vote\nAddUserCommand("skiptime", {\n    prettyname = "Skip Time",\n    desc = "Vote to skip to next day/night",\n    permission = COMMAND_PERMISSION.VOTE,\n    vote = true,\n    votetimeout = 25,\n    voteresultfn = VoteUtil.YesNoMajorityVote,\n    votecanstartfn = function(command, caller, targetid)\n        -- Prevent spam voting\n        if GetTime() - (last_time_vote or 0) < 300 then  -- 5 minute cooldown\n            return false, "COOLDOWN"\n        end\n        return true, nil\n    end,\n    serverfn = function(params)\n        last_time_vote = GetTime()\n        if TheWorld.state.isday then\n            TheWorld:PushEvent("ms_advanceseason", {amount = 0.75})  -- Skip to night\n        else\n            TheWorld:PushEvent("ms_advanceseason", {amount = 0.25})  -- Skip to day\n        end\n    end,\n})\n'})}),"\n",(0,o.jsx)(n.h2,{id:"vote-result-decision-matrix",children:"Vote Result Decision Matrix"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Vote Type"}),(0,o.jsx)(n.th,{children:"All Yes"}),(0,o.jsx)(n.th,{children:"All No"}),(0,o.jsx)(n.th,{children:"Mixed"}),(0,o.jsx)(n.th,{children:"Tie"}),(0,o.jsx)(n.th,{children:"No Votes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"DefaultUnanimousVote"}),(0,o.jsx)(n.td,{children:"Yes \u2713"}),(0,o.jsx)(n.td,{children:"No \u2713"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"DefaultMajorityVote"}),(0,o.jsx)(n.td,{children:"Yes \u2713"}),(0,o.jsx)(n.td,{children:"No \u2713"}),(0,o.jsx)(n.td,{children:"Winner \u2713"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"YesNoUnanimousVote"}),(0,o.jsx)(n.td,{children:"Yes \u2713"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"YesNoMajorityVote"}),(0,o.jsx)(n.td,{children:"Yes \u2713"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"Yes/nil"}),(0,o.jsx)(n.td,{children:"nil"}),(0,o.jsx)(n.td,{children:"nil"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"vote-function-selection",children:"Vote Function Selection"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.strong,{children:"YesNoUnanimousVote"})," for critical actions (restarts, major changes)"]}),"\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.strong,{children:"YesNoMajorityVote"})," for player management (kicks, bans)"]}),"\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.strong,{children:"DefaultMajorityVote"})," for binary choices where either outcome is valid"]}),"\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.strong,{children:"DefaultUnanimousVote"})," for consensus-required decisions"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"custom-validation-guidelines",children:"Custom Validation Guidelines"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Keep validation logic simple and fast"}),"\n",(0,o.jsx)(n.li,{children:"Only use game state available on clients"}),"\n",(0,o.jsx)(n.li,{children:"Provide clear, translatable failure reasons"}),"\n",(0,o.jsx)(n.li,{children:"Consider implementing cooldowns to prevent vote spam"}),"\n",(0,o.jsx)(n.li,{children:"Test validation logic on both server and client"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"vote-timeout-recommendations",children:"Vote Timeout Recommendations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Player kicks: 30-45 seconds"}),"\n",(0,o.jsx)(n.li,{children:"Server restarts: 45-60 seconds"}),"\n",(0,o.jsx)(n.li,{children:"Minor changes: 20-30 seconds"}),"\n",(0,o.jsx)(n.li,{children:"Emergency actions: 15-20 seconds"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/usercommands",children:"UserCommands"}),": Command system that integrates with vote utilities"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"./networking.md",children:"Networking"}),": Client-server synchronization for vote state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"./constants.md",children:"Constants"}),": Command permission levels and vote constants"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const o={},i=s.createContext(o);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);