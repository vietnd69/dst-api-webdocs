"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[8475],{4761:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"community/pr-template","title":"Pull Request Template","description":"When submitting a pull request to the Don\'t Starve Together API Documentation, please use the following template:","source":"@site/docs/community/pr-template.md","sourceDirName":"community","slug":"/community/pr-template","permalink":"/dst-api-webdocs/docs/community/pr-template","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"pr-template","title":"Pull Request Template","sidebar_position":3}}');var a=t(4848),r=t(8453);const s={id:"pr-template",title:"Pull Request Template",sidebar_position:3},i="Pull Request Template",l={},d=[{value:"Example Pull Request",id:"example-pull-request",level:2},{value:"After Submitting a Pull Request",id:"after-submitting-a-pull-request",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"pull-request-template",children:"Pull Request Template"})}),"\n",(0,a.jsx)(n.p,{children:"When submitting a pull request to the Don't Starve Together API Documentation, please use the following template:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"## Description\n\n[Provide a brief description of the changes you've made]\n\n## Type of Change\n\n- [ ] New documentation\n- [ ] Documentation update/improvement\n- [ ] Bug fix (incorrect information)\n- [ ] Code example improvement\n- [ ] Other (please specify)\n\n## Areas Changed\n\n- [ ] Component documentation\n- [ ] Core systems documentation\n- [ ] Examples/tutorials\n- [ ] Getting started guides\n- [ ] Localization documentation\n- [ ] Other (please specify)\n\n## Checklist\n\n- [ ] I have followed the [documentation standards](documentation-standards.md)\n- [ ] I have checked for spelling and grammatical errors\n- [ ] I have verified that code examples work correctly\n- [ ] I have tested the changes locally using `npm start`\n- [ ] I have added appropriate cross-references to related documentation\n\n## Additional Information\n\n[Any additional information, context, or screenshots that might be helpful]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-pull-request",children:"Example Pull Request"}),"\n",(0,a.jsx)(n.p,{children:"Here's an example of a well-formatted pull request:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"## Description\n\nAdded documentation for the Workable component, including all properties, methods, and events. Also included examples of how to create workable objects like trees and rocks.\n\n## Type of Change\n\n- [x] New documentation\n- [ ] Documentation update/improvement\n- [ ] Bug fix (incorrect information)\n- [ ] Code example improvement\n- [ ] Other (please specify)\n\n## Areas Changed\n\n- [x] Component documentation\n- [ ] Core systems documentation\n- [ ] Examples/tutorials\n- [ ] Getting started guides\n- [ ] Localization documentation\n- [ ] Other (please specify)\n\n## Checklist\n\n- [x] I have followed the [documentation standards](documentation-standards.md)\n- [x] I have checked for spelling and grammatical errors\n- [x] I have verified that code examples work correctly\n- [x] I have tested the changes locally using `npm start`\n- [x] I have added appropriate cross-references to related documentation\n\n## Additional Information\n\nThis completes the documentation for all harvesting-related components (Workable, Pickable, and Harvestable).\n"})}),"\n",(0,a.jsx)(n.h2,{id:"after-submitting-a-pull-request",children:"After Submitting a Pull Request"}),"\n",(0,a.jsx)(n.p,{children:"After submitting your pull request:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Wait for Review"}),": A maintainer will review your changes"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Address Feedback"}),": Make any requested changes"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Approval and Merge"}),": Once approved, your changes will be merged into the main branch"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Deployment"}),": The documentation site will be automatically updated"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Thank you for contributing to the Don't Starve Together API Documentation!"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(6540);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);