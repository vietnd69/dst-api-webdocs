"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6425],{5346:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api-vanilla/recipes/cooking","title":"Cooking Recipes","description":"The cooking system allows players to combine ingredients in cooking stations to create food items with various effects.","source":"@site/docs/api-vanilla/recipes/cooking.md","sourceDirName":"api-vanilla/recipes","slug":"/api-vanilla/recipes/cooking","permalink":"/dst-api-webdocs/docs/api-vanilla/recipes/cooking","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"cooking","title":"Cooking Recipes","sidebar_position":3},"sidebar":"docs","previous":{"title":"Crafting Recipes","permalink":"/dst-api-webdocs/docs/api-vanilla/recipes/crafting"},"next":{"title":"State Graphs","permalink":"/dst-api-webdocs/docs/category/state-graphs"}}');var t=i(4848),o=i(8453);const r={id:"cooking",title:"Cooking Recipes",sidebar_position:3},c="Cooking Recipes",a={},d=[{value:"Cooking Stations",id:"cooking-stations",level:2},{value:"Recipe Definition",id:"recipe-definition",level:2},{value:"Ingredient System",id:"ingredient-system",level:2},{value:"Recipe Testing",id:"recipe-testing",level:2},{value:"Registration Functions",id:"registration-functions",level:2},{value:"Recipe Cards",id:"recipe-cards",level:2},{value:"API Functions",id:"api-functions",level:2},{value:"Common Cooking Patterns",id:"common-cooking-patterns",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cooking-recipes",children:"Cooking Recipes"})}),"\n",(0,t.jsx)(n.p,{children:"The cooking system allows players to combine ingredients in cooking stations to create food items with various effects."}),"\n",(0,t.jsx)(n.h2,{id:"cooking-stations",children:"Cooking Stations"}),"\n",(0,t.jsx)(n.p,{children:"There are several cooking stations in the game:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Crock Pot"})," - Standard cooking station"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Portable Crock Pot"})," - Warly's portable version"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Portable Seasoning Station"})," - For applying spices to food"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lunar Forge"})," - For special lunar recipes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Shadow Forge"})," - For special shadow recipes"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"recipe-definition",children:"Recipe Definition"}),"\n",(0,t.jsx)(n.p,{children:"Cooking recipes are defined as Lua tables with specific properties:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local recipe = {\n    name = "butterflymuffin",                      -- Recipe identifier\n    test = function(cooker, names, tags) ... end,  -- Function to test if ingredients match recipe\n    priority = 1,                                  -- Priority among matching recipes (higher = preferred)\n    weight = 1,                                    -- Weight for random selection\n    foodtype = FOODTYPE.VEGGIE,                    -- Food category\n    health = TUNING.HEALING_MED,                   -- Health restoration\n    hunger = TUNING.CALORIES_LARGE,                -- Hunger restoration\n    sanity = TUNING.SANITY_TINY,                   -- Sanity restoration\n    perishtime = TUNING.PERISH_SLOW,               -- Spoilage time\n    cooktime = 2,                                  -- Time to cook\n    temperature = TUNING.HOT_FOOD_BONUS_TEMP,      -- Temperature effect (optional)\n    temperatureduration = TUNING.FOOD_TEMP_AVERAGE, -- Duration of temperature effect (optional)\n    tags = {"honeyed"},                            -- Special food tags (optional)\n    cookbook_category = "farmplants",              -- Category in cookbook (optional)\n    card_def = {                                   -- Recipe card definition (optional)\n        ingredients = {\n            {"butterflywings", 1}, \n            {"carrot", 2}, \n            {"berries", 1}\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"ingredient-system",children:"Ingredient System"}),"\n",(0,t.jsx)(n.p,{children:"The cooking system uses a tag-based ingredient system:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Adding ingredient values\nAddIngredientValues(\n    {"carrot", "corn", "pumpkin"},  -- Ingredient prefab names\n    {veggie = 1},                   -- Tags and values\n    true                            -- Can be cooked\n)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Common ingredient tags:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"meat"})," - Meat value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fish"})," - Fish value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"veggie"})," - Vegetable value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fruit"})," - Fruit value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"egg"})," - Egg value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sweetener"})," - Sweetness value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"monster"})," - Monster food value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inedible"})," - Non-food items"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"recipe-testing",children:"Recipe Testing"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"test"})," function determines if a set of ingredients matches a recipe:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"test = function(cooker, names, tags)\n    -- Example: requires butterfly wings, veggie tag >= 0.5, and no meat\n    return (names.butterflywings or names.moonbutterflywings) and \n           not tags.meat and \n           tags.veggie and \n           tags.veggie >= 0.5\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"registration-functions",children:"Registration Functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Add a recipe to a cooking station\nAddCookerRecipe("cookpot", recipe, is_mod_food)\n\n-- Add a recipe card for the recipe\nAddRecipeCard("cookpot", recipe)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"recipe-cards",children:"Recipe Cards"}),"\n",(0,t.jsxs)(n.p,{children:["Recipe cards are collectible items that teach the player specific cooking recipes. They can be defined in the recipe's ",(0,t.jsx)(n.code,{children:"card_def"})," field:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'card_def = {\n    ingredients = {\n        {"butterflywings", 1}, \n        {"carrot", 2}, \n        {"berries", 1}\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"api-functions",children:"API Functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Get all valid recipes for a set of ingredients\nGetCandidateRecipes("cookpot", ingredient_data)\n\n-- Test if a cooking product is from a mod\nIsModCookingProduct("cookpot", "butterflymuffin")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-cooking-patterns",children:"Common Cooking Patterns"}),"\n",(0,t.jsx)(n.p,{children:"Most food recipes follow specific patterns:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Meat-based"})," - At least 0.5 meat value creates meat dishes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vegetable-based"})," - At least 0.5 veggie value creates vegetable dishes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fish-based"})," - Fish value creates fish dishes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sweetened"})," - Adding honey or other sweeteners affects recipes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monster food"})," - Using monster meat creates lower quality or special recipes"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);