"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[9702],{5160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api-vanilla/components/components-overview","title":"Components Overview","description":"Components are the fundamental building blocks for entity behavior in Don\'t Starve Together. The game uses a component-based architecture where entities (players, creatures, items, etc.) are composed of various components that define their functionality.","source":"@site/docs/api-vanilla/components/index.md","sourceDirName":"api-vanilla/components","slug":"/api/components","permalink":"/dst-api-webdocs/docs/api/components","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"components-overview","title":"Components Overview","sidebar_position":1,"slug":"/api/components"},"sidebar":"docs","previous":{"title":"Components","permalink":"/dst-api-webdocs/docs/category/components"},"next":{"title":"Combat Component","permalink":"/dst-api-webdocs/docs/api-vanilla/components/combat"}}');var o=t(4848),i=t(8453);const c={id:"components-overview",title:"Components Overview",sidebar_position:1,slug:"/api/components"},a="Components Overview",r={},l=[{value:"What are Components?",id:"what-are-components",level:2},{value:"Using Components",id:"using-components",level:2},{value:"Core Components",id:"core-components",level:2},{value:"Component Lifecycle",id:"component-lifecycle",level:2},{value:"Component Communication",id:"component-communication",level:2},{value:"Creating Custom Components",id:"creating-custom-components",level:2},{value:"Component Replication",id:"component-replication",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"components-overview",children:"Components Overview"})}),"\n",(0,o.jsx)(n.p,{children:"Components are the fundamental building blocks for entity behavior in Don't Starve Together. The game uses a component-based architecture where entities (players, creatures, items, etc.) are composed of various components that define their functionality."}),"\n",(0,o.jsx)(n.h2,{id:"what-are-components",children:"What are Components?"}),"\n",(0,o.jsx)(n.p,{children:"Components are self-contained modules that handle specific aspects of an entity's behavior. Each component is responsible for a particular feature or capability of an entity. For example:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A ",(0,o.jsx)(n.code,{children:"health"})," component manages an entity's health state"]}),"\n",(0,o.jsxs)(n.li,{children:["A ",(0,o.jsx)(n.code,{children:"combat"})," component handles attacking and being attacked"]}),"\n",(0,o.jsxs)(n.li,{children:["An ",(0,o.jsx)(n.code,{children:"inventory"})," component allows an entity to carry items"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"By combining different components, the game creates complex entities with diverse behaviors."}),"\n",(0,o.jsx)(n.h2,{id:"using-components",children:"Using Components"}),"\n",(0,o.jsx)(n.p,{children:"Components are attached to entities and then configured to create the desired behavior:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Create a basic entity\nlocal entity = CreateEntity()\n\n-- Add components\nentity:AddComponent("health")\nentity:AddComponent("combat")\n\n-- Configure components\nentity.components.health:SetMaxHealth(100)\nentity.components.combat:SetDefaultDamage(10)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,o.jsx)(n.p,{children:"Some of the most commonly used components in Don't Starve Together include:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Component"}),(0,o.jsx)(n.th,{children:"Purpose"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/combat",children:"Combat"})}),(0,o.jsx)(n.td,{children:"Handles attacking and being attacked"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/health",children:"Health"})}),(0,o.jsx)(n.td,{children:"Manages health, damage, and death"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/inventory",children:"Inventory"})}),(0,o.jsx)(n.td,{children:"Allows carrying and using items"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/weapon",children:"Weapon"})}),(0,o.jsx)(n.td,{children:"Defines item attack behavior"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/temperature",children:"Temperature"})}),(0,o.jsx)(n.td,{children:"Manages temperature effects"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/hunger",children:"Hunger"})}),(0,o.jsx)(n.td,{children:"Handles food and starvation"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/sanity",children:"Sanity"})}),(0,o.jsx)(n.td,{children:"Controls mental state and effects"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/burnable",children:"Burnable"})}),(0,o.jsx)(n.td,{children:"Makes entity flammable"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/cookable",children:"Cookable"})}),(0,o.jsx)(n.td,{children:"Allows entity to be cooked"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/workable",children:"Workable"})}),(0,o.jsx)(n.td,{children:"Makes entity interact with tools"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/growable",children:"Growable"})}),(0,o.jsx)(n.td,{children:"Allows entity to grow over time"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/perishable",children:"Perishable"})}),(0,o.jsx)(n.td,{children:"Makes items spoil over time"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/locomotor",children:"Locomotor"})}),(0,o.jsx)(n.td,{children:"Controls entity movement"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/builder",children:"Builder"})}),(0,o.jsx)(n.td,{children:"Manages crafting capabilities"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/edible",children:"Edible"})}),(0,o.jsx)(n.td,{children:"Defines food properties"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/eater",children:"Eater"})}),(0,o.jsx)(n.td,{children:"Allows entity to consume food"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/container",children:"Container"})}),(0,o.jsx)(n.td,{children:"Provides storage capabilities"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/stackable",children:"Stackable"})}),(0,o.jsx)(n.td,{children:"Allows items to stack"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/equippable",children:"Equippable"})}),(0,o.jsx)(n.td,{children:"Allows items to be equipped"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/inspectable",children:"Inspectable"})}),(0,o.jsx)(n.td,{children:"Enables examination by players"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/trader",children:"Trader"})}),(0,o.jsx)(n.td,{children:"Manages trading interactions"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/lootdropper",children:"LootDropper"})}),(0,o.jsx)(n.td,{children:"Controls item drops"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Other Components"})}),(0,o.jsx)(n.td,{children:"Additional specialized components"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"component-lifecycle",children:"Component Lifecycle"}),"\n",(0,o.jsx)(n.p,{children:"Components have several lifecycle methods:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Constructor"}),": Called when the component is created"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"OnRemoveFromEntity"}),": Called when the component is removed"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"OnSave"}),": Called when the game is saved to serialize component state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"OnLoad"}),": Called when the game is loaded to deserialize component state"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"component-communication",children:"Component Communication"}),"\n",(0,o.jsx)(n.p,{children:"Components can communicate with each other through:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Direct Access"}),": Components can directly access other components on the same entity"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- Health component accessing combat component\nlocal damage = self.inst.components.combat.defaultdamage\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Events"}),": Components can trigger and listen for events"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Trigger an event\nself.inst:PushEvent("attacked", {attacker = attacker, damage = damage})\n\n-- Listen for an event\nself.inst:ListenForEvent("death", OnDeath)\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"creating-custom-components",children:"Creating Custom Components"}),"\n",(0,o.jsx)(n.p,{children:"While modding, you can create custom components to add new behaviors:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local MyComponent = Class(function(self, inst)\n    self.inst = inst\n    self.value = 10\nend)\n\nfunction MyComponent:DoSomething()\n    print("Doing something with value:", self.value)\nend\n\nreturn MyComponent\n'})}),"\n",(0,o.jsx)(n.p,{children:"Then register and use the component:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local MyComponent = require "components/mycomponent"\nAddComponentPostInit("mycomponent", MyComponent)\n\n-- Later, add to an entity\nentity:AddComponent("mycomponent")\nentity.components.mycomponent:DoSomething()\n'})}),"\n",(0,o.jsx)(n.h2,{id:"component-replication",children:"Component Replication"}),"\n",(0,o.jsx)(n.p,{children:"For multiplayer synchronization, many components have corresponding replica components that exist on both server and client. Replica components contain only the data needed by clients for rendering and prediction."}),"\n",(0,o.jsxs)(n.p,{children:["For example, the ",(0,o.jsx)(n.code,{children:"health"})," component has a ",(0,o.jsx)(n.code,{children:"health_replica"})," counterpart that replicates the current health value to clients without exposing all server-side health logic."]}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(n.p,{children:"When working with components:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Keep components focused"}),": Each component should handle one specific aspect of functionality"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Use events for cross-component communication"})," when appropriate"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Avoid circular dependencies"})," between components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Clean up event listeners"})," in OnRemoveFromEntity to prevent memory leaks"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Use the existing component architecture"})," rather than creating workarounds"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);