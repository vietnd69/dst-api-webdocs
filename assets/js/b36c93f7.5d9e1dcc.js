"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[4054],{1497:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api-vanilla/core/animstate-system","title":"AnimState System","description":"Last Update: 2024-08-08","source":"@site/docs/api-vanilla/core/animstate-system.md","sourceDirName":"api-vanilla/core","slug":"/api-vanilla/core/animstate-system","permalink":"/dst-api-webdocs/docs/api-vanilla/core/animstate-system","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"animstate-system","title":"AnimState System","sidebar_position":5,"last_updated":"2024-08-08T00:00:00.000Z","version":625420},"sidebar":"docs","previous":{"title":"TUNING System","permalink":"/dst-api-webdocs/docs/api-vanilla/core/tuning"},"next":{"title":"Network System","permalink":"/dst-api-webdocs/docs/api-vanilla/core/network-system"}}');var s=i(4848),a=i(8453);const l={id:"animstate-system",title:"AnimState System",sidebar_position:5,last_updated:new Date("2024-08-08T00:00:00.000Z"),version:625420},r="AnimState System",o={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Core Concepts",id:"core-concepts",level:2},{value:"Banks and Builds",id:"banks-and-builds",level:3},{value:"Animations",id:"animations",level:3},{value:"Symbol Overrides",id:"symbol-overrides",level:3},{value:"Visual Effects",id:"visual-effects",level:2},{value:"Scaling and Flipping",id:"scaling-and-flipping",level:3},{value:"Coloration and Tinting",id:"coloration-and-tinting",level:3},{value:"Visibility and Layers",id:"visibility-and-layers",level:3},{value:"Animation Events",id:"animation-events",level:2},{value:"Integration with Other Systems",id:"integration-with-other-systems",level:2},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Character Customization",id:"character-customization",level:3},{value:"Tool/Weapon Visuals",id:"toolweapon-visuals",level:3},{value:"Visual Effects",id:"visual-effects-1",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"See also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Last Update: 2024-08-08"})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"animstate-system",children:"AnimState System"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"API Version: 625420"})}),"\n",(0,s.jsx)(n.p,{children:"The AnimState system is responsible for managing entity animations, visual appearances, and graphic effects in Don't Starve Together. It provides the interface between the game's logic and the visual representation of entities."}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add an AnimState to an entity\nentity.entity:AddAnimState()\n\n-- Configure the AnimState\nentity.AnimState:SetBank("wilson")\nentity.AnimState:SetBuild("wilson")\nentity.AnimState:PlayAnimation("idle")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,s.jsx)(n.h3,{id:"banks-and-builds",children:"Banks and Builds"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bank"}),": Defines the animation rig and structure (skeleton)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Build"}),": Defines the visual appearance (textures and art)"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Set the animation bank and build\nentity.AnimState:SetBank("spider") -- Animation structure\nentity.AnimState:SetBuild("spider_build") -- Visual assets\n'})}),"\n",(0,s.jsx)(n.h3,{id:"animations",children:"Animations"}),"\n",(0,s.jsx)(n.p,{children:"Animations are sequences of frames that create motion:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Play a single animation\nentity.AnimState:PlayAnimation("attack")\n\n-- Play an animation and then loop another\nentity.AnimState:PlayAnimation("attack")\nentity.AnimState:PushAnimation("idle_loop", true) -- true means loop\n\n-- Check if an animation is finished\nlocal is_finished = entity.AnimState:AnimDone()\n'})}),"\n",(0,s.jsx)(n.h3,{id:"symbol-overrides",children:"Symbol Overrides"}),"\n",(0,s.jsx)(n.p,{children:"Symbol overrides allow for customizing specific parts of an animation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Override the "swap_object" symbol with a tool\'s graphics\nentity.AnimState:OverrideSymbol("swap_object", "swap_axe", "swap_axe")\n\n-- Clear a specific override\nentity.AnimState:ClearOverrideSymbol("swap_object")\n\n-- Clear all overrides\nentity.AnimState:ClearAllOverrideSymbols()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"visual-effects",children:"Visual Effects"}),"\n",(0,s.jsx)(n.h3,{id:"scaling-and-flipping",children:"Scaling and Flipping"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Set uniform scale\nentity.AnimState:SetScale(1.2, 1.2)\n\n-- Flip horizontally (mirror)\nentity.AnimState:SetScale(-1, 1)\n\n-- Get current scale\nlocal scale_x, scale_y = entity.AnimState:GetScale()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"coloration-and-tinting",children:"Coloration and Tinting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Tint the entity with a color\nentity.AnimState:SetMultColor(1, 0, 0, 1) -- Red tint (RGBA)\n\n-- Add a highlight color\nentity.AnimState:SetHighlightColour(1, 1, 0, 1) -- Yellow highlight\n\n-- Set additive blending\nentity.AnimState:SetBloomEffectHandle("shaders/anim.ksh")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"visibility-and-layers",children:"Visibility and Layers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Hide the entire entity\nentity.AnimState:Hide()\n\n-- Show the entity\nentity.AnimState:Show()\n\n-- Hide specific parts/layers\nentity.AnimState:Hide("ARM")\nentity.AnimState:Show("ARM")\n\n-- Set render layer (depth)\nentity.AnimState:SetLayer(LAYER_BACKGROUND)\nentity.AnimState:SetSortOrder(3)\n\n-- Force single pass rendering (added in API 625420)\nentity.AnimState:SetForceSinglePass(true) -- For UIAnims with alpha fades on clients without stencil buffers\n'})}),"\n",(0,s.jsx)(n.h2,{id:"animation-events",children:"Animation Events"}),"\n",(0,s.jsx)(n.p,{children:"Animations can trigger events at specific frames:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Listen for animation events\nentity:ListenForEvent("animover", function(inst)\n    print("Animation completed!")\nend)\n\nentity:ListenForEvent("animqueueover", function(inst)\n    print("Animation queue completed!")\nend)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"integration-with-other-systems",children:"Integration with Other Systems"}),"\n",(0,s.jsx)(n.p,{children:"The AnimState system works closely with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Transform"}),": For positioning and scaling entities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Physics"}),": For aligning visuals with collision areas"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State Graph"}),": For coordinating animations with entity states"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sound Emitter"}),": For synchronizing sounds with animations"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,s.jsx)(n.h3,{id:"character-customization",children:"Character Customization"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Change character appearance\nlocal function CustomizeCharacter(inst, skin_mode)\n    if skin_mode == "normal" then\n        inst.AnimState:SetBuild("wilson")\n    elseif skin_mode == "formal" then\n        inst.AnimState:SetBuild("wilson_formal")\n    elseif skin_mode == "survivor" then\n        inst.AnimState:SetBuild("wilson_survivor")\n    end\nend\n'})}),"\n",(0,s.jsx)(n.h3,{id:"toolweapon-visuals",children:"Tool/Weapon Visuals"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Show a tool in character\'s hand\nlocal function EquipTool(inst, tool)\n    if tool.prefab == "axe" then\n        inst.AnimState:OverrideSymbol("swap_object", "swap_axe", "swap_axe")\n    elseif tool.prefab == "pickaxe" then\n        inst.AnimState:OverrideSymbol("swap_object", "swap_pickaxe", "swap_pickaxe")\n    end\n    \n    inst.AnimState:Show("ARM_carry")\n    inst.AnimState:Hide("ARM_normal")\nend\n\n-- Remove tool visual\nlocal function UnequipTool(inst)\n    inst.AnimState:ClearOverrideSymbol("swap_object")\n    inst.AnimState:Hide("ARM_carry")\n    inst.AnimState:Show("ARM_normal")\nend\n'})}),"\n",(0,s.jsx)(n.h3,{id:"visual-effects-1",children:"Visual Effects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Ghost effect\nlocal function MakeGhost(inst)\n    inst.AnimState:SetBank("ghost")\n    inst.AnimState:SetBuild("ghost")\n    inst.AnimState:PlayAnimation("idle", true)\n    inst.AnimState:SetMultColor(1, 1, 1, 0.6) -- Transparent\n    inst.AnimState:UsePointFiltering(true)\nend\n\n-- Burning effect\nlocal function ApplyBurningEffect(inst)\n    inst.AnimState:SetBloomEffectHandle("shaders/anim.ksh")\n    inst.AnimState:SetMultColor(0.8, 0.5, 0.3, 1)\nend\n'})}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Limit Animation Changes"}),": Frequent animation changes can impact performance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use Symbol Overrides Sparingly"}),": Each override requires additional resources"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consider Visibility"}),": Hide entities that don't need to be rendered"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use Layers Appropriately"}),": Proper layer usage improves rendering efficiency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Watch Animation Count"}),": Too many simultaneous animations can reduce frame rate"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Match Banks and Builds"}),": Ensure the bank and build are compatible"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Manage Animation Transitions"}),": Use PushAnimation for smooth transitions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clean Up Overrides"}),": Clear overrides when they're no longer needed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use Appropriate Animations"}),": Don't play detailed animations for distant entities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Coordinate with Sound"}),": Synchronize animations with sound effects for immersion"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/core/entity-system",children:"Entity System"})," - For the overall entity framework"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/shared-properties/transform",children:"Transform"})," - For positioning animated entities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/core/physics",children:"Physics"})," - For physical interaction with visuals"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/core/stategraph-system",children:"StateGraph System"})," - For coordinating animations with states"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/custom-stategraphs-and-animations",children:"Custom Animations"})," - For creating custom animations"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var t=i(6540);const s={},a=t.createContext(s);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);