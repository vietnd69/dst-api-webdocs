"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[2297],{370:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"api-vanilla/components/cookable","title":"Cookable","description":"The Cookable component allows entities to be cooked, typically on a fire or in a cooking station, transforming them into a cooked variant.","source":"@site/docs/api-vanilla/components/cookable.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/cookable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/cookable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"id":"cookable","title":"Cookable","sidebar_position":10,"version":619045},"sidebar":"docs","previous":{"title":"Burnable Component","permalink":"/dst-api-webdocs/docs/api-vanilla/components/burnable"},"next":{"title":"Workable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/workable"}}');var i=o(4848),s=o(8453);const a={id:"cookable",title:"Cookable",sidebar_position:10,version:619045},c="Cookable Component",l={},r=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Events",id:"events",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2},{value:"Example: Creating a Cookable Item",id:"example-creating-a-cookable-item",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cookable-component",children:"Cookable Component"})}),"\n",(0,i.jsx)(n.p,{children:"The Cookable component allows entities to be cooked, typically on a fire or in a cooking station, transforming them into a cooked variant."}),"\n",(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Add a cookable component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("cookable")\n\n-- Configure the cookable component\nlocal cookable = entity.components.cookable\ncookable:SetProduct("cookedcarrot")\ncookable:SetCookTime(1)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"product"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Prefab name of the item that will be created when cooked"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cooktime"})}),(0,i.jsx)(n.td,{children:"Number"}),(0,i.jsx)(n.td,{children:"Time in seconds it takes to cook this item"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"oncookfn"})}),(0,i.jsx)(n.td,{children:"Function"}),(0,i.jsx)(n.td,{children:"Custom function called when the item is cooked"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Set the product that will be created when cooked\ncookable:SetProduct("cookedmeat")\n\n-- Set how long it takes to cook (in seconds)\ncookable:SetCookTime(2.5)\n\n-- Set a callback for when the item is cooked\ncookable:SetOnCookedFn(function(inst, cooker, chef)\n    -- Do something when cooked\n    print(chef.name .. " cooked " .. inst.prefab)\nend)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,i.jsx)(n.p,{children:"The Cookable component doesn't directly trigger any events, but cooking an item typically results in the original item being removed and a new cooked version being created."}),"\n",(0,i.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,i.jsx)(n.p,{children:"The Cookable component often works with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Perishable"})," - Cooked items may have different spoilage rates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Edible"})," - Cooking typically changes the food values of items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Stackable"})," - Cooking may affect stack size or properties"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Inventoryitem"})," - The cooked item becomes a new inventory item"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/burnable",children:"Burnable Component"})," - For items that can catch fire"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/edible",children:"Edible Component"})," - For food properties that change when cooked"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/perishable",children:"Perishable Component"})," - For spoilage rates of cooked items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/stackable",children:"Stackable Component"})," - For stacking cooked items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/recipes/cooking",children:"Recipes"})," - For cooking recipe definitions"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-creating-a-cookable-item",children:"Example: Creating a Cookable Item"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local function MakeCookableItem()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it an inventory item\n    inst:AddComponent("inventoryitem")\n    \n    -- Make it cookable\n    inst:AddComponent("cookable")\n    inst.components.cookable:SetProduct("cookeditem")\n    inst.components.cookable:SetCookTime(1.5)\n    \n    return inst\nend\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var t=o(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);