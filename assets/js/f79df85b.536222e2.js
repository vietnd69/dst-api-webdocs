"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[5118],{19041:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"game-scripts/core-systems/networking-communication/chat-commands/usercommands","title":"User Commands System","description":"Slash command execution, permission management, and voting system for player commands","source":"@site/docs/game-scripts/core-systems/networking-communication/chat-commands/usercommands.md","sourceDirName":"game-scripts/core-systems/networking-communication/chat-commands","slug":"/game-scripts/core-systems/networking-communication/chat-commands/usercommands","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/usercommands","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"usercommands","title":"User Commands System","description":"Slash command execution, permission management, and voting system for player commands","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"ChatHistory","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/chathistory"},"next":{"title":"VoteUtil","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/voteutil"}}');var i=s(74848),t=s(28453);const a={id:"usercommands",title:"User Commands System",description:"Slash command execution, permission management, and voting system for player commands",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="User Commands System",d={},o=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Command Registration",id:"command-registration",level:2},{value:"AddUserCommand(name, data)",id:"add-user-command",level:3},{value:"RemoveUserCommand(name)",id:"remove-user-command",level:3},{value:"AddModUserCommand(mod, name, data)",id:"add-mod-user-command",level:3},{value:"Command Execution",id:"command-execution",level:2},{value:"RunUserCommand(commandname, params, caller, onserver)",id:"run-user-command",level:3},{value:"RunTextUserCommand(input, caller, onserver)",id:"run-text-user-command",level:3},{value:"Permission System",id:"permission-system",level:2},{value:"Permission Levels",id:"permission-levels",level:3},{value:"Permission Checking Functions",id:"permission-checking-functions",level:3},{value:"UserRunCommandResult(commandname, player, targetid)",id:"user-run-command-result",level:4},{value:"CanUserAccessCommand(commandname, player, targetid)",id:"can-user-access-command",level:4},{value:"CanUserStartCommand(commandname, player, targetid)",id:"can-user-start-command",level:4},{value:"User Resolution Functions",id:"user-resolution-functions",level:2},{value:"UserToClient(input)",id:"user-to-client",level:3},{value:"UserToName(input)",id:"user-to-name",level:3},{value:"UserToClientID(input)",id:"user-to-client-id",level:3},{value:"UserToPlayer(input)",id:"user-to-player",level:3},{value:"Voting System",id:"voting-system",level:2},{value:"Vote Command Requirements",id:"vote-command-requirements",level:3},{value:"Vote Validation Functions",id:"vote-validation-functions",level:3},{value:"CanUserStartVote(commandname, player, targetid)",id:"can-user-start-vote",level:4},{value:"FinishVote(commandname, params, voteresults)",id:"finish-vote",level:3},{value:"Rate Limiting",id:"rate-limiting",level:2},{value:"Command Queue System",id:"command-queue-system",level:3},{value:"HandleUserCmdQueue()",id:"handle-user-cmd-queue",level:3},{value:"Menu Integration",id:"menu-integration",level:2},{value:"GetUserActions(caller, targetid)",id:"get-user-actions",level:3},{value:"GetServerActions(caller)",id:"get-server-actions",level:3},{value:"Command Properties",id:"command-properties",level:2},{value:"String Properties",id:"string-properties",level:3},{value:"ResolveCommandStringProperty(command, property, default)",id:"resolve-command-string-property",level:3},{value:"Emotes Integration",id:"emotes-integration",level:2},{value:"GetEmotesWordPredictionDictionary()",id:"get-emotes-word-prediction-dictionary",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Basic Command Registration",id:"basic-command-registration",level:3},{value:"User-Targeting Command with Voting",id:"user-targeting-command-with-voting",level:3},{value:"Mod Command with Custom Validation",id:"mod-command-with-custom-validation",level:3},{value:"Command with Confirmation Dialog",id:"command-with-confirmation-dialog",level:3},{value:"Platform-Specific Features",id:"platform-specific-features",level:2},{value:"Rail Platform Commands",id:"rail-platform-commands",level:3},{value:"RailUserCommandInject(name, displayname, displayparams, extra_alias)",id:"rail-user-command-inject",level:4},{value:"RailUserCommandRemove(name)",id:"rail-user-command-remove",level:4},{value:"Error Handling",id:"error-handling",level:2},{value:"Common Error Scenarios",id:"common-error-scenarios",level:3},{value:"Input Validation",id:"input-validation",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Command Lookup Optimization",id:"command-lookup-optimization",level:3},{value:"Rate Limiting",id:"rate-limiting-1",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"Related Systems",id:"related-systems",level:2},{value:"Security Considerations",id:"security-considerations",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"user-commands-system",children:"User Commands System"})}),"\n",(0,i.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Build Version"}),(0,i.jsx)(n.th,{children:"Change Date"}),(0,i.jsx)(n.th,{children:"Change Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"676042"}),(0,i.jsx)(n.td,{children:"2025-06-21"}),(0,i.jsx)(n.td,{children:"stable"}),(0,i.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"User Commands System"})," manages slash commands in Don't Starve Together, handling command registration, execution, permission checking, voting mechanisms, and rate limiting. It supports both built-in and mod-added commands with sophisticated permission levels and user targeting functionality."]}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Register a simple command\nAddUserCommand("hello", {\n    params = {},\n    aliases = {"hi", "greet"},\n    description = "Say hello to everyone",\n    localfn = function(params, caller)\n        ChatHistory:SendCommandResponse("Hello from " .. caller.name .. "!")\n    end\n})\n\n-- Register a user-targeting command with voting\nAddUserCommand("kick", {\n    params = {"user"},\n    usermenu = true,\n    vote = true,\n    permission = COMMAND_PERMISSION.MODERATOR,\n    cantargetadmin = true,\n    voteminpasscount = 2,\n    description = "Vote to kick a player",\n    serverfn = function(params, caller)\n        TheNet:Kick(UserToClientID(params.user))\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h2,{id:"command-registration",children:"Command Registration"}),"\n",(0,i.jsx)(n.h3,{id:"add-user-command",children:"AddUserCommand(name, data)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRegisters a new user command that can be executed via slash commands or UI menus."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (string): Command name (used in /commandname)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"})," (table): Command configuration table"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command Data Structure:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'{\n    params = {"user", "reason"},           -- Parameter names in order\n    paramsoptional = {false, true},        -- Which params are optional\n    aliases = {"alias1", "alias2"},        -- Alternative command names\n    permission = COMMAND_PERMISSION.ADMIN, -- Required permission level\n    usermenu = true,                       -- Show in player context menu\n    servermenu = true,                     -- Show in server commands menu\n    vote = true,                          -- Allow voting if no permission\n    confirm = true,                       -- Require confirmation dialog\n    cantargetself = false,                -- Can target own user\n    cantargetadmin = true,                -- Cannot target admin users\n    voteminpasscount = 2,                 -- Minimum votes to pass\n    voteminstartage = 300,                -- Min age to start vote (seconds)\n    localfn = function(params, caller) end,  -- Client-side function\n    serverfn = function(params, caller) end, -- Server-side function\n    hasaccessfn = function(cmd, caller, target) end, -- Custom access check\n    canstartfn = function(cmd, caller, target) end,  -- Custom start check\n    votecanstartfn = function(cmd, caller, target) end, -- Custom vote check\n    voteresultfn = function(params, results) end,    -- Vote result handler\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("teleport", {\n    params = {"user"},\n    permission = COMMAND_PERMISSION.ADMIN,\n    usermenu = true,\n    cantargetself = false,\n    description = "Teleport to a player",\n    localfn = function(params, caller)\n        local target = UserToPlayer(params.user)\n        if target and caller then\n            caller.Transform:SetPosition(target.Transform:GetWorldPosition())\n        end\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"remove-user-command",children:"RemoveUserCommand(name)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRemoves a previously registered user command and all its aliases."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (string): Command name to remove"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'RemoveUserCommand("teleport")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"add-mod-user-command",children:"AddModUserCommand(mod, name, data)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRegisters a user command from a mod. Commands are automatically cleaned up when the mod is unloaded."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mod"})," (string): Mod identifier"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (string): Command name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"})," (table): Command configuration (same as AddUserCommand)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- In mod code\nAddModUserCommand("mymod", "customcmd", {\n    params = {},\n    description = "My custom command",\n    localfn = function(params, caller)\n        print("Custom mod command executed!")\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h2,{id:"command-execution",children:"Command Execution"}),"\n",(0,i.jsx)(n.h3,{id:"run-user-command",children:"RunUserCommand(commandname, params, caller, onserver)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nExecutes a user command with specified parameters. Handles permission checking and execution routing."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"commandname"})," (string): Name of command to execute"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"params"})," (table): Parameter values keyed by parameter names"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"caller"})," (entity): Player entity executing the command"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onserver"})," (boolean): Whether executing on server or client"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Execute a kick command\nlocal params = {user = "PlayerName", reason = "Griefing"}\nRunUserCommand("kick", params, ThePlayer, false)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"run-text-user-command",children:"RunTextUserCommand(input, caller, onserver)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nParses and executes a text command string (like from chat input)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"input"}),' (string): Full command string (e.g., "/kick PlayerName griefing")']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"caller"})," (entity): Player entity executing the command"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onserver"})," (boolean): Whether executing on server or client"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Parse and execute chat command\nRunTextUserCommand("/kick BadPlayer being mean", ThePlayer, false)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"permission-system",children:"Permission System"}),"\n",(0,i.jsx)(n.h3,{id:"permission-levels",children:"Permission Levels"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Level"}),(0,i.jsx)(n.th,{children:"Constant"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"User Level"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"N/A"}),(0,i.jsx)(n.td,{children:"No voting rights"}),(0,i.jsx)(n.td,{children:"Squelched users"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"N/A"}),(0,i.jsx)(n.td,{children:"Can vote"}),(0,i.jsx)(n.td,{children:"Regular users"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COMMAND_PERMISSION.MODERATOR"})}),(0,i.jsx)(n.td,{children:"Can moderate"}),(0,i.jsx)(n.td,{children:"Moderators"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COMMAND_PERMISSION.ADMIN"})}),(0,i.jsx)(n.td,{children:"Full access"}),(0,i.jsx)(n.td,{children:"Administrators"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"permission-checking-functions",children:"Permission Checking Functions"}),"\n",(0,i.jsx)(n.h4,{id:"user-run-command-result",children:"UserRunCommandResult(commandname, player, targetid)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nDetermines what execution result a user would get for a command."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"commandname"})," (string): Command to check"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"player"})," (entity): Player attempting command"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targetid"})," (string): Target user ID (for user-targeting commands)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(COMMAND_RESULT): Execution result type"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Result Types:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"COMMAND_RESULT.ALLOW     -- Can execute directly\nCOMMAND_RESULT.VOTE      -- Must use voting\nCOMMAND_RESULT.DENY      -- Temporarily blocked (squelched, vote active)\nCOMMAND_RESULT.DISABLED  -- Command disabled by custom logic\nCOMMAND_RESULT.INVALID   -- No access to command\n"})}),"\n",(0,i.jsx)(n.h4,{id:"can-user-access-command",children:"CanUserAccessCommand(commandname, player, targetid)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nSimple check if user has any access to a command (excludes INVALID results)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"commandname"})," (string): Command to check"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"player"})," (entity): Player to check"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targetid"})," (string): Target user ID"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if user has access"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"can-user-start-command",children:"CanUserStartCommand(commandname, player, targetid)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if user can start a command (custom canstartfn validation)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"commandname"})," (string): Command to check"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"player"})," (entity): Player to check"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targetid"})," (string): Target user ID"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if can start"}),"\n",(0,i.jsx)(n.li,{children:"(string): Error reason if cannot start"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"user-resolution-functions",children:"User Resolution Functions"}),"\n",(0,i.jsx)(n.h3,{id:"user-to-client",children:"UserToClient(input)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConverts various input formats to a client table. Supports player index, user ID, or player name matching."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"input"})," (string|number): User identifier (index, ID, or name)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(table): Client table or nil if not found"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Matching Priority:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Player listing index (1, 2, 3...)"}),"\n",(0,i.jsx)(n.li,{children:"Exact user ID match"}),"\n",(0,i.jsx)(n.li,{children:"Case-sensitive name match"}),"\n",(0,i.jsx)(n.li,{children:"Case-insensitive name match"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Find by index\nlocal client = UserToClient("1")  -- First player\n\n-- Find by name\nlocal client = UserToClient("PlayerName")\n\n-- Find by user ID\nlocal client = UserToClient("KU_AbCdEf12")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"user-to-name",children:"UserToName(input)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConverts user input to player name string."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"input"})," (string|number): User identifier"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(string): Player name or nil"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"user-to-client-id",children:"UserToClientID(input)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConverts user input to client user ID."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"input"})," (string|number): User identifier"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(string): User ID or nil"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"user-to-player",children:"UserToPlayer(input)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConverts user input to player entity."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"input"})," (string|number): User identifier"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(entity): Player entity or nil"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"voting-system",children:"Voting System"}),"\n",(0,i.jsx)(n.h3,{id:"vote-command-requirements",children:"Vote Command Requirements"}),"\n",(0,i.jsx)(n.p,{children:"For commands to support voting, they must specify:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'{\n    vote = true,                    -- Enable voting\n    voteminpasscount = 2,          -- Minimum votes to pass\n    voteresultfn = function(params, results)\n        -- Return winning selection and vote count\n        return "yes", results.yes\n    end\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"vote-validation-functions",children:"Vote Validation Functions"}),"\n",(0,i.jsx)(n.h4,{id:"can-user-start-vote",children:"CanUserStartVote(commandname, player, targetid)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if user can start a vote for a command."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"commandname"})," (string|number): Command name or hash"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"player"})," (entity): Player attempting to start vote"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targetid"})," (string): Target user ID"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if can start vote"}),"\n",(0,i.jsx)(n.li,{children:"(string): Error reason if cannot start"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"finish-vote",children:"FinishVote(commandname, params, voteresults)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nProcesses completed vote results and executes command if passed."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"commandname"})," (string): Command that was voted on"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"params"})," (table): Command parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"voteresults"})," (table): Vote result data"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if vote passed and command executed"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,i.jsx)(n.h3,{id:"command-queue-system",children:"Command Queue System"}),"\n",(0,i.jsx)(n.p,{children:"Commands are rate-limited to prevent spam:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"SLASH_CMDS_PER_TICK_LIMIT = 10  -- Max commands per user per tick\n"})}),"\n",(0,i.jsx)(n.h3,{id:"handle-user-cmd-queue",children:"HandleUserCmdQueue()"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nProcesses queued commands during update loop. Called automatically by the update system."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rate Limiting Behavior:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tracks commands per user per tick"}),"\n",(0,i.jsx)(n.li,{children:"Logs warning for users exceeding limit"}),"\n",(0,i.jsx)(n.li,{children:"Drops excess commands to prevent lag"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"menu-integration",children:"Menu Integration"}),"\n",(0,i.jsx)(n.h3,{id:"get-user-actions",children:"GetUserActions(caller, targetid)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGets available user-targeting commands for context menus."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"caller"})," (entity): Player viewing menu"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targetid"})," (string): Target player ID"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(table): Array of command info tables"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command Info Structure:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'{\n    commandname = "kick",\n    prettyname = "Vote Kick",\n    desc = "Vote to kick this player",\n    exectype = COMMAND_RESULT.VOTE,\n    menusort = 50,\n    mod = "MyMod"  -- Optional, for mod commands\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-server-actions",children:"GetServerActions(caller)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGets available server commands for admin/moderator menus."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"caller"})," (entity): Player viewing menu"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(table): Array of command info tables"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"command-properties",children:"Command Properties"}),"\n",(0,i.jsx)(n.h3,{id:"string-properties",children:"String Properties"}),"\n",(0,i.jsx)(n.p,{children:"Commands can define localized strings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- In command definition\nprettyname = "Vote Kick Player",\ndesc = "Start a vote to kick the target player",\n\n-- Or use function for dynamic strings\nprettyname = function(command) \n    return STRINGS.UI.COMMANDS[command.name:upper()]\nend\n'})}),"\n",(0,i.jsx)(n.h3,{id:"resolve-command-string-property",children:"ResolveCommandStringProperty(command, property, default)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nResolves string properties from command definition, function, or localization strings."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"command"})," (table): Command object"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"property"})," (string): Property name to resolve"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"default"})," (string): Default value if not found"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(string): Resolved string value"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"emotes-integration",children:"Emotes Integration"}),"\n",(0,i.jsx)(n.h3,{id:"get-emotes-word-prediction-dictionary",children:"GetEmotesWordPredictionDictionary()"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nCreates word prediction dictionary for emote commands (used in chat autocomplete)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(table): Dictionary with words, delimiter, and display function"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local emotes_dict = GetEmotesWordPredictionDictionary()\n-- Returns: {\n--     words = {"wave", "dance", "cheer", ...},\n--     delim = "/",\n--     GetDisplayString = function(word) return "/" .. word end\n-- }\n'})}),"\n",(0,i.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"basic-command-registration",children:"Basic Command Registration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("heal", {\n    params = {},\n    permission = COMMAND_PERMISSION.ADMIN,\n    description = "Restore full health",\n    localfn = function(params, caller)\n        if caller and caller.components.health then\n            caller.components.health:SetVal(\n                caller.components.health.maxhealth\n            )\n        end\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"user-targeting-command-with-voting",children:"User-Targeting Command with Voting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("mute", {\n    params = {"user", "duration"},\n    paramsoptional = {false, true},\n    usermenu = true,\n    vote = true,\n    permission = COMMAND_PERMISSION.MODERATOR,\n    cantargetadmin = true,\n    voteminpasscount = 3,\n    description = "Mute a player",\n    voteresultfn = function(params, results)\n        return results.yes > results.no and "yes" or nil, results.yes\n    end,\n    serverfn = function(params, caller)\n        local duration = tonumber(params.duration) or 300\n        local userid = UserToClientID(params.user)\n        TheNet:MuteUser(userid, duration)\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mod-command-with-custom-validation",children:"Mod Command with Custom Validation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'AddModUserCommand("mymod", "special", {\n    params = {"target"},\n    hasaccessfn = function(command, caller, targetid)\n        -- Custom access logic\n        return caller:HasTag("special_permission")\n    end,\n    canstartfn = function(command, caller, targetid)\n        local target = UserToPlayer(targetid)\n        if target and target:HasTag("boss") then\n            return false, "Cannot target boss entities"\n        end\n        return true\n    end,\n    serverfn = function(params, caller)\n        -- Custom command logic\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"command-with-confirmation-dialog",children:"Command with Confirmation Dialog"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("restart", {\n    params = {},\n    permission = COMMAND_PERMISSION.ADMIN,\n    confirm = true,\n    description = "Restart the server",\n    serverfn = function(params, caller)\n        TheNet:StartVote("restart", nil)\n    end\n})\n'})}),"\n",(0,i.jsx)(n.h2,{id:"platform-specific-features",children:"Platform-Specific Features"}),"\n",(0,i.jsx)(n.h3,{id:"rail-platform-commands",children:"Rail Platform Commands"}),"\n",(0,i.jsx)(n.p,{children:"For Windows Rail platform, additional functions are available:"}),"\n",(0,i.jsx)(n.h4,{id:"rail-user-command-inject",children:"RailUserCommandInject(name, displayname, displayparams, extra_alias)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})," (Platform: WIN32_RAIL only)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nInjects localized display names and parameters for Rail platform."]}),"\n",(0,i.jsx)(n.h4,{id:"rail-user-command-remove",children:"RailUserCommandRemove(name)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})," (Platform: WIN32_RAIL only)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRemoves commands for Rail platform."]}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.h3,{id:"common-error-scenarios",children:"Common Error Scenarios"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Unknown command\nRunTextUserCommand("/unknown", player, false)\n-- Result: "Tried running unknown user command: unknown"\n\n-- Insufficient parameters\nRunTextUserCommand("/kick", player, false)\n-- Result: ChatHistory message about missing parameters\n\n-- Bad target user\nlocal params = {user = "NonexistentPlayer"}\nRunUserCommand("kick", params, player, false)\n-- Result: "Unknown target user" error\n\n-- Permission denied\nRunUserCommand("ban", params, regular_player, false)\n-- Result: "You are not allowed to use this command"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"input-validation",children:"Input Validation"}),"\n",(0,i.jsx)(n.p,{children:"The system automatically validates:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Required parameters presence"}),"\n",(0,i.jsx)(n.li,{children:"User existence for user-targeting commands"}),"\n",(0,i.jsx)(n.li,{children:"Permission levels"}),"\n",(0,i.jsx)(n.li,{children:"Vote requirements and timing"}),"\n",(0,i.jsx)(n.li,{children:"Rate limiting compliance"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,i.jsx)(n.h3,{id:"command-lookup-optimization",children:"Command Lookup Optimization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Commands stored in hash tables for O(1) lookup"}),"\n",(0,i.jsx)(n.li,{children:"Alias resolution cached"}),"\n",(0,i.jsx)(n.li,{children:"User resolution prioritized by lookup speed"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"rate-limiting-1",children:"Rate Limiting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Per-user command queuing prevents spam"}),"\n",(0,i.jsx)(n.li,{children:"Automatic cleanup of rate limit counters"}),"\n",(0,i.jsx)(n.li,{children:"Warning logging for excessive usage"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mod commands automatically cleaned up"}),"\n",(0,i.jsx)(n.li,{children:"Command queue cleared each tick"}),"\n",(0,i.jsx)(n.li,{children:"No persistent storage of command history"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-systems",children:"Related Systems"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/chathistory",children:(0,i.jsx)(n.strong,{children:"Chat History"})}),": Displays command responses and feedback"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./networking.md",children:(0,i.jsx)(n.strong,{children:"Networking"})}),": Handles client-server command communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./stats.md",children:(0,i.jsx)(n.strong,{children:"Stats"})}),": Tracks command usage metrics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./frontend.md",children:(0,i.jsx)(n.strong,{children:"Frontend"})}),": Provides confirmation dialogs and UI integration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../components/worldvoter.md",children:(0,i.jsx)(n.strong,{children:"World Voter"})}),": Manages voting mechanics"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Permission levels enforced at multiple points"}),"\n",(0,i.jsx)(n.li,{children:"User input sanitized and validated"}),"\n",(0,i.jsx)(n.li,{children:"Rate limiting prevents command flooding"}),"\n",(0,i.jsx)(n.li,{children:"Vote manipulation protection through age requirements"}),"\n",(0,i.jsx)(n.li,{children:"Admin-only commands cannot target other admins"}),"\n",(0,i.jsx)(n.li,{children:"Custom validation functions for specialized access control"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(96540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);