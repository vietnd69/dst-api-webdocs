"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6315],{181:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api-vanilla/global-objects/thesim","title":"TheSim","description":"TheSim is a global object that provides access to the game\'s simulation engine, offering functionality for working with the file system, finding entities, playing sounds, and more low-level operations.","source":"@site/docs/api-vanilla/global-objects/thesim.md","sourceDirName":"api-vanilla/global-objects","slug":"/api-vanilla/global-objects/thesim","permalink":"/dst-api-webdocs/docs/api-vanilla/global-objects/thesim","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"thesim","title":"TheSim","sidebar_position":5},"sidebar":"docs","previous":{"title":"TheNet","permalink":"/dst-api-webdocs/docs/api-vanilla/global-objects/thenet"},"next":{"title":"GLOBAL","permalink":"/dst-api-webdocs/docs/api-vanilla/global-objects/global"}}');var t=i(4848),a=i(8453);const o={id:"thesim",title:"TheSim",sidebar_position:5},l="TheSim",r={},c=[{value:"File System Operations",id:"file-system-operations",level:2},{value:"Entity Management",id:"entity-management",level:2},{value:"Sound and Visual Effects",id:"sound-and-visual-effects",level:2},{value:"Networking and Performance",id:"networking-and-performance",level:2},{value:"Time and Scheduling",id:"time-and-scheduling",level:2},{value:"Game Environment",id:"game-environment",level:2},{value:"Translation and Localization",id:"translation-and-localization",level:2},{value:"Important Considerations",id:"important-considerations",level:2},{value:"Common Use Cases",id:"common-use-cases",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"thesim",children:"TheSim"})}),"\n",(0,t.jsx)(n.p,{children:"TheSim is a global object that provides access to the game's simulation engine, offering functionality for working with the file system, finding entities, playing sounds, and more low-level operations."}),"\n",(0,t.jsx)(n.h2,{id:"file-system-operations",children:"File System Operations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Check if a file exists\nlocal exists = TheSim:GetPersistentString("mymod_config", function(success, str)\n    if success then\n        print("File exists with content: " .. str)\n    else\n        print("File does not exist")\n    end\nend)\n\n-- Save data persistently\nTheSim:SetPersistentString("mymod_config", "some_data_to_save", false)\n\n-- Get file list in a directory\nlocal files = TheSim:GetFileList("scripts/prefabs/")\nfor _, file in ipairs(files) do\n    print(file)\nend\n'})}),"\n",(0,t.jsx)(n.h2,{id:"entity-management",children:"Entity Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Find entities in a radius around a point\nlocal x, y, z = inst.Transform:GetWorldPosition()\nlocal radius = 10\nlocal ents = TheSim:FindEntities(x, y, z, radius, {"tree"}, {"burnt"})\n\n-- Project a point onto the ground\nlocal success, px, py, pz = TheSim:ProjectPointToTerrain(x, y, z)\nif success then\n    -- Use projected point\nend\n'})}),"\n",(0,t.jsx)(n.h2,{id:"sound-and-visual-effects",children:"Sound and Visual Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Play a sound without an entity\nTheSim:PlaySound("dontstarve/common/dropGeneric")\n\n-- Create a particle effect\nlocal fx = SpawnPrefab("fx_effect")\nfx.Transform:SetPosition(x, y, z)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"networking-and-performance",children:"Networking and Performance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Get network statistics\nlocal sent, recv = TheSim:GetNetworkStatistics()\n\n-- Get FPS information\nlocal fps = TheSim:GetFPS()\nlocal memory = TheSim:GetMemoryUsage()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"time-and-scheduling",children:"Time and Scheduling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Get real-world time\nlocal time = TheSim:GetRealTime()\n\n-- Get simulation time step\nlocal timestep = TheSim:GetTickTime()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"game-environment",children:"Game Environment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Check if running on a dedicated server\nlocal is_dedicated = TheSim:IsDedicatedServer()\n\n-- Get client-specific information\nlocal client_id = TheSim:GetUserId()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"translation-and-localization",children:"Translation and Localization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Get translated string\nlocal translated = TheSim:GetTranslatedString(STRINGS.NAMES.CARROT)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"important-considerations",children:"Important Considerations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Server vs. Client"}),": Some TheSim functions behave differently on servers versus clients"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Impact"}),": Many TheSim functions access low-level systems and should be used sparingly"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Platform Differences"}),": Some functions have different behavior across platforms"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Thread Safety"}),": File operations are asynchronous and use callbacks to return results"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration Storage"}),": Saving and loading mod configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Area Effects"}),": Finding entities in an area to apply effects"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Queries"}),": Checking terrain or environment properties"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Monitoring"}),": Tracking memory usage and frame rates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Platform Detection"}),": Adapting behavior based on platform"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);