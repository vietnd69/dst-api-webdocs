"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[3205],{8436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-vanilla/prefabs/items","title":"Item Prefabs","description":"Last Update: 2023-07-06","source":"@site/docs/api-vanilla/prefabs/items.md","sourceDirName":"api-vanilla/prefabs","slug":"/api-vanilla/prefabs/items","permalink":"/dst-api-webdocs/docs/api-vanilla/prefabs/items","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"items","title":"Item Prefabs","sidebar_position":4,"last_updated":"2023-07-06T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Creature Prefabs","permalink":"/dst-api-webdocs/docs/api-vanilla/prefabs/creatures"},"next":{"title":"Structure Prefabs","permalink":"/dst-api-webdocs/docs/api-vanilla/prefabs/structures"}}');var s=t(4848),a=t(8453);const o={id:"items",title:"Item Prefabs",sidebar_position:4,last_updated:new Date("2023-07-06T00:00:00.000Z")},r="Item Prefabs",d={},l=[{value:"Item Creation",id:"item-creation",level:2},{value:"Core Item Components",id:"core-item-components",level:2},{value:"Item Categories",id:"item-categories",level:2},{value:"Tools and Weapons",id:"tools-and-weapons",level:3},{value:"Food and Consumables",id:"food-and-consumables",level:3},{value:"Armor and Clothing",id:"armor-and-clothing",level:3},{value:"Resources",id:"resources",level:3},{value:"Equipment System",id:"equipment-system",level:2},{value:"Durability System",id:"durability-system",level:2},{value:"Stackable Items",id:"stackable-items",level:2},{value:"Item Visual Representation",id:"item-visual-representation",level:2},{value:"Example: Spear Item Prefab",id:"example-spear-item-prefab",level:2},{value:"Specialized Item Behaviors",id:"specialized-item-behaviors",level:2},{value:"Item Tags",id:"item-tags",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Last Update: 2023-07-06"})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"item-prefabs",children:"Item Prefabs"})}),"\n",(0,s.jsx)(n.p,{children:"Item prefabs define the collectible objects that players can interact with, carry in their inventory, equip, and use in Don't Starve Together."}),"\n",(0,s.jsx)(n.h2,{id:"item-creation",children:"Item Creation"}),"\n",(0,s.jsxs)(n.p,{children:["Items in Don't Starve Together are defined as prefabs that typically include components like ",(0,s.jsx)(n.code,{children:"inventoryitem"}),", along with other specialized components based on the item's functionality. Here's a typical structure for an item prefab:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/spear.zip"),         -- Main item animation\n    Asset("ANIM", "anim/swap_spear.zip"),    -- Animation when equipped\n}\n\n-- Optional dependencies\nlocal prefabs = {\n    "spear_fx",\n}\n\n-- Equipment functions\nlocal function onequip(inst, owner)\n    -- Change owner\'s appearance when equipped\n    owner.AnimState:OverrideSymbol("swap_object", "swap_spear", "swap_spear")\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\nend\n\nlocal function onunequip(inst, owner)\n    -- Restore owner\'s appearance when unequipped\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\nend\n\n-- Main creation function\nlocal function fn()\n    local inst = CreateEntity()\n\n    -- Add required engine components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n\n    -- Configure physics\n    MakeInventoryPhysics(inst)\n\n    -- Configure animations\n    inst.AnimState:SetBank("spear")\n    inst.AnimState:SetBuild("spear")\n    inst.AnimState:PlayAnimation("idle")\n\n    -- Add tags for identification and optimization\n    inst:AddTag("sharp")\n    inst:AddTag("pointy")\n    inst:AddTag("weapon")\n\n    -- Configure inventory floating properties\n    MakeInventoryFloatable(inst, "med", 0.05, {1.1, 0.5, 1.1}, true, -9)\n\n    -- Network setup\n    inst.entity:SetPristine()\n    if not TheWorld.ismastersim then\n        return inst\n    end\n\n    -- Add game components\n    inst:AddComponent("weapon")\n    inst:AddComponent("finiteuses")\n    inst:AddComponent("inspectable")\n    inst:AddComponent("inventoryitem")\n    inst:AddComponent("equippable")\n    \n    -- Configure components\n    inst.components.weapon:SetDamage(TUNING.SPEAR_DAMAGE)\n    inst.components.finiteuses:SetMaxUses(TUNING.SPEAR_USES)\n    inst.components.finiteuses:SetUses(TUNING.SPEAR_USES)\n    inst.components.finiteuses:SetOnFinished(inst.Remove)\n    inst.components.equippable:SetOnEquip(onequip)\n    inst.components.equippable:SetOnUnequip(onunequip)\n    \n    -- Add special behaviors\n    MakeHauntableLaunch(inst)\n    \n    return inst\nend\n\nreturn Prefab("spear", fn, assets, prefabs)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"core-item-components",children:"Core Item Components"}),"\n",(0,s.jsx)(n.p,{children:"Most items have several common components:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Purpose"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"inventoryitem"})}),(0,s.jsx)(n.td,{children:"Makes the item collectible and storable in inventory"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"inspectable"})}),(0,s.jsx)(n.td,{children:"Allows the item to be examined by players"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"equippable"})}),(0,s.jsx)(n.td,{children:"Allows the item to be equipped in a slot (optional)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"finiteuses"})}),(0,s.jsx)(n.td,{children:"Gives the item durability/limited uses (optional)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"stackable"})}),(0,s.jsx)(n.td,{children:"Allows multiple instances to stack (optional)"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"item-categories",children:"Item Categories"}),"\n",(0,s.jsx)(n.p,{children:"Items in Don't Starve Together fall into several categories:"}),"\n",(0,s.jsx)(n.h3,{id:"tools-and-weapons",children:"Tools and Weapons"}),"\n",(0,s.jsx)(n.p,{children:"Items used for gathering resources or combat:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Tool configuration\ninst:AddComponent("tool")\ninst.components.tool:SetAction(ACTIONS.CHOP, 1) -- Axe for chopping\n\n-- Weapon configuration\ninst:AddComponent("weapon")\ninst.components.weapon:SetDamage(34)\ninst.components.weapon:SetRange(0.5, 1.5)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"food-and-consumables",children:"Food and Consumables"}),"\n",(0,s.jsx)(n.p,{children:"Items that can be eaten or used up:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Food configuration\ninst:AddComponent("edible")\ninst.components.edible.foodtype = FOODTYPE.VEGGIE\ninst.components.edible.healthvalue = 1\ninst.components.edible.hungervalue = 12.5\ninst.components.edible.sanityvalue = 0\n\n-- Perishable configuration\ninst:AddComponent("perishable")\ninst.components.perishable:SetPerishTime(TUNING.PERISH_FAST)\ninst.components.perishable:StartPerishing()\n'})}),"\n",(0,s.jsx)(n.h3,{id:"armor-and-clothing",children:"Armor and Clothing"}),"\n",(0,s.jsx)(n.p,{children:"Protective items that reduce damage or provide insulation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Armor configuration\ninst:AddComponent("armor")\ninst.components.armor:InitCondition(TUNING.ARMORGRASS, TUNING.ARMORGRASS_ABSORPTION)\n\n-- Insulator configuration\ninst:AddComponent("insulator")\ninst.components.insulator:SetInsulation(TUNING.INSULATION_MED)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"resources",children:"Resources"}),"\n",(0,s.jsx)(n.p,{children:"Basic materials used for crafting:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Stackable configuration (for resources)\ninst:AddComponent("stackable")\ninst.components.stackable.maxsize = TUNING.STACK_SIZE_SMALLITEM\n\n-- Fuel configuration\ninst:AddComponent("fuel")\ninst.components.fuel.fuelvalue = TUNING.SMALL_FUEL\n'})}),"\n",(0,s.jsx)(n.h2,{id:"equipment-system",children:"Equipment System"}),"\n",(0,s.jsxs)(n.p,{children:["Equipment items use the ",(0,s.jsx)(n.code,{children:"equippable"})," component and equipment callbacks:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add equippable component\ninst:AddComponent("equippable")\n\n-- Configure equipment slot\ninst.components.equippable.equipslot = EQUIPSLOTS.HEAD  -- or HANDS, BODY\n\n-- Set callbacks\ninst.components.equippable:SetOnEquip(onequip)\ninst.components.equippable:SetOnUnequip(onunequip)\n\n-- Equipment effects\ninst.components.equippable.walkspeedmult = 1.25  -- Speed bonus\ninst.components.equippable.dapperness = TUNING.DAPPERNESS_MED  -- Sanity effect\n'})}),"\n",(0,s.jsx)(n.h2,{id:"durability-system",children:"Durability System"}),"\n",(0,s.jsxs)(n.p,{children:["Items with limited uses implement the ",(0,s.jsx)(n.code,{children:"finiteuses"})," component:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add finite uses component\ninst:AddComponent("finiteuses")\n\n-- Configure durability\ninst.components.finiteuses:SetMaxUses(100)\ninst.components.finiteuses:SetUses(100)\ninst.components.finiteuses:SetOnFinished(inst.Remove)  -- What happens when used up\n\n-- Configure use consumption\ninst.components.finiteuses:SetConsumption(ACTIONS.CHOP, 1)  -- Uses 1 durability per chop\n'})}),"\n",(0,s.jsx)(n.h2,{id:"stackable-items",children:"Stackable Items"}),"\n",(0,s.jsxs)(n.p,{children:["Resources and some consumables can stack using the ",(0,s.jsx)(n.code,{children:"stackable"})," component:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add stackable component\ninst:AddComponent("stackable")\n\n-- Configure stack size\ninst.components.stackable.maxsize = TUNING.STACK_SIZE_SMALLITEM  -- typically 40\n'})}),"\n",(0,s.jsx)(n.h2,{id:"item-visual-representation",children:"Item Visual Representation"}),"\n",(0,s.jsx)(n.p,{children:"Items have animations for different states:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Idle animation in world or inventory\ninst.AnimState:PlayAnimation("idle")\n\n-- When equipped (swap animations)\nowner.AnimState:OverrideSymbol("swap_object", "swap_spear", "swap_spear")\n\n-- Special visual effects\nlocal fx = SpawnPrefab("torch_fire")\nfx.entity:SetParent(inst.entity)\nfx.Transform:SetPosition(0, 0, 0)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"example-spear-item-prefab",children:"Example: Spear Item Prefab"}),"\n",(0,s.jsx)(n.p,{children:"The spear is a basic weapon that demonstrates many common item patterns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Weapon component defines damage\ninst:AddComponent("weapon")\ninst.components.weapon:SetDamage(TUNING.SPEAR_DAMAGE)\n\n-- Finite uses component defines durability\ninst:AddComponent("finiteuses")\ninst.components.finiteuses:SetMaxUses(TUNING.SPEAR_USES)\ninst.components.finiteuses:SetUses(TUNING.SPEAR_USES)\ninst.components.finiteuses:SetOnFinished(inst.Remove)\n\n-- Equippable component defines how it looks when equipped\ninst:AddComponent("equippable")\ninst.components.equippable:SetOnEquip(onequip)\ninst.components.equippable:SetOnUnequip(onunequip)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"specialized-item-behaviors",children:"Specialized Item Behaviors"}),"\n",(0,s.jsx)(n.p,{children:"Many items have unique behaviors implemented through specialized components:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- A book that can be read\ninst:AddComponent("book")\ninst.components.book:SetOnRead(onread)\ninst.components.book:SetReadSanity(TUNING.SANITY_HUGE)\n\n-- A light source\ninst:AddComponent("lighter")\ninst.components.lighter:SetOnLightFn(onlight)\n\n-- A tool that can perform actions\ninst:AddComponent("tool")\ninst.components.tool:SetAction(ACTIONS.HAMMER, 1)\n\n-- A container that can store items\ninst:AddComponent("container")\ninst.components.container:WidgetSetup("backpack")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"item-tags",children:"Item Tags"}),"\n",(0,s.jsx)(n.p,{children:"Tags are used for quick identification and optimization:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Common item tags\ninst:AddTag("sharp")     -- Can cut things\ninst:AddTag("weapon")    -- Used as a weapon\ninst:AddTag("heavy")     -- Causes heavy lifting state\ninst:AddTag("cooker")    -- Can cook food\ninst:AddTag("frozen")    -- Is frozen\ninst:AddTag("irreplaceable")  -- Cannot be replaced when destroyed\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);