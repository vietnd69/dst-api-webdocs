"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[19623],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const l={},t=i.createContext(l);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:n},e.children)}},89055:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/mod-support/dlc/upsell","title":"Upsell System","description":"Demo version purchase screen and trial time management system","source":"@site/docs/game-scripts/core-systems/mod-support/dlc/upsell.md","sourceDirName":"game-scripts/core-systems/mod-support/dlc","slug":"/game-scripts/core-systems/mod-support/dlc/upsell","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/upsell","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"upsell","title":"Upsell System","description":"Demo version purchase screen and trial time management system","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"DLC Support","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/dlcsupport"},"next":{"title":"Networking & Communication Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/"}}');var l=s(74848),t=s(28453);const r={id:"upsell",title:"Upsell System",description:"Demo version purchase screen and trial time management system",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Upsell System",c={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Core Functions",id:"core-functions",level:2},{value:"IsGamePurchased()",id:"is-game-purchased",level:3},{value:"UpdateGamePurchasedState(complete_callback)",id:"update-game-purchased-state",level:3},{value:"Upsell Status Functions",id:"upsell-status-functions",level:2},{value:"UpsellShowing()",id:"upsell-showing",level:3},{value:"WaitingForPurchaseState()",id:"waiting-for-purchase-state",level:3},{value:"Upsell Display Functions",id:"upsell-display-functions",level:2},{value:"ShowUpsellScreen(shouldquit)",id:"show-upsell-screen",level:3},{value:"HandleUpsellClose()",id:"handle-upsell-close",level:3},{value:"Timeout Management",id:"timeout-management",level:2},{value:"CheckForUpsellTimeout(dt)",id:"check-for-upsell-timeout",level:3},{value:"CheckDemoTimeout()",id:"check-demo-timeout",level:3},{value:"State Management",id:"state-management",level:2},{value:"Upsell States",id:"upsell-states",level:3},{value:"State Transitions",id:"state-transitions",level:3},{value:"Global Variables",id:"global-variables",level:2},{value:"DEMO_QUITTING",id:"demo-quitting",level:3},{value:"Constants and Configuration",id:"constants-and-configuration",level:2},{value:"TUNING.DEMO_TIME",id:"tuningdemo_time",level:3},{value:"Purchase Timeout",id:"purchase-timeout",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Frontend Integration",id:"frontend-integration",level:3},{value:"Game Pause Integration",id:"game-pause-integration",level:3},{value:"Player Events",id:"player-events",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Demo Time Warning",id:"demo-time-warning",level:3},{value:"Purchase State Monitoring",id:"purchase-state-monitoring",level:3},{value:"Demo Feature Restrictions",id:"demo-feature-restrictions",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Purchase Timeout Handling",id:"purchase-timeout-handling",level:3},{value:"State Recovery",id:"state-recovery",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Timing Checks",id:"timing-checks",level:3},{value:"Memory Usage",id:"memory-usage",level:3},{value:"Related Systems",id:"related-systems",level:2},{value:"Security Considerations",id:"security-considerations",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"upsell-system",children:"Upsell System"})}),"\n",(0,l.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Build Version"}),(0,l.jsx)(n.th,{children:"Change Date"}),(0,l.jsx)(n.th,{children:"Change Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"676042"}),(0,l.jsx)(n.td,{children:"2025-06-21"}),(0,l.jsx)(n.td,{children:"stable"}),(0,l.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.strong,{children:"Upsell System"})," manages the demo version experience in Don't Starve Together, handling purchase screen display, trial time limits, and transition from demo to full version. It tracks purchase state and manages timeouts for both demo play time and purchase completion."]}),"\n",(0,l.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Check if game is purchased\nif IsGamePurchased() then\n    print("Full version available")\nelse\n    print("Demo version - limited time remaining")\nend\n\n-- Update purchase state with callback\nUpdateGamePurchasedState(function(is_purchased)\n    if is_purchased then\n        print("Game purchased successfully!")\n    else\n        print("Still in demo mode")\n    end\nend)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,l.jsx)(n.h3,{id:"is-game-purchased",children:"IsGamePurchased()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nChecks whether the full game has been purchased. Returns true if the game is owned, false if running in demo mode."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"(boolean): True if game is purchased, false if in demo mode"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"local function CheckGameAccess()\n    if IsGamePurchased() then\n        -- Enable full game features\n        EnableFullGameContent()\n    else\n        -- Restrict to demo features\n        ShowDemoLimitations()\n    end\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"update-game-purchased-state",children:"UpdateGamePurchasedState(complete_callback)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nUpdates the current purchase state and executes a callback with the result. Used to refresh purchase status after potential purchases."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"complete_callback"})," (function): Function called with purchase state result"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Callback Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"is_purchased"})," (boolean): Current purchase state"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Check purchase state after user interaction\nUpdateGamePurchasedState(function(is_purchased)\n    local active_screen = TheFrontEnd:GetActiveScreen()\n    if active_screen and active_screen.Refresh then\n        active_screen:Refresh()\n    end\n    \n    if is_purchased then\n        UnlockFullVersion()\n    end\nend)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"upsell-status-functions",children:"Upsell Status Functions"}),"\n",(0,l.jsx)(n.h3,{id:"upsell-showing",children:"UpsellShowing()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nReturns whether the upsell purchase screen is currently being displayed."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"(boolean): True if upsell screen is visible"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"if UpsellShowing() then\n    -- Disable game input while upsell is shown\n    DisableGameControls()\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"waiting-for-purchase-state",children:"WaitingForPurchaseState()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nReturns whether the system is waiting for purchase completion after user interaction."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"(boolean): True if waiting for purchase callback"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"if WaitingForPurchaseState() then\n    -- Show loading indicator\n    DisplayPurchaseWaitMessage()\nend\n"})}),"\n",(0,l.jsx)(n.h2,{id:"upsell-display-functions",children:"Upsell Display Functions"}),"\n",(0,l.jsx)(n.h3,{id:"show-upsell-screen",children:"ShowUpsellScreen(shouldquit)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nDisplays the purchase upsell screen to the user. Pauses the game and sends UI trigger to show purchase options."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"shouldquit"})," (boolean): Whether to quit after showing (true for timeout, false for manual trigger)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Manual upsell trigger\nlocal function OnPurchaseButtonClicked()\n    ShowUpsellScreen(false)\nend\n\n-- Automatic timeout trigger\nlocal function OnDemoTimeExpired()\n    ShowUpsellScreen(true)\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"handle-upsell-close",children:"HandleUpsellClose()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nHandles cleanup when the upsell screen is closed. Updates purchase state and determines next action based on purchase result and demo time."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Called automatically when upsell UI is dismissed\n-- Updates game state and handles post-purchase flow\n"})}),"\n",(0,l.jsx)(n.h2,{id:"timeout-management",children:"Timeout Management"}),"\n",(0,l.jsx)(n.h3,{id:"check-for-upsell-timeout",children:"CheckForUpsellTimeout(dt)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nChecks for purchase completion timeout. If purchase interaction takes longer than 30 seconds, automatically closes and quits."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"dt"})," (number): Delta time since last check"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Implementation Details:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Timeout duration: 30 seconds"}),"\n",(0,l.jsx)(n.li,{children:'Only active when in "WAITING" state'}),"\n",(0,l.jsx)(n.li,{children:"Triggers automatic quit on timeout"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Called automatically in WallUpdate\nfunction WallUpdate(dt)\n    -- ... other updates ...\n    CheckForUpsellTimeout(dt)\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"check-demo-timeout",children:"CheckDemoTimeout()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nChecks if demo play time has exceeded the allowed limit. Automatically triggers upsell screen when demo time expires."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Demo Time Limit:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Controlled by ",(0,l.jsx)(n.code,{children:"TUNING.DEMO_TIME"})," constant"]}),"\n",(0,l.jsxs)(n.li,{children:["Checked against ",(0,l.jsx)(n.code,{children:"GetTimePlaying()"})," result"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Called automatically in main Update loop\nfunction Update(dt)\n    -- ... other updates ...\n    CheckDemoTimeout()\nend\n"})}),"\n",(0,l.jsx)(n.h2,{id:"state-management",children:"State Management"}),"\n",(0,l.jsx)(n.h3,{id:"upsell-states",children:"Upsell States"}),"\n",(0,l.jsxs)(n.p,{children:["The system uses ",(0,l.jsx)(n.code,{children:"upsell_status"})," to track current state:"]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"State"}),(0,l.jsx)(n.th,{children:"Description"}),(0,l.jsx)(n.th,{children:"Next Possible States"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"nil"})}),(0,l.jsx)(n.td,{children:"Normal gameplay, no upsell active"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'"SHOWING"'})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'"SHOWING"'})}),(0,l.jsx)(n.td,{children:"Upsell screen is displayed"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'"WAITING"'})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'"WAITING"'})}),(0,l.jsx)(n.td,{children:"Waiting for purchase completion"}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"nil"}),", ",(0,l.jsx)(n.code,{children:'"QUITTING"'})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'"QUITTING"'})}),(0,l.jsx)(n.td,{children:"Demo timeout, preparing to quit"}),(0,l.jsx)(n.td,{children:"(terminal state)"})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"state-transitions",children:"State Transitions"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Normal flow\nnil \u2192 "SHOWING" \u2192 "WAITING" \u2192 nil\n\n-- Timeout flow  \nnil \u2192 "SHOWING" \u2192 "WAITING" \u2192 "QUITTING"\n\n-- Direct quit flow\nnil \u2192 "SHOWING" \u2192 "QUITTING"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"global-variables",children:"Global Variables"}),"\n",(0,l.jsx)(n.h3,{id:"demo-quitting",children:"DEMO_QUITTING"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nGlobal flag indicating that the demo is in the process of quitting due to time expiration or purchase completion."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"if DEMO_QUITTING then\n    -- Disable new game actions\n    PreventNewGameStart()\nend\n"})}),"\n",(0,l.jsx)(n.h2,{id:"constants-and-configuration",children:"Constants and Configuration"}),"\n",(0,l.jsx)(n.h3,{id:"tuningdemo_time",children:"TUNING.DEMO_TIME"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nMaximum allowed playtime in demo mode before upsell is triggered."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"local time_remaining = TUNING.DEMO_TIME - GetTimePlaying()\nif time_remaining <= 0 then\n    -- Demo time expired\n    TriggerUpsell()\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"purchase-timeout",children:"Purchase Timeout"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Value:"})," ",(0,l.jsx)(n.code,{children:"30"})," seconds"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nMaximum time to wait for purchase completion before automatically quitting."]}),"\n",(0,l.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,l.jsx)(n.h3,{id:"frontend-integration",children:"Frontend Integration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- UI trigger for showing purchase screen\nlocal trigger = json.encode{upsell={timedout=shouldquit}}\nTheSim:SendUITrigger(trigger)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"game-pause-integration",children:"Game Pause Integration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Pause game during upsell\nSetPause(true, "upsell")\n\n-- Resume after completion\nSetPause(false)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"player-events",children:"Player Events"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Trigger quit event\nlocal player = ThePlayer\nif player then\n    player:PushEvent("quit", {})\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,l.jsx)(n.h3,{id:"demo-time-warning",children:"Demo Time Warning"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"local function CheckDemoTimeRemaining()\n    if not IsGamePurchased() then\n        local time_playing = GetTimePlaying()\n        local demo_limit = TUNING.DEMO_TIME\n        local time_remaining = demo_limit - time_playing\n        \n        if time_remaining <= 300 then  -- 5 minutes warning\n            ShowDemoTimeWarning(time_remaining)\n        end\n    end\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"purchase-state-monitoring",children:"Purchase State Monitoring"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"local function MonitorPurchaseState()\n    if UpsellShowing() then\n        -- Show purchase screen overlay\n        DisplayPurchaseUI()\n    elseif WaitingForPurchaseState() then\n        -- Show waiting indicator\n        DisplayPurchaseWaiting()\n    else\n        -- Normal gameplay\n        HidePurchaseUI()\n    end\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"demo-feature-restrictions",children:"Demo Feature Restrictions"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"local function ApplyDemoRestrictions()\n    if not IsGamePurchased() then\n        -- Limit available characters\n        RestrictCharacterSelection()\n        \n        -- Disable certain features\n        DisablePremiumFeatures()\n        \n        -- Show demo watermark\n        ShowDemoWatermark()\n    end\nend\n"})}),"\n",(0,l.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,l.jsx)(n.h3,{id:"purchase-timeout-handling",children:"Purchase Timeout Handling"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Automatic timeout after 30 seconds\nif waitingforpurchasetimeout > 30 then\n    print("Upsell callback timed out. Very odd.")\n    SetPause(false)\n    \n    -- Force quit\n    local player = ThePlayer\n    if player then\n        player:PushEvent("quit", {})\n    end\nend\n'})}),"\n",(0,l.jsx)(n.h3,{id:"state-recovery",children:"State Recovery"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Reset upsell state on error\nlocal function ResetUpsellState()\n    upsell_status = nil\n    waitingforpurchasetimeout = 0\n    SetPause(false)\nend\n"})}),"\n",(0,l.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,l.jsx)(n.h3,{id:"timing-checks",children:"Timing Checks"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CheckDemoTimeout()"})," called once per update frame"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CheckForUpsellTimeout()"})," only active during purchase wait"]}),"\n",(0,l.jsx)(n.li,{children:"Purchase state checks are lightweight"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Minimal global state (3 variables)"}),"\n",(0,l.jsx)(n.li,{children:"No persistent storage required"}),"\n",(0,l.jsx)(n.li,{children:"Callback-based purchase checking"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"related-systems",children:"Related Systems"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./update.md",children:(0,l.jsx)(n.strong,{children:"Update System"})}),": Integrates timeout checks into main update loop"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./tuning.md",children:(0,l.jsx)(n.strong,{children:"Tuning"})}),": Contains demo time limit configuration"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./frontend.md",children:(0,l.jsx)(n.strong,{children:"Frontend"})}),": Handles UI display and user interaction"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./main.md",children:(0,l.jsx)(n.strong,{children:"Main"})}),": Provides timing functions like ",(0,l.jsx)(n.code,{children:"GetTimePlaying()"})]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Purchase verification handled at platform level"}),"\n",(0,l.jsx)(n.li,{children:"Demo time tracking not user-modifiable"}),"\n",(0,l.jsx)(n.li,{children:"Automatic quit prevents infinite demo play"}),"\n",(0,l.jsx)(n.li,{children:"Purchase state validated through secure channels"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);