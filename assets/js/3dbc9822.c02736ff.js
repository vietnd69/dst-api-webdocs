"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[24892],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},38627:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/localization-content/strings/createstringspo_dlc","title":"Create Strings POT DLC","description":"DLC-specific POT file generation tool for localization workflows, particularly for Reign of Giants","source":"@site/docs/game-scripts/core-systems/localization-content/strings/createstringspo_dlc.md","sourceDirName":"game-scripts/core-systems/localization-content/strings","slug":"/game-scripts/core-systems/localization-content/strings/createstringspo_dlc","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/createstringspo_dlc","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"createstringspo_dlc","title":"Create Strings POT DLC","description":"DLC-specific POT file generation tool for localization workflows, particularly for Reign of Giants","sidebar_position":5,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Create Strings POT","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/createstringspo"},"next":{"title":"Strings","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/"}}');var t=s(74848),r=s(28453);const l={id:"createstringspo_dlc",title:"Create Strings POT DLC",description:"DLC-specific POT file generation tool for localization workflows, particularly for Reign of Giants",sidebar_position:5,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Create Strings POT DLC",o={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Constants",id:"constants",level:2},{value:"REIGN_OF_GIANTS",id:"reign_of_giants",level:3},{value:"POT Format Versions",id:"pot-format-versions",level:3},{value:"Package Path Configuration",id:"package-path-configuration",level:3},{value:"Functions",id:"functions",level:2},{value:"IsDLCEnabled(val)",id:"is-dlc-enabled",level:3},{value:"CreateStringsPOTv1(filename, root, tbl_dta, tbl_lkp)",id:"create-strings-pot-v1",level:3},{value:"CreateStringsPOTv2(filename, root, tbl_dta, tbl_lkp)",id:"create-strings-pot-v2",level:3},{value:"IsValidString(str)",id:"is-valid-string",level:3},{value:"LookupIdValue(lkp_var, path)",id:"lookup-id-value",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Related Modules",id:"related-modules",level:2},{value:"Status Indicators",id:"status-indicators",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"create-strings-pot-dlc",children:"Create Strings POT DLC"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"createstringspo_dlc.lua"})," script is a specialized tool for generating POT (Portable Object Template) files from DLC string tables, particularly designed for Reign of Giants content."]}),"\n",(0,t.jsx)(n.p,{children:"The system provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DLC Integration"}),": Handles DLC-specific strings including character speech"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Localization Support"}),": Converts game strings into POT format for translation workflows"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Compatibility"}),": Supports both v1 (msgid-based) and v2 (msgctxt-based) formats"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Translation Management"}),": Enables creation of translation files from existing string tables"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quality Assurance"}),": Validates string content and handles special characters"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Enable DLC\nfunction IsDLCEnabled(val)\n    return val == REIGN_OF_GIANTS\nend\n\n-- Generate v2 format POT file\nCreateStringsPOTv2("..\\\\DLC0001\\\\scripts\\\\languages\\\\strings.pot", "STRINGS", STRINGS)\n\n-- Generate with translation data\nCreateStringsPOTv2("output/french.po", "STRINGS", french_strings, STRINGS)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,t.jsx)(n.h3,{id:"reign_of_giants",children:"REIGN_OF_GIANTS"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Value:"})," ",(0,t.jsx)(n.code,{children:"1"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," \ud83d\udfe2 ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," DLC identifier constant for Reign of Giants expansion."]}),"\n",(0,t.jsx)(n.h3,{id:"pot-format-versions",children:"POT Format Versions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Version"}),(0,t.jsx)(n.th,{children:"Format"}),(0,t.jsx)(n.th,{children:"Primary Key"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"v1"})}),(0,t.jsx)(n.td,{children:"msgid-based"}),(0,t.jsx)(n.td,{children:"String content"}),(0,t.jsx)(n.td,{children:"Legacy compatibility, simple workflows"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"v2"})}),(0,t.jsx)(n.td,{children:"msgctxt-based"}),(0,t.jsx)(n.td,{children:"Path context"}),(0,t.jsx)(n.td,{children:"Modern workflows, better organization"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"package-path-configuration",children:"Package Path Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The system prioritizes DLC directories for script loading:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"..\\\\DLC0001\\\\scripts\\\\?.lua;..\\\\DLC0002\\\\scripts\\\\?.lua;?.lua\n"})}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"is-dlc-enabled",children:"IsDLCEnabled(val)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," \ud83d\udfe2 ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if a specific DLC is enabled. Currently supports Reign of Giants detection."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"val"})," (number): DLC identifier to check"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if the DLC is enabled, false otherwise"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"function IsDLCEnabled(val)\n    if val == REIGN_OF_GIANTS then\n        return true\n    end\nend\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added in build 676042: Current stable implementation"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"create-strings-pot-v1",children:"CreateStringsPOTv1(filename, root, tbl_dta, tbl_lkp)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," \ud83d\udfe2 ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCreates a POT file using the original msgid-based format with duplicate detection."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filename"}),' (string, optional): Output filename, defaults to "data\\scripts\\languages\\temp_v1.pot"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"root"}),' (string, optional): Root table name, defaults to "STRINGS"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tbl_dta"})," (table): Table containing string data to process"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tbl_lkp"})," (table, optional): Lookup table for translation data"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'CreateStringsPOTv1("output/dlc_strings_v1.pot", "STRINGS", STRINGS)\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added in build 676042: Current stable implementation"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"create-strings-pot-v2",children:"CreateStringsPOTv2(filename, root, tbl_dta, tbl_lkp)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," \ud83d\udfe2 ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCreates a POT file using the enhanced msgctxt-based format with proper headers."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filename"}),' (string, optional): Output filename, defaults to "data\\DLC0001\\scripts\\languages\\temp_v2.pot"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"root"}),' (string, optional): Root table name, defaults to "STRINGS"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tbl_dta"})," (table): Table containing string data to process"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tbl_lkp"})," (table, optional): Lookup table for translation data"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'CreateStringsPOTv2("..\\\\DLC0001\\\\scripts\\\\languages\\\\strings.pot", "STRINGS", STRINGS)\n\n-- With translation data\nCreateStringsPOTv2("output/french.po", "STRINGS", french_strings, STRINGS)\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added in build 676042: Current stable implementation"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"is-valid-string",children:"IsValidString(str)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," \ud83d\udfe2 ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nValidates if a string contains only valid ASCII characters (32-127) for POT file inclusion."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"str"})," (string): String to validate"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if string contains only valid ASCII characters, false otherwise"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"if IsValidString(game_string) then\n    -- Process string for POT file\nend\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added in build 676042: Current stable implementation"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"lookup-id-value",children:"LookupIdValue(lkp_var, path)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," \ud83d\udfe2 ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nPerforms dynamic lookup of string values from a lookup table using dot-delimited path syntax with support for numeric indices."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"lkp_var"})," (string): Name of variable holding lookup table"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"}),' (string): Dot-delimited path to the value (e.g., "STRINGS.CHARACTERS.WILSON.ACTIONFAIL.BUILD.1")']}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): Value from lookup table if found, nil otherwise"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local value = LookupIdValue("STRINGS_LOOKUP", "STRINGS.CHARACTERS.WATHGRITHR.ANNOUNCE_DUSK")\nif value then\n    print("Found translation: " .. value)\nend\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added in build 676042: Current stable implementation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- DLC setup and POT generation\nfunction IsDLCEnabled(val)\n    return val == REIGN_OF_GIANTS\nend\n\n-- Load DLC strings\nrequire "strings"\n\n-- Generate v2 format POT file for DLC\nCreateStringsPOTv2("..\\\\DLC0001\\\\scripts\\\\languages\\\\strings.pot", "STRINGS", STRINGS)\n\n-- Generate translation POT\nlocal translated_strings = LoadTranslationTable("french_strings.lua")\nCreateStringsPOTv2("output/french.po", "STRINGS", translated_strings, STRINGS)\n\n-- Validate strings before processing\nif IsValidString(game_string) then\n    -- String is safe for POT generation\nend\n'})}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/createstringspo",children:(0,t.jsx)(n.strong,{children:"Create Strings POT"})}),": Main game POT generation system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./localization.md",children:(0,t.jsx)(n.strong,{children:"Localization"})}),": Main localization system that uses POT files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../languages/index.md",children:(0,t.jsx)(n.strong,{children:"Strings"})}),": String table definitions and structure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./constants.md",children:(0,t.jsx)(n.strong,{children:"Constants"})}),": Game constants including DLC identifiers"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"status-indicators",children:"Status Indicators"}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udfe2 ",(0,t.jsx)(n.strong,{children:"Stable"}),": All core functionality is stable and production-ready"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);