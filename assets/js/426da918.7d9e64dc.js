"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[1254],{7034:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api-vanilla/components/inspectable","title":"Inspectable","description":"The Inspectable component allows entities to be examined by players, displaying descriptive text when interacted with. It manages custom descriptions, conditional examination text, and localization.","source":"@site/docs/api-vanilla/components/inspectable.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/inspectable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/inspectable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":27,"frontMatter":{"id":"inspectable","title":"Inspectable","sidebar_position":27},"sidebar":"docs","previous":{"title":"Equippable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/equippable"},"next":{"title":"Locomotor","permalink":"/dst-api-webdocs/docs/api-vanilla/components/locomotor"}}');var s=t(4848),o=t(8453);const a={id:"inspectable",title:"Inspectable",sidebar_position:27},l="Inspectable Component",r={},c=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Inspection Status",id:"inspection-status",level:2},{value:"Multilingual Support",id:"multilingual-support",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2},{value:"Example: Basic Inspectable Entity",id:"example-basic-inspectable-entity",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"inspectable-component",children:"Inspectable Component"})}),"\n",(0,s.jsx)(e.p,{children:"The Inspectable component allows entities to be examined by players, displaying descriptive text when interacted with. It manages custom descriptions, conditional examination text, and localization."}),"\n",(0,s.jsx)(e.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Add an inspectable component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("inspectable")\n\n-- Configure the inspectable component\nlocal inspectable = entity.components.inspectable\ninspectable.nameoverride = "custom_name"\ninspectable.descriptionfn = function(inst, viewer)\n    return "This is a custom description."\nend\n'})}),"\n",(0,s.jsx)(e.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Property"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"nameoverride"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Custom name for the entity when inspected"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"descriptionfn"})}),(0,s.jsx)(e.td,{children:"Function"}),(0,s.jsx)(e.td,{children:"Function that returns a custom description"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"getstatus"})}),(0,s.jsx)(e.td,{children:"Function"}),(0,s.jsx)(e.td,{children:"Function that returns entity status"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"description"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Static custom description string"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"getspecialdescription"})}),(0,s.jsx)(e.td,{children:"Function"}),(0,s.jsx)(e.td,{children:"Function for special descriptions"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"noanim"})}),(0,s.jsx)(e.td,{children:"Boolean"}),(0,s.jsx)(e.td,{children:"If true, doesn't play examine animation when inspected"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Set custom description function\ninspectable:SetDescriptionFn(function(inst, viewer)\n    if viewer.components.hunger.current < 10 then\n        return "I\'m too hungry to examine this properly."\n    else\n        return "This is a normal description."\n    end\nend)\n\n-- Get description when inspected\nlocal description = inspectable:GetDescription(viewer)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"inspection-status",children:"Inspection Status"}),"\n",(0,s.jsx)(e.p,{children:"The component can return different status information that's appended to the basic description:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Set status function\ninspectable.getstatus = function(inst)\n    if inst.components.growable ~= nil then\n        if inst.components.growable:IsGrowable() then\n            return "GROWING"\n        elseif inst.components.growable:GetStage() >= 3 then\n            return "MATURE"\n        else\n            return "YOUNG"\n        end\n    end\n    return nil\nend\n'})}),"\n",(0,s.jsx)(e.h2,{id:"multilingual-support",children:"Multilingual Support"}),"\n",(0,s.jsx)(e.p,{children:"The inspect system supports translations through:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"STRINGS.CHARACTERS[charactername].DESCRIBE[prefab]"})," - Character-specific descriptions"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"STRINGS.CHARACTERS.GENERIC.DESCRIBE[prefab]"})," - Generic descriptions for all characters"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,s.jsx)(e.p,{children:"The Inspectable component often works with:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Named"})," - For customizing entity names"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Perishable"})," - For showing spoilage status"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Growable"})," - For showing growth stage"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Health"})," - For showing health status"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Armor"})," - For showing durability status"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Named Component"})," - For customizing entity names"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/perishable",children:"Perishable Component"})," - For showing spoilage status"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/growable",children:"Growable Component"})," - For showing growth stage information"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/health",children:"Health Component"})," - For showing health status"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Talker Component"})," - For displaying character dialogue"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"example-basic-inspectable-entity",children:"Example: Basic Inspectable Entity"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'local function MakeInspectableEntity()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it inspectable\n    inst:AddComponent("inspectable")\n    \n    -- Simple static description\n    inst.components.inspectable.description = "This is a simple entity that can be examined."\n    \n    return inst\nend\n\n-- Example of conditional inspection\nlocal function MakeComplexInspectable()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Add health for status\n    inst:AddComponent("health")\n    inst.components.health:SetMaxHealth(100)\n    \n    -- Make it inspectable with conditions\n    inst:AddComponent("inspectable")\n    inst.components.inspectable:SetDescriptionFn(function(inst, viewer)\n        local health_percent = inst.components.health:GetPercent()\n        \n        if health_percent > 0.75 then\n            return "It looks very healthy."\n        elseif health_percent > 0.5 then\n            return "It has some minor injuries."\n        elseif health_percent > 0.25 then\n            return "It looks badly wounded."\n        else\n            return "It\'s on the verge of death."\n        end\n    end)\n    \n    return inst\nend\n\n-- Example of season-dependent descriptions\nlocal function MakeSeasonalInspectable()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    \n    -- Make it inspectable\n    inst:AddComponent("inspectable")\n    inst.components.inspectable:SetDescriptionFn(function(inst)\n        local world = TheWorld\n        if world.state.isspring then\n            return "It blooms beautifully in spring."\n        elseif world.state.issummer then\n            return "It\'s thriving in the summer heat."\n        elseif world.state.isautumn then\n            return "Its leaves are changing color for autumn."\n        elseif world.state.iswinter then\n            return "It\'s dormant during the winter."\n        end\n        return "It\'s a plant."\n    end)\n    \n    return inst\nend\n'})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var i=t(6540);const s={},o=i.createContext(s);function a(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);