"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[89204],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var a=s(96540);const r={},i=a.createContext(r);function t(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:n},e.children)}},57866:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"game-scripts/core-systems/user-interface/graphics/camerashake","title":"CameraShake","description":"Camera shake system for creating visual feedback effects during gameplay events","source":"@site/docs/game-scripts/core-systems/user-interface/graphics/camerashake.md","sourceDirName":"game-scripts/core-systems/user-interface/graphics","slug":"/game-scripts/core-systems/user-interface/graphics/camerashake","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/camerashake","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"camerashake","title":"CameraShake","description":"Camera shake system for creating visual feedback effects during gameplay events","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Graphics Systems Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/"},"next":{"title":"Emitters","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/emitters"}}');var r=s(74848),i=s(28453);const t={id:"camerashake",title:"CameraShake",description:"Camera shake system for creating visual feedback effects during gameplay events",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="CameraShake",c={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Constructor",id:"constructor",level:2},{value:"CameraShake(mode, duration, speed, scale)",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"inst()",id:"stop-shaking",level:3},{value:"inst(dt)",id:"update",level:3},{value:"Constants",id:"constants",level:2},{value:"CAMERASHAKE.FULL",id:"camerashakefull",level:3},{value:"CAMERASHAKE.SIDE",id:"camerashakeside",level:3},{value:"CAMERASHAKE.VERTICAL",id:"camerashakevertical",level:3},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Shake Timing Phases",id:"shake-timing-phases",level:3},{value:"Direction Vectors",id:"direction-vectors",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Explosion Effects",id:"explosion-effects",level:3},{value:"Earthquake Effects",id:"earthquake-effects",level:3},{value:"Impact Feedback",id:"impact-feedback",level:3},{value:"Ambient Environmental Effects",id:"ambient-environmental-effects",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Parameter Guidelines",id:"parameter-guidelines",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Integration Tips",id:"integration-tips",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"camerashake",children:"CameraShake"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"CameraShake"})," class provides functionality for creating camera shake effects to enhance visual feedback during gameplay events such as explosions, impacts, earthquakes, and other dramatic moments. The system uses predefined shake direction patterns with configurable timing and intensity parameters."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Create a strong explosion shake effect\nlocal explosionShake = CameraShake(CAMERASHAKE.FULL, 0.8, 0.04, 3.0)\n\n-- Update in game loop\nlocal shakeOffset = explosionShake:Update(dt)\nif shakeOffset then\n    -- Apply shake offset to camera position\n    camera:ApplyShakeOffset(shakeOffset)\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.h3,{id:"constructor",children:"CameraShake(mode, duration, speed, scale)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates a new camera shake instance with specified parameters."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mode"})," (number): Shake pattern mode (CAMERASHAKE.FULL/SIDE/VERTICAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"duration"})," (number): Total shake duration in seconds (default: 1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"speed"})," (number): Speed of individual shake movements (default: 0.05)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scale"})," (number): Intensity scaling factor (default: 1)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(CameraShake): New camera shake instance"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Full directional shake for explosion\nlocal explosionShake = CameraShake(CAMERASHAKE.FULL, 0.6, 0.04, 2.5)\n\n-- Horizontal shake for side impact\nlocal sideShake = CameraShake(CAMERASHAKE.SIDE, 0.4, 0.03, 1.2)\n\n-- Vertical shake for landing impact\nlocal landingShake = CameraShake(CAMERASHAKE.VERTICAL, 0.3, 0.02, 1.8)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(n.h3,{id:"stop-shaking",children:["inst",":StopShaking","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nImmediately stops the current shake effect and resets all internal parameters."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\nNone"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"}),"\nNone"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local shake = CameraShake(CAMERASHAKE.FULL, 2.0, 0.05, 1.5)\n-- Later, stop the shake immediately\nshake:StopShaking()\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"update",children:["inst",":Update","(dt)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nUpdates the shake effect and returns the current shake offset vector. Returns nil when the shake effect is complete."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dt"})," (number): Delta time since last update in seconds"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(Vector3 or nil): Current shake offset vector, or nil if shake is complete"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local shake = CameraShake(CAMERASHAKE.FULL, 1.0, 0.05, 2.0)\n\n-- In update loop\nlocal shakeOffset = shake:Update(dt)\nif shakeOffset then\n    camera.position = camera.basePosition + shakeOffset\nelse\n    -- Shake effect has completed\n    shake = nil\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,r.jsx)(n.h3,{id:"camerashakefull",children:"CAMERASHAKE.FULL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," Constant defined in game engine"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Creates shake movement in all 8 directions around the camera center (up, down, left, right, and 4 diagonal directions). Used for explosions, major impacts, and earthquakes."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage Pattern:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    4\n 7     1  \n2   S   6\n 5     3\n    0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"camerashakeside",children:"CAMERASHAKE.SIDE"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," Constant defined in game engine"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Creates horizontal-only shake movement (left and right). Used for side impacts, lateral forces, and character movement effects."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage Pattern:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"0   S   1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"camerashakevertical",children:"CAMERASHAKE.VERTICAL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," Constant defined in game engine"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Creates vertical-only shake movement (up and down). Used for landing impacts, vertical forces, and building collapses."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage Pattern:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    0\n    S  \n    1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.h3,{id:"shake-timing-phases",children:"Shake Timing Phases"}),"\n",(0,r.jsx)(n.p,{children:"The shake effect follows a three-phase timeline:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ramp-up Phase"})," (0 to speed): Smooth transition from zero to first shake position"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Active Phase"})," (speed to duration + speed): Cyclic movement through shake pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ramp-down Phase"})," (duration + speed to duration + 2*speed): Smooth return to zero"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"direction-vectors",children:"Direction Vectors"}),"\n",(0,r.jsx)(n.p,{children:"Each shake mode uses normalized Vector3 directions:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"FULL Mode (8 directions):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Vector3(0, -1), Vector3(1, 1), Vector3(-1, 0), Vector3(1, -1)"}),"\n",(0,r.jsx)(n.li,{children:"Vector3(0, 1), Vector3(-1, -1), Vector3(1, 0), Vector3(-1, 1)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SIDE Mode (2 directions):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Vector3(-1, 0), Vector3(1, 0)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"VERTICAL Mode (2 directions):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Vector3(0, 1), Vector3(0, -1)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"explosion-effects",children:"Explosion Effects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Strong, short explosion shake\nlocal explosionShake = CameraShake(CAMERASHAKE.FULL, 0.8, 0.04, 3.0)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"earthquake-effects",children:"Earthquake Effects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Long, moderate earthquake shake\nlocal earthquakeShake = CameraShake(CAMERASHAKE.FULL, 5.0, 0.08, 1.5)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"impact-feedback",children:"Impact Feedback"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Quick vertical landing impact\nlocal landingShake = CameraShake(CAMERASHAKE.VERTICAL, 0.3, 0.03, 2.0)\n\n-- Horizontal weapon hit feedback\nlocal hitShake = CameraShake(CAMERASHAKE.SIDE, 0.4, 0.04, 1.2)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ambient-environmental-effects",children:"Ambient Environmental Effects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Subtle background rumble\nlocal ambientShake = CameraShake(CAMERASHAKE.FULL, 3.0, 0.08, 0.8)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"parameter-guidelines",children:"Parameter Guidelines"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": Keep most shakes under 1 second for best user experience"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scale"}),": Use scale values between 0.5-3.0 for realistic effects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Speed"}),": Faster speeds (0.02-0.04) for intense effects, slower (0.06-0.10) for subtle effects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mode Selection"}),": Choose appropriate mode based on the cause of the shake"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create shake instances as needed rather than keeping permanent references"}),"\n",(0,r.jsx)(n.li,{children:"Always check if Update() returns a value before applying offset"}),"\n",(0,r.jsx)(n.li,{children:"Stop unused shake effects with StopShaking() to free resources"}),"\n",(0,r.jsx)(n.li,{children:"The Update method automatically stops when duration is exceeded"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integration-tips",children:"Integration Tips"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Proper integration pattern\nlocal function ApplyCameraShake(shakeInstance, dt)\n    if not shakeInstance then return end\n    \n    local offset = shakeInstance:Update(dt)\n    if offset then\n        -- Apply shake to camera\n        TheCamera:ApplyShake(offset)\n    else\n        -- Shake completed, clean up reference\n        shakeInstance = nil\n    end\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./easing.md",children:"Easing"}),": Mathematical easing functions used for smooth shake transitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./input.md",children:"Input System"}),": Controller vibration integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./vector3.md",children:"Vector3"}),": 3D vector mathematics for shake calculations"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);