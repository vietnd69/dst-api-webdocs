"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[612],{4106:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api vanilla/core/server-startup","title":"Server Startup Process","description":"This document describes the startup sequence of Don\'t Starve Together dedicated servers, with a focus on mod loading and initialization.","source":"@site/docs/api vanilla/core/server-startup.md","sourceDirName":"api vanilla/core","slug":"/api vanilla/core/server-startup","permalink":"/dst-api-webdocs/api vanilla/core/server-startup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"server-startup","title":"Server Startup Process","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Constants","permalink":"/dst-api-webdocs/api vanilla/core/constants"},"next":{"title":"Mod Structure and Server Integration","permalink":"/dst-api-webdocs/api vanilla/core/mod-structure"}}');var s=r(4848),o=r(8453);const d={id:"server-startup",title:"Server Startup Process",sidebar_position:4},t="Server Startup Process",a={},l=[{value:"Server Architecture",id:"server-architecture",level:2},{value:"Startup Sequence",id:"startup-sequence",level:2},{value:"Mod Loading Process",id:"mod-loading-process",level:2},{value:"1. Mod Setup and Download",id:"1-mod-setup-and-download",level:3},{value:"2. Mod Configuration",id:"2-mod-configuration",level:3},{value:"3. Mod Initialization",id:"3-mod-initialization",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"server-startup-process",children:"Server Startup Process"})}),"\n",(0,s.jsx)(n.p,{children:"This document describes the startup sequence of Don't Starve Together dedicated servers, with a focus on mod loading and initialization."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'flowchart TD\r\n    A[Server Startup] --\x3e B[Environment Initialization]\r\n    B --\x3e C[Configuration Loading]\r\n    C --\x3e D[Mod Management]\r\n    D --\x3e E[World Loading]\r\n    E --\x3e F[Game Logic Initialization]\r\n    \r\n    subgraph "Mod Loading Process"\r\n    D1[Check dedicated_server_mods_setup.lua] --\x3e D2[Download/Update Workshop Mods]\r\n    D2 --\x3e D3[Read modoverrides.lua]\r\n    D3 --\x3e D4[Load modinfo.lua]\r\n    D4 --\x3e D5[Initialize Mod Environment]\r\n    D5 --\x3e D6[Execute modworldgenmain.lua]\r\n    D6 --\x3e D7[Execute modmain.lua]\r\n    D7 --\x3e D8[Register Mod Hooks]\r\n    end\r\n    \r\n    D1 -.-> D\r\n    D8 -.-> E\r\n    \r\n    subgraph "Server Architecture"\r\n    S1[Cluster] --\x3e S2[Master Shard]\r\n    S1 --\x3e S3[Caves Shard]\r\n    S2 --\x3e S4[Master modoverrides.lua]\r\n    S3 --\x3e S5[Caves modoverrides.lua]\r\n    end\r\n    \r\n    C -.-> S1\n'})}),"\n",(0,s.jsx)(n.h2,{id:"server-architecture",children:"Server Architecture"}),"\n",(0,s.jsx)(n.p,{children:"DST servers operate using a cluster-based architecture:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cluster"}),": The overall server installation, containing configuration files and multiple shards"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Shards"}),": Individual server instances (Master/Caves) that run within a cluster","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Master Shard"}),": The main overworld shard, required for every server"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caves Shard"}),": Optional underground world shard"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each shard runs as a separate process but shares configuration data from the cluster."}),"\n",(0,s.jsx)(n.h2,{id:"startup-sequence",children:"Startup Sequence"}),"\n",(0,s.jsx)(n.p,{children:"The server follows this general startup sequence:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Environment Initialization"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Load system libraries and core game files"}),"\n",(0,s.jsx)(n.li,{children:"Initialize global variables and namespaces"}),"\n",(0,s.jsx)(n.li,{children:"Setup logging and error handling"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration Loading"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read cluster and shard configuration files"}),"\n",(0,s.jsx)(n.li,{children:"Process command line arguments"}),"\n",(0,s.jsx)(n.li,{children:"Setup networking parameters"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Mod Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Download and update required mods"}),"\n",(0,s.jsx)(n.li,{children:"Verify mod integrity"}),"\n",(0,s.jsx)(n.li,{children:"Initialize mod environment"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"World Loading"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Load or generate world data"}),"\n",(0,s.jsx)(n.li,{children:"Initialize world entities"}),"\n",(0,s.jsx)(n.li,{children:"Setup world systems (weather, seasons, etc.)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Game Logic Initialization"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Initialize state graphs"}),"\n",(0,s.jsx)(n.li,{children:"Setup event handlers"}),"\n",(0,s.jsx)(n.li,{children:"Prepare for client connections"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mod-loading-process",children:"Mod Loading Process"}),"\n",(0,s.jsx)(n.p,{children:"Mods are loaded in a specific sequence during server startup:"}),"\n",(0,s.jsx)(n.h3,{id:"1-mod-setup-and-download",children:"1. Mod Setup and Download"}),"\n",(0,s.jsxs)(n.p,{children:["The server first checks ",(0,s.jsx)(n.code,{children:"dedicated_server_mods_setup.lua"})," located in the server's root directory. This file contains ",(0,s.jsx)(n.code,{children:"ServerModSetup()"})," function calls that tell the server which Workshop mods to download:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Example dedicated_server_mods_setup.lua\r\nServerModSetup("workshop-1185229307") -- Example Workshop item ID\r\nServerModSetup("workshop-1595631294") -- Another Workshop item ID\n'})}),"\n",(0,s.jsx)(n.p,{children:"During this phase, the server:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Downloads missing mods from the Steam Workshop"}),"\n",(0,s.jsx)(n.li,{children:"Updates existing mods to their latest versions"}),"\n",(0,s.jsx)(n.li,{children:"Creates symbolic links in the game's mods directory"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-mod-configuration",children:"2. Mod Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["After downloading, the server reads shard-specific mod configuration from ",(0,s.jsx)(n.code,{children:"modoverrides.lua"})," located in each shard's directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Example modoverrides.lua\r\nreturn {\r\n  ["workshop-1185229307"] = { \r\n    enabled = true,\r\n    configuration_options = {\r\n      option1 = "value1",\r\n      option2 = "value2"\r\n    }\r\n  },\r\n  ["workshop-1595631294"] = { enabled = true }\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Each shard can have its own mod configuration, allowing different mods to be active in different shards (Master vs Caves)."}),"\n",(0,s.jsx)(n.h3,{id:"3-mod-initialization",children:"3. Mod Initialization"}),"\n",(0,s.jsx)(n.p,{children:"The server then initializes enabled mods in this order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Load each mod's ",(0,s.jsx)(n.code,{children:"modinfo.lua"})," to get metadata"]}),"\n",(0,s.jsx)(n.li,{children:"Initialize mod environment and globals"}),"\n",(0,s.jsxs)(n.li,{children:["Execute ",(0,s.jsx)(n.code,{children:"modworldgenmain.lua"})," if present (affects world generation)"]}),"\n",(0,s.jsxs)(n.li,{children:["Execute ",(0,s.jsx)(n.code,{children:"modmain.lua"})," for each enabled mod in load order"]}),"\n",(0,s.jsx)(n.li,{children:"Register mod hooks, prefabs, recipes, etc."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsx)(n.p,{children:"The server startup process, especially mod loading, can impact server startup time and performance:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Large numbers of mods will increase startup time"}),"\n",(0,s.jsx)(n.li,{children:"Mods with complex initialization code may delay startup"}),"\n",(0,s.jsx)(n.li,{children:"World generation mods are processed first and can significantly affect startup time"}),"\n",(0,s.jsx)(n.li,{children:"Server memory usage scales with the number and complexity of loaded mods"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"Common issues during server startup:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Missing Mods"}),": Verify the Workshop IDs in ",(0,s.jsx)(n.code,{children:"dedicated_server_mods_setup.lua"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mod Conflicts"}),": Check for incompatible mods or conflicting hooks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Startup Crashes"}),": Review server logs for error messages related to specific mods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Issues"}),": Consider reducing the number of mods or optimizing mod code"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.p,{children:"For mod developers and server administrators:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Keep ",(0,s.jsx)(n.code,{children:"modmain.lua"})," lightweight; defer heavy operations until needed"]}),"\n",(0,s.jsxs)(n.li,{children:["Use the appropriate mod flags in ",(0,s.jsx)(n.code,{children:"modinfo.lua"})," (",(0,s.jsx)(n.code,{children:"client_only_mod"}),", ",(0,s.jsx)(n.code,{children:"all_clients_require_mod"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Implement proper version checking in mods to handle game updates"}),"\n",(0,s.jsx)(n.li,{children:"Test mods thoroughly in both dedicated server and client-hosted environments"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>t});var i=r(6540);const s={},o=i.createContext(s);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);