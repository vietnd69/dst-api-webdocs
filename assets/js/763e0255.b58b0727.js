"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[9208],{2638:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api-vanilla/node-types/node-types-overview","title":"Node Types Overview","description":"Last Update: 2023-08-15","source":"@site/docs/api-vanilla/node-types/index.md","sourceDirName":"api-vanilla/node-types","slug":"/api/node-types","permalink":"/dst-api-webdocs/docs/api/node-types","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"node-types-overview","title":"Node Types Overview","sidebar_position":1,"last_updated":"2023-08-15T00:00:00.000Z","slug":"/api/node-types"},"sidebar":"docs","previous":{"title":"Node Types","permalink":"/dst-api-webdocs/docs/category/node-types"},"next":{"title":"Action Nodes","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/action-nodes"}}');var t=i(4848),d=i(8453);const r={id:"node-types-overview",title:"Node Types Overview",sidebar_position:1,last_updated:new Date("2023-08-15T00:00:00.000Z"),slug:"/api/node-types"},o="Node Types Overview",a={},l=[{value:"Node Type Categories",id:"node-type-categories",level:2},{value:"Entity Framework Nodes",id:"entity-framework-nodes",level:3},{value:"Behavioral AI Nodes",id:"behavioral-ai-nodes",level:3},{value:"Animation and State Nodes",id:"animation-and-state-nodes",level:3},{value:"UI and Interface Nodes",id:"ui-and-interface-nodes",level:3},{value:"Network Communication Nodes",id:"network-communication-nodes",level:3},{value:"Common Node Properties and Methods",id:"common-node-properties-and-methods",level:2},{value:"Common Properties",id:"common-properties",level:3},{value:"Common Methods",id:"common-methods",level:3},{value:"Working with Node Types",id:"working-with-node-types",level:2},{value:"Node Type Inheritance",id:"node-type-inheritance",level:2},{value:"System Interaction",id:"system-interaction",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Last Update: 2023-08-15"})}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"node-types-overview",children:"Node Types Overview"})}),"\n",(0,t.jsx)(n.p,{children:"Don't Starve Together's game architecture is built around a robust system of specialized node types that work together to create the game experience. Each node type serves a specific purpose in the game's ecosystem, with its own properties, methods, and interactions with other nodes."}),"\n",(0,t.jsx)(n.h2,{id:"node-type-categories",children:"Node Type Categories"}),"\n",(0,t.jsx)(n.p,{children:"DST's node types are organized into the following categories:"}),"\n",(0,t.jsx)(n.h3,{id:"entity-framework-nodes",children:"Entity Framework Nodes"}),"\n",(0,t.jsx)(n.p,{children:"These nodes form the foundation of all game objects:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Node Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Key Properties"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/entity",children:"Entity"})}),(0,t.jsx)(n.td,{children:"Base object in the game world"}),(0,t.jsx)(n.td,{children:"Transform, AnimState, Tags"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/component",children:"Component"})}),(0,t.jsx)(n.td,{children:"Reusable modules for entity behaviors"}),(0,t.jsx)(n.td,{children:"Component-specific properties"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/prefab",children:"Prefab"})}),(0,t.jsx)(n.td,{children:"Templates for entity creation"}),(0,t.jsx)(n.td,{children:"Assets, Functions"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"behavioral-ai-nodes",children:"Behavioral AI Nodes"}),"\n",(0,t.jsx)(n.p,{children:"These nodes control entity decision-making and state management:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Node Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Key Properties"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/brain",children:"Brain"})}),(0,t.jsx)(n.td,{children:"Controls AI decision-making"}),(0,t.jsx)(n.td,{children:"BehaviorTree, UpdatePeriod"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/action-nodes",children:"Action Nodes"})}),(0,t.jsx)(n.td,{children:"Performs specific actions in behavior trees"}),(0,t.jsx)(n.td,{children:"Status, Visit Function"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/condition-nodes",children:"Condition Nodes"})}),(0,t.jsx)(n.td,{children:"Evaluates conditions in behavior trees"}),(0,t.jsx)(n.td,{children:"Status, Condition Function"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/sequence-nodes",children:"Sequence Nodes"})}),(0,t.jsx)(n.td,{children:"Executes multiple nodes in sequence"}),(0,t.jsx)(n.td,{children:"Children, CurrentChild"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/priority-nodes",children:"Priority Nodes"})}),(0,t.jsx)(n.td,{children:"Selects highest priority action"}),(0,t.jsx)(n.td,{children:"Children, Priorities"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/decorator-nodes",children:"Decorator Nodes"})}),(0,t.jsx)(n.td,{children:"Modifies behavior of other nodes"}),(0,t.jsx)(n.td,{children:"Child, Decorator Function"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"animation-and-state-nodes",children:"Animation and State Nodes"}),"\n",(0,t.jsx)(n.p,{children:"These nodes manage entity animations and states:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Node Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Key Properties"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/stategraph",children:"Stategraph"})}),(0,t.jsx)(n.td,{children:"Manages entity state and animations"}),(0,t.jsx)(n.td,{children:"States, Events, Timeline"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"ui-and-interface-nodes",children:"UI and Interface Nodes"}),"\n",(0,t.jsx)(n.p,{children:"These nodes create and control the user interface:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Node Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Key Properties"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/widget",children:"Widget"})}),(0,t.jsx)(n.td,{children:"UI elements for game interface"}),(0,t.jsx)(n.td,{children:"Position, Scale, Children"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"network-communication-nodes",children:"Network Communication Nodes"}),"\n",(0,t.jsx)(n.p,{children:"These nodes handle multiplayer functionality:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Node Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Key Properties"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/api-vanilla/node-types/network",children:"Network"})}),(0,t.jsx)(n.td,{children:"Synchronizes game state across clients"}),(0,t.jsx)(n.td,{children:"NetVars, Replication"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"common-node-properties-and-methods",children:"Common Node Properties and Methods"}),"\n",(0,t.jsx)(n.p,{children:"While each node type has its own specific properties and methods, there are some common patterns across many node types:"}),"\n",(0,t.jsx)(n.h3,{id:"common-properties",children:"Common Properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GUID"}),": Unique identifier for node instances"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"parent/children"}),": Hierarchical relationships between nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tags"}),": Labels that identify node characteristics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"components"}),": Attached functionality modules (for Entity nodes)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"common-methods",children:"Common Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AddChild/RemoveChild"}),": Manage node hierarchy"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AddTag/RemoveTag"}),": Manage node identification tags"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AddComponent/RemoveComponent"}),": Manage entity components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OnUpdate"}),": Called during update cycle"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"working-with-node-types",children:"Working with Node Types"}),"\n",(0,t.jsx)(n.p,{children:"When developing mods or extensions for Don't Starve Together, you'll typically work with these node types in these ways:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Creation"}),": Instantiating new nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration"}),": Setting properties and connecting nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Behavior"}),": Defining how nodes respond to events and conditions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integration"}),": Making nodes work with the existing game systems"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"node-type-inheritance",children:"Node Type Inheritance"}),"\n",(0,t.jsx)(n.p,{children:"Many node types inherit properties and methods from parent classes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Entity\n  \u251c\u2500\u2500 Character\n  \u251c\u2500\u2500 Item\n  \u2514\u2500\u2500 Structure\n\nBehaviorNode\n  \u251c\u2500\u2500 ActionNode\n  \u251c\u2500\u2500 ConditionNode\n  \u251c\u2500\u2500 SequenceNode\n  \u251c\u2500\u2500 PriorityNode\n  \u2514\u2500\u2500 DecoratorNode\n\nWidget\n  \u251c\u2500\u2500 Button\n  \u251c\u2500\u2500 Text\n  \u2514\u2500\u2500 Image\n"})}),"\n",(0,t.jsx)(n.h2,{id:"system-interaction",children:"System Interaction"}),"\n",(0,t.jsx)(n.p,{children:"All these node types interact to create the complete game experience:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prefabs"})," define what an entity is and which components it has"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Entities"})," provide the foundation for game objects"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Components"})," provide specific behaviors to entities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Brains"})," control AI decision-making using various node types"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stategraphs"})," manage animations and state-based behaviors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Widgets"})," create the user interface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network"})," nodes synchronize the game state for multiplayer"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Understanding how these node types work together is key to modifying the game or creating new content for Don't Starve Together."})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const t={},d=s.createContext(t);function r(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);