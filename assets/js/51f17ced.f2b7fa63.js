"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[94023],{8658:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"game-scripts/core-systems/data-management/saves/scrapbook-partitions","title":"Scrapbook Partitions","description":"Data management system for tracking scrapbook discovery progress and synchronization","source":"@site/docs/game-scripts/core-systems/data-management/saves/scrapbookpartitions.md","sourceDirName":"game-scripts/core-systems/data-management/saves","slug":"/game-scripts/core-systems/data-management/saves/scrapbook-partitions","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/saves/scrapbook-partitions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"scrapbook-partitions","title":"Scrapbook Partitions","description":"Data management system for tracking scrapbook discovery progress and synchronization","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"SaveIndex","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/saves/saveindex"},"next":{"title":"Shard Save Index","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/saves/shardsaveindex"}}');var i=s(74848),t=s(28453);const c={id:"scrapbook-partitions",title:"Scrapbook Partitions",description:"Data management system for tracking scrapbook discovery progress and synchronization",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Scrapbook Partitions",l={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Data Storage Structure",id:"data-storage-structure",level:3},{value:"Partitioning System",id:"partitioning-system",level:3},{value:"Constants",id:"constants",level:2},{value:"FLAGS",id:"flags-constants",level:3},{value:"LOOKUP_LIST",id:"lookup-list-constants",level:3},{value:"BUCKETS_MASK",id:"buckets-mask",level:3},{value:"Class: ScrapbookPartitions",id:"class-scrapbookpartitions",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Core Methods",id:"core-methods",level:2},{value:"scrapbook(thing)",id:"redirect-thing",level:3},{value:"scrapbook(thing)",id:"was-seen-in-game",level:3},{value:"scrapbook(thing)",id:"set-seen-in-game",level:3},{value:"scrapbook(thing)",id:"was-viewed-in-scrapbook",level:3},{value:"scrapbook(thing, value)",id:"set-viewed-in-scrapbook",level:3},{value:"scrapbook(thing, character)",id:"was-inspected-by-character",level:3},{value:"scrapbook(thing, character)",id:"set-inspected-by-character",level:3},{value:"scrapbook(thing)",id:"get-level-for",level:3},{value:"Teaching/Learning Methods",id:"teachinglearning-methods",level:2},{value:"scrapbook(numofentries)",id:"teach-random",level:3},{value:"scrapbook(index)",id:"teach-special",level:3},{value:"scrapbook(entry)",id:"teach-note",level:3},{value:"scrapbook(is_server, inst)",id:"teach-scrapbook-data",level:3},{value:"Storage and Synchronization",id:"storage-and-synchronization",level:2},{value:"scrapbook(force_save)",id:"save",level:3},{value:"scrapbook()",id:"load",level:3},{value:"scrapbook()",id:"apply-online-profile-data",level:3},{value:"scrapbook(hashed, newdata)",id:"update-storage-data",level:3},{value:"Debug Methods",id:"debug-methods",level:2},{value:"scrapbook()",id:"debug-delete-all",level:3},{value:"scrapbook()",id:"debug-seen-everything",level:3},{value:"scrapbook()",id:"debug-unlock-everything",level:3},{value:"Global Instance",id:"global-instance",level:2},{value:"TheScrapbookPartitions",id:"global-instance",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Player Discovery Tracking",id:"player-discovery-tracking",level:3},{value:"Scrapbook UI Integration",id:"scrapbook-ui-integration",level:3},{value:"Progress Calculation",id:"progress-calculation",level:3},{value:"Modded Character Support",id:"modded-character-support",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"Bit Field Structure",id:"bit-field-structure",level:3},{value:"Hash Distribution",id:"hash-distribution",level:3},{value:"Storage Keys",id:"storage-keys",level:3},{value:"Integration Notes",id:"integration-notes",level:2},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"scrapbook-partitions",children:"Scrapbook Partitions"})}),"\n",(0,i.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Build Version"}),(0,i.jsx)(n.th,{children:"Change Date"}),(0,i.jsx)(n.th,{children:"Change Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"676042"}),(0,i.jsx)(n.td,{children:"2025-06-21"}),(0,i.jsx)(n.td,{children:"stable"}),(0,i.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"scrapbookpartitions"})," module provides a sophisticated data management system for tracking player discovery progress in Don't Starve Together's scrapbook. It handles data partitioning, character-specific inspection tracking, backend synchronization, and persistent storage using compact bit-field encoding."]}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Check if a prefab has been seen in game\nif TheScrapbookPartitions:WasSeenInGame("wilson") then\n    print("Wilson has been encountered")\nend\n\n-- Record that a character inspected a prefab\nTheScrapbookPartitions:SetInspectedByCharacter("deerclops", "wilson")\n\n-- Check scrapbook viewing status\nif TheScrapbookPartitions:WasViewedInScrapbook("beefalo") then\n    print("Beefalo entry was viewed in scrapbook")\nend\n\n-- Get discovery level (0=unknown, 1=seen, 2=inspected)\nlocal level = TheScrapbookPartitions:GetLevelFor("chester")\nprint("Chester discovery level:", level)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(n.h3,{id:"data-storage-structure",children:"Data Storage Structure"}),"\n",(0,i.jsx)(n.p,{children:"The system uses a 32-bit integer to store scrapbook data for each prefab:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bits 1-8"}),": Flags (viewed in scrapbook, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bits 9-32"}),": Character inspection mask (24 character slots)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"partitioning-system",children:"Partitioning System"}),"\n",(0,i.jsx)(n.p,{children:"Data is distributed across 16 buckets (0-15) using hash-based partitioning to optimize backend storage and reduce load."}),"\n",(0,i.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,i.jsx)(n.h3,{id:"flags-constants",children:"FLAGS"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Bit flags for tracking scrapbook states."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Flag"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"VIEWED_IN_SCRAPBOOK"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00000001"})}),(0,i.jsx)(n.td,{children:"Entry was viewed in scrapbook UI"})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"lookup-list-constants",children:"LOOKUP_LIST"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Character bit masks for tracking per-character inspections."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Character"}),(0,i.jsx)(n.th,{children:"Bit Mask"}),(0,i.jsx)(n.th,{children:"Slot"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wilson"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00000100"})}),(0,i.jsx)(n.td,{children:"1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"willow"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00000200"})}),(0,i.jsx)(n.td,{children:"2"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wolfgang"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00000400"})}),(0,i.jsx)(n.td,{children:"3"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wendy"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00000800"})}),(0,i.jsx)(n.td,{children:"4"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wx78"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00001000"})}),(0,i.jsx)(n.td,{children:"5"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wickerbottom"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00002000"})}),(0,i.jsx)(n.td,{children:"6"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"woodie"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00004000"})}),(0,i.jsx)(n.td,{children:"7"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wes"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00008000"})}),(0,i.jsx)(n.td,{children:"8"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"waxwell"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00010000"})}),(0,i.jsx)(n.td,{children:"9"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wathgrithr"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00020000"})}),(0,i.jsx)(n.td,{children:"10"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"webber"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00040000"})}),(0,i.jsx)(n.td,{children:"11"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"winona"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00080000"})}),(0,i.jsx)(n.td,{children:"12"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"warly"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00100000"})}),(0,i.jsx)(n.td,{children:"13"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wortox"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00200000"})}),(0,i.jsx)(n.td,{children:"14"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wormwood"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00400000"})}),(0,i.jsx)(n.td,{children:"15"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wurt"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x00800000"})}),(0,i.jsx)(n.td,{children:"16"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"walter"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x01000000"})}),(0,i.jsx)(n.td,{children:"17"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wanda"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x02000000"})}),(0,i.jsx)(n.td,{children:"18"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"buckets-mask",children:"BUCKETS_MASK"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Value:"})," ",(0,i.jsx)(n.code,{children:"0xF"})," (16 buckets)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Mask for distributing data across storage buckets."]}),"\n",(0,i.jsx)(n.h2,{id:"class-scrapbookpartitions",children:"Class: ScrapbookPartitions"}),"\n",(0,i.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local ScrapbookPartitions = Class(function(self)\n    self.storage = {}\n    self.dirty_buckets = {}\nend)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"core-methods",children:"Core Methods"}),"\n",(0,i.jsxs)(n.h3,{id:"redirect-thing",children:["scrapbook",":RedirectThing","(thing)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConverts entity instances or other objects to their string representation for scrapbook tracking."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (EntityScript|string): Entity instance or prefab name"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(string): Prefab name for scrapbook tracking"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- With entity instance\nlocal prefab_name = TheScrapbookPartitions:RedirectThing(inst)\n\n-- With string\nlocal prefab_name = TheScrapbookPartitions:RedirectThing("wilson")\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"was-seen-in-game",children:["scrapbook",":WasSeenInGame","(thing)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if a prefab has been encountered in the game world."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity to check"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if the prefab has been seen"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'if TheScrapbookPartitions:WasSeenInGame("deerclops") then\n    print("Deerclops has been encountered")\nend\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"set-seen-in-game",children:["scrapbook",":SetSeenInGame","(thing)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nMarks a prefab as having been encountered in the game world."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity to mark as seen"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- When player encounters a new creature\nTheScrapbookPartitions:SetSeenInGame("beefalo")\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"was-viewed-in-scrapbook",children:["scrapbook",":WasViewedInScrapbook","(thing)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if a prefab entry was viewed in the scrapbook UI."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity to check"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if viewed in scrapbook"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'if not TheScrapbookPartitions:WasViewedInScrapbook("chester") then\n    -- Show "new" indicator in scrapbook\n    ShowNewEntryIndicator("chester")\nend\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"set-viewed-in-scrapbook",children:["scrapbook",":SetViewedInScrapbook","(thing, value)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nMarks a prefab entry as viewed or unviewed in the scrapbook UI."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"value"})," (boolean): True to mark as viewed, false to mark as unviewed (optional, defaults to true)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Mark as viewed when player opens scrapbook entry\nTheScrapbookPartitions:SetViewedInScrapbook("spider", true)\n\n-- Mark as new when content is updated\nTheScrapbookPartitions:SetViewedInScrapbook("spider", false)\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"was-inspected-by-character",children:["scrapbook",":WasInspectedByCharacter","(thing, character)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if a specific character has personally inspected a prefab."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity to check"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"character"})," (string): Character prefab name"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if the character has inspected this prefab"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'if TheScrapbookPartitions:WasInspectedByCharacter("tentacle", "wilson") then\n    print("Wilson has inspected a tentacle")\nend\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"set-inspected-by-character",children:["scrapbook",":SetInspectedByCharacter","(thing, character)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRecords that a specific character has inspected a prefab."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"character"})," (string): Character prefab name"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- When player inspects something\nlocal function OnInspect(inst, prefab)\n    TheScrapbookPartitions:SetInspectedByCharacter(prefab, inst.prefab)\nend\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"get-level-for",children:["scrapbook",":GetLevelFor","(thing)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nReturns the discovery level for a prefab."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thing"})," (string|EntityScript): Prefab name or entity to check"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(number): Discovery level","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": Unknown/never seen"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": Seen but not inspected"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": Seen and inspected"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local level = TheScrapbookPartitions:GetLevelFor("koalefant_summer")\nif level == 0 then\n    print("Never encountered")\nelseif level == 1 then\n    print("Seen but not inspected")\nelseif level == 2 then\n    print("Fully discovered")\nend\n'})}),"\n",(0,i.jsx)(n.h2,{id:"teachinglearning-methods",children:"Teaching/Learning Methods"}),"\n",(0,i.jsxs)(n.h3,{id:"teach-random",children:["scrapbook",":TryToTeachScrapbookData_Random","(numofentries)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRandomly teaches a specified number of unknown scrapbook entries."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"numofentries"})," (number): Number of entries to teach"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if any entries were taught"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Give player some random scrapbook knowledge\nlocal learned = TheScrapbookPartitions:TryToTeachScrapbookData_Random(3)\nif learned then\n    print("Learned new scrapbook entries!")\nend\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"teach-special",children:["scrapbook",":TryToTeachScrapbookData_Special","(index)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nTeaches scrapbook entries from a special page collection."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"index"})," (number): Special page index to teach from"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if any entries were taught"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"teach-note",children:["scrapbook",":TryToTeachScrapbookData_Note","(entry)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nTeaches a specific scrapbook entry and opens it in the UI."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entry"})," (string): Prefab name to teach and display"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): Always returns true"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- When player finds a scrapbook note\nTheScrapbookPartitions:TryToTeachScrapbookData_Note("ancient_statue")\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"teach-scrapbook-data",children:["scrapbook",":TryToTeachScrapbookData","(is_server, inst)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nMain teaching function that determines what type of scrapbook data to teach based on the item."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"is_server"})," (boolean): Whether this is running on the server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"inst"})," (EntityScript): The scrapbook item entity"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if any entries were taught"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"storage-and-synchronization",children:"Storage and Synchronization"}),"\n",(0,i.jsxs)(n.h3,{id:"save",children:["scrapbook",":Save","(force_save)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nSaves scrapbook data to local persistent storage."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"force_save"})," (boolean): Whether to force saving all buckets (optional)"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"load",children:["scrapbook",":Load","()"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nLoads scrapbook data from local persistent storage."]}),"\n",(0,i.jsxs)(n.h3,{id:"apply-online-profile-data",children:["scrapbook",":ApplyOnlineProfileData","()"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nMerges online profile data with local scrapbook data."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean): True if synchronization was successful"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"update-storage-data",children:["scrapbook",":UpdateStorageData","(hashed, newdata)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nUpdates a single storage entry and marks it for synchronization."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hashed"})," (number): Hash of the prefab name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"newdata"})," (number): New bit-field data value"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"debug-methods",children:"Debug Methods"}),"\n",(0,i.jsxs)(n.h3,{id:"debug-delete-all",children:["scrapbook",":DebugDeleteAllData","()"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nDebug function to delete all scrapbook data."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- WARNING: This erases all scrapbook progress\nTheScrapbookPartitions:DebugDeleteAllData()\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"debug-seen-everything",children:["scrapbook",":DebugSeenEverything","()"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nDebug function to mark all prefabs as seen."]}),"\n",(0,i.jsxs)(n.h3,{id:"debug-unlock-everything",children:["scrapbook",":DebugUnlockEverything","()"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nDebug function to fully unlock all scrapbook entries."]}),"\n",(0,i.jsx)(n.h2,{id:"global-instance",children:"Global Instance"}),"\n",(0,i.jsx)(n.h3,{id:"global-instance",children:"TheScrapbookPartitions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type:"})," ",(0,i.jsx)(n.code,{children:"ScrapbookPartitions"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Global instance of the scrapbook partitions system."]}),"\n",(0,i.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"player-discovery-tracking",children:"Player Discovery Tracking"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- When player encounters a new entity\nlocal function OnEntitySeen(inst, viewer)\n    if inst.prefab and viewer == ThePlayer then\n        TheScrapbookPartitions:SetSeenInGame(inst.prefab)\n    end\nend\n\n-- When player inspects something\nlocal function OnEntityInspected(inst, viewer)\n    if inst.prefab and viewer == ThePlayer then\n        TheScrapbookPartitions:SetInspectedByCharacter(inst.prefab, viewer.prefab)\n    end\nend\n"})}),"\n",(0,i.jsx)(n.h3,{id:"scrapbook-ui-integration",children:"Scrapbook UI Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Check if entry should show "new" indicator\nlocal function ShouldShowNewIndicator(prefab)\n    return TheScrapbookPartitions:WasSeenInGame(prefab) and\n           not TheScrapbookPartitions:WasViewedInScrapbook(prefab)\nend\n\n-- When player views an entry in scrapbook\nlocal function OnScrapbookEntryViewed(prefab)\n    TheScrapbookPartitions:SetViewedInScrapbook(prefab, true)\nend\n'})}),"\n",(0,i.jsx)(n.h3,{id:"progress-calculation",children:"Progress Calculation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Calculate completion statistics\nlocal function GetScrapbookStats()\n    local total = 0\n    local seen = 0\n    local inspected = 0\n    \n    local scrapbook_prefabs = require("scrapbook_prefabs")\n    for prefab, included in pairs(scrapbook_prefabs) do\n        if included then\n            total = total + 1\n            local level = TheScrapbookPartitions:GetLevelFor(prefab)\n            if level >= 1 then\n                seen = seen + 1\n            end\n            if level >= 2 then\n                inspected = inspected + 1\n            end\n        end\n    end\n    \n    return {\n        total = total,\n        seen = seen,\n        inspected = inspected,\n        seen_percent = math.floor((seen / total) * 100),\n        inspected_percent = math.floor((inspected / total) * 100)\n    }\nend\n'})}),"\n",(0,i.jsx)(n.h3,{id:"modded-character-support",children:"Modded Character Support"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Modded characters fall back to Wilson for tracking\nlocal function GetEffectiveCharacterForScrapbook(character)\n    if table.contains(MODCHARACTERLIST, character) then\n        return "wilson"\n    end\n    return character\nend\n'})}),"\n",(0,i.jsx)(n.h2,{id:"technical-details",children:"Technical Details"}),"\n",(0,i.jsx)(n.h3,{id:"bit-field-structure",children:"Bit Field Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- 32-bit storage layout:\n-- 0x???????? = [CHARACTER_MASK:24][FLAGS:8]\n-- \n-- Example for Wilson inspecting a spider:\n-- 0x00000101 = Wilson bit (0x100) + Viewed flag (0x001)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hash-distribution",children:"Hash Distribution"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Prefabs are distributed across 16 buckets\nlocal bucket = hash("spider") & 0xF  -- Bucket 0-15\n'})}),"\n",(0,i.jsx)(n.h3,{id:"storage-keys",children:"Storage Keys"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Local storage: "scrapbook_0" through "scrapbook_15"\n-- Backend storage: "SCRAPBOOK0" through "SCRAPBOOK15"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"integration-notes",children:"Integration Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Character inspection data is merged when switching between characters"}),"\n",(0,i.jsx)(n.li,{children:"Modded characters use Wilson as a fallback for data storage"}),"\n",(0,i.jsx)(n.li,{children:"Backend synchronization occurs with configurable delays"}),"\n",(0,i.jsx)(n.li,{children:"Local storage provides offline functionality"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./scrapbook_prefabs.md",children:"Scrapbook Prefabs"}),": Registry of trackable prefabs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./class.md",children:"Class"}),": Base class system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./constants.md",children:"Constants"}),": Character list and configuration values"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var r=s(96540);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);