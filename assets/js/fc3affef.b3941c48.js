"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[78367],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(96540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},37544:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"game-scripts/core-systems/mod-support/dlc/dlcsupport-strings","title":"DLC Support Strings","description":"String handling system for DLC content with prefix/suffix management and adjective construction","source":"@site/docs/game-scripts/core-systems/mod-support/dlc/dlcsupport_strings.md","sourceDirName":"game-scripts/core-systems/mod-support/dlc","slug":"/game-scripts/core-systems/mod-support/dlc/dlcsupport-strings","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/dlcsupport-strings","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"dlcsupport-strings","title":"DLC Support Strings","description":"String handling system for DLC content with prefix/suffix management and adjective construction","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"DLC Support Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/"},"next":{"title":"DLC Support Worldgen","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/dlcsupport-worldgen"}}');var i=s(74848),r=s(28453);const a={id:"dlcsupport-strings",title:"DLC Support Strings",description:"String handling system for DLC content with prefix/suffix management and adjective construction",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="DLC Support Strings",o={},c=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Global Variables",id:"global-variables",level:2},{value:"USE_PREFIX",id:"use_prefix",level:3},{value:"Core Functions",id:"core-functions",level:2},{value:"ConstructAdjectivedName(inst, name, adjective)",id:"constructadjectivename",level:3},{value:"SetUsesPrefix(item, usePrefix)",id:"setusesprefix",level:3},{value:"MakeAllPrefixes(fn)",id:"makeallprefixes",level:3},{value:"MakeAllSuffixes(fn)",id:"makeallsuffixes",level:3},{value:"Internal Functions",id:"internal-functions",level:2},{value:"UsesPrefix(item)",id:"usesprefix-internal",level:3},{value:"TryGuaranteeCoverage(item, usePrefix)",id:"tryguaranteecoverage-internal",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Language Localization Integration",id:"language-localization-integration",level:2},{value:"Advanced Function Configuration",id:"advanced-function-configuration",level:2},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Wet Items",id:"wet-items",level:3},{value:"Damaged Items",id:"damaged-items",level:3},{value:"Special States",id:"special-states",level:3},{value:"Related Modules",id:"related-modules",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"dlc-support-strings",children:"DLC Support Strings"})}),"\n",(0,i.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Build Version"}),(0,i.jsx)(n.th,{children:"Change Date"}),(0,i.jsx)(n.th,{children:"Change Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"676042"}),(0,i.jsx)(n.td,{children:"2025-06-21"}),(0,i.jsx)(n.td,{children:"stable"}),(0,i.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"dlcsupport_strings"})," module provides specialized string handling for DLC content, focusing on prefix and suffix management for item names with adjectives. It determines whether adjectives should appear before or after item names based on language and context rules."]}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Configure string prefix behavior\nSetUsesPrefix("wetfood", true)\n\n-- Construct names with adjectives\nlocal name = ConstructAdjectivedName(inst, "meat", "wet")\n-- Result could be "wet meat" or "meat wet" depending on configuration\n\n-- Change all adjectives to prefixes\nMakeAllPrefixes()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"global-variables",children:"Global Variables"}),"\n",(0,i.jsx)(n.h3,{id:"use_prefix",children:"USE_PREFIX"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type:"})," ",(0,i.jsx)(n.code,{children:"table"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nTable mapping string values to boolean values indicating whether they should use prefixes (true) or suffixes (false) when constructing adjective names."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pre-configured Values:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"USE_PREFIX[STRINGS.SMOLDERINGITEM] = true\nUSE_PREFIX[STRINGS.WITHEREDITEM] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.FOOD] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.CLOTHING] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.TOOL] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.FUEL] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.GENERIC] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.WETGOOP] = true\nUSE_PREFIX[STRINGS.NAMES.WETGOOP] = true\nUSE_PREFIX[STRINGS.WET_PREFIX.RABBITHOLE] = true\nUSE_PREFIX[STRINGS.NAMES.RABBITHOLE] = true\n"})}),"\n",(0,i.jsx)(n.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,i.jsx)(n.h3,{id:"constructadjectivename",children:"ConstructAdjectivedName(inst, name, adjective)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConstructs a display name by combining an item name with an adjective, using prefix or suffix based on configuration rules."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"inst"})," (Entity): Entity instance (used for fallback name lookup)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (string): Base item name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"adjective"})," (string): Adjective to apply"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(string): Constructed name with adjective placed as prefix or suffix"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Logic:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Uses adjective's configuration first"}),"\n",(0,i.jsx)(n.li,{children:"Falls back to name's configuration if adjective not configured"}),"\n",(0,i.jsx)(n.li,{children:"If configuration is a function, calls it and uses result if it returns a string"}),"\n",(0,i.jsx)(n.li,{children:"Defaults to prefix format if no configuration found"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- With prefix configuration\nlocal wet_meat = ConstructAdjectivedName(inst, "meat", "wet")\n-- Returns: "wet meat"\n\n-- With suffix configuration  \nlocal meat_rotten = ConstructAdjectivedName(inst, "meat", "rotten")\n-- Returns: "meat rotten"\n\n-- With function configuration\nlocal special_name = ConstructAdjectivedName(inst, "tool", "magic")\n-- Calls function and uses result\n'})}),"\n",(0,i.jsx)(n.h3,{id:"setusesprefix",children:"SetUsesPrefix(item, usePrefix)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nConfigures whether a specific item should use prefix or suffix formatting. Also attempts to ensure coverage by looking up related strings."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"})," (string): String value to configure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"usePrefix"})," (boolean|function): true for prefix, false for suffix, or function for dynamic behavior"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Set specific items to use prefixes\nSetUsesPrefix("wetfood", true)\nSetUsesPrefix("rottenfood", false)\n\n-- Use function for dynamic behavior\nSetUsesPrefix("specialitem", function(inst, name, adjective)\n    if inst.components.magic then\n        return "magical " .. name\n    end\n    return nil -- Use default behavior\nend)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"makeallprefixes",children:"MakeAllPrefixes(fn)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nSets all configured items to use prefix formatting."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fn"})," (function): Optional function to use instead of boolean true (defaults to true)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Make all adjectives use prefix format\nMakeAllPrefixes()\n\n-- Use custom function for all items\nMakeAllPrefixes(function(inst, name, adjective)\n    return string.upper(adjective) .. " " .. name\nend)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"makeallsuffixes",children:"MakeAllSuffixes(fn)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nSets all configured items to use suffix formatting."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fn"})," (function): Optional function to use instead of boolean false (defaults to false)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Make all adjectives use suffix format\nMakeAllSuffixes()\n\n-- Use custom function for all items\nMakeAllSuffixes(function(inst, name, adjective)\n    return name .. " (" .. adjective .. ")"\nend)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"internal-functions",children:"Internal Functions"}),"\n",(0,i.jsx)(n.h3,{id:"usesprefix-internal",children:"UsesPrefix(item)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})," (internal)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if a specific item uses prefix formatting."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"})," (string): String to check"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(boolean|function|nil): Configuration value for the item"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tryguaranteecoverage-internal",children:"TryGuaranteeCoverage(item, usePrefix)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})," (internal)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nInternal function that attempts to ensure comprehensive coverage by looking up related strings in ",(0,i.jsx)(n.code,{children:"STRINGS.NAMES"})," and ",(0,i.jsx)(n.code,{children:"STRINGS.WET_PREFIX"})," tables."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"})," (string): Item to ensure coverage for"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"usePrefix"})," (boolean): Prefix configuration to apply"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Setup custom string handling\nprint("Configuring string prefixes...")\n\n-- Check initial configuration\nlocal function TestConstruction(name, adjective)\n    local result = ConstructAdjectivedName(nil, name, adjective)\n    print(string.format("\'%s\' + \'%s\' = \'%s\'", adjective, name, result))\nend\n\n-- Test with default configuration\nTestConstruction("meat", "wet")\nTestConstruction("tool", "broken")\n\n-- Configure specific items\nSetUsesPrefix("meat", true)   -- "wet meat"\nSetUsesPrefix("tool", false)  -- "tool broken"\n\nprint("\\nAfter custom configuration:")\nTestConstruction("meat", "wet")\nTestConstruction("tool", "broken")\n\n-- Use function-based configuration\nSetUsesPrefix("food", function(inst, name, adjective)\n    if adjective == "spoiled" then\n        return "spoiled " .. name  -- Always prefix for spoiled\n    elseif adjective == "fresh" then\n        return name .. " (fresh)"  -- Always suffix with parentheses for fresh\n    end\n    return nil  -- Use default behavior for other adjectives\nend)\n\n-- Test function behavior\nlocal spoiled_result = ConstructAdjectivedName(nil, "food", "spoiled")\nlocal fresh_result = ConstructAdjectivedName(nil, "food", "fresh")\nlocal wet_result = ConstructAdjectivedName(nil, "food", "wet")\n\nprint("\\nFunction-based configuration:")\nprint("Spoiled food:", spoiled_result)\nprint("Fresh food:", fresh_result)\nprint("Wet food:", wet_result)\n\n-- Mass configuration changes\nprint("\\nMaking all prefixes:")\nMakeAllPrefixes()\nTestConstruction("weapon", "damaged")\nTestConstruction("armor", "reinforced")\n\nprint("\\nMaking all suffixes:")\nMakeAllSuffixes()\nTestConstruction("weapon", "damaged")\nTestConstruction("armor", "reinforced")\n\n-- Custom mass configuration\nprint("\\nCustom mass configuration:")\nMakeAllPrefixes(function(inst, name, adjective)\n    return "[" .. adjective .. "] " .. name\nend)\nTestConstruction("item", "special")\n\n-- Restore defaults for important items\nSetUsesPrefix(STRINGS.WET_PREFIX.FOOD, true)\nSetUsesPrefix(STRINGS.SMOLDERINGITEM, true)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"language-localization-integration",children:"Language Localization Integration"}),"\n",(0,i.jsx)(n.p,{children:"The module integrates with the game's string system:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Example of how strings are configured\n-- These are typically set up in localization files\n\n-- For wet items (usually prefixes in English)\nSTRINGS.WET_PREFIX = {\n    FOOD = "Wet",\n    CLOTHING = "Damp", \n    TOOL = "Wet",\n    FUEL = "Soggy",\n    GENERIC = "Wet"\n}\n\n-- Usage in game code\nlocal wet_meat_name = ConstructAdjectivedName(\n    meat_inst, \n    STRINGS.NAMES.MEAT, \n    STRINGS.WET_PREFIX.FOOD\n)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-function-configuration",children:"Advanced Function Configuration"}),"\n",(0,i.jsx)(n.p,{children:"You can use functions for sophisticated naming logic:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Advanced function example\nSetUsesPrefix("equipment", function(inst, name, adjective)\n    -- Check entity properties\n    if inst and inst.components.armor then\n        if adjective == "broken" then\n            return name .. " (needs repair)"\n        elseif adjective == "reinforced" then\n            return "reinforced " .. name\n        end\n    end\n    \n    -- Check player preferences\n    if ThePlayer and ThePlayer.HUD and ThePlayer.HUD.prefixPreference then\n        return adjective .. " " .. name\n    end\n    \n    -- Default to suffix\n    return name .. " " .. adjective\nend)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,i.jsx)(n.h3,{id:"wet-items",children:"Wet Items"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Wet items typically use prefixes\nSetUsesPrefix(STRINGS.WET_PREFIX.FOOD, true)\n-- Result: "Wet Meat" instead of "Meat Wet"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"damaged-items",children:"Damaged Items"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Damaged items might use suffixes\nSetUsesPrefix("damaged", false)\n-- Result: "Axe Damaged" instead of "Damaged Axe"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"special-states",children:"Special States"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Special states can use custom formatting\nSetUsesPrefix("smoldering", function(inst, name, adjective)\n    return name .. " (on fire!)"\nend)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/dlcsupport",children:"DLC Support"}),": Main DLC management system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/dlcsupport-worldgen",children:"DLC Support Worldgen"}),": DLC world generation support"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./localization.md",children:"Localization"}),": String localization system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./entityscript.md",children:"Entity Script"}),": Entity string handling"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);