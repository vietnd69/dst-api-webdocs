"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[1284],{728:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-vanilla/examples/custom-recipes","title":"Custom Crafting Recipes and Tech Trees","description":"This guide demonstrates how to create custom crafting recipes and tech trees in Don\'t Starve Together. We\'ll cover basic recipes, recipe categories, tech level requirements, and creating entirely new crafting tabs.","source":"@site/docs/api-vanilla/examples/custom-recipes.md","sourceDirName":"api-vanilla/examples","slug":"/api-vanilla/examples/custom-recipes","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/custom-recipes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"custom-recipes","title":"Custom Crafting Recipes and Tech Trees","sidebar_position":4,"last_updated":"2023-07-06T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Recipe Mod","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/recipe-mod"},"next":{"title":"Custom Component","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/custom-component"}}');var s=i(4848),r=i(8453);const a={id:"custom-recipes",title:"Custom Crafting Recipes and Tech Trees",sidebar_position:4,last_updated:new Date("2023-07-06T00:00:00.000Z")},c="Custom Crafting Recipes and Tech Trees",o={},l=[{value:"Basic Recipe Creation",id:"basic-recipe-creation",level:2},{value:"Ingredients",id:"ingredients",level:2},{value:"Ingredient Types",id:"ingredient-types",level:3},{value:"Tech Levels",id:"tech-levels",level:2},{value:"Recipe Tabs",id:"recipe-tabs",level:2},{value:"Creating Custom Recipe Tabs",id:"creating-custom-recipe-tabs",level:2},{value:"Character-Specific Recipes",id:"character-specific-recipes",level:2},{value:"Custom Tech Trees",id:"custom-tech-trees",level:2},{value:"Modifying Existing Recipes",id:"modifying-existing-recipes",level:2},{value:"Complete Example: Custom Crafting System",id:"complete-example-custom-crafting-system",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"Recipe Not Showing Up",id:"recipe-not-showing-up",level:3},{value:"Ingredients Not Being Recognized",id:"ingredients-not-being-recognized",level:3},{value:"Tech Level Issues",id:"tech-level-issues",level:3},{value:"See also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"custom-crafting-recipes-and-tech-trees",children:"Custom Crafting Recipes and Tech Trees"})}),"\n",(0,s.jsx)(n.p,{children:"This guide demonstrates how to create custom crafting recipes and tech trees in Don't Starve Together. We'll cover basic recipes, recipe categories, tech level requirements, and creating entirely new crafting tabs."}),"\n",(0,s.jsx)(n.h2,{id:"basic-recipe-creation",children:"Basic Recipe Creation"}),"\n",(0,s.jsxs)(n.p,{children:["The most straightforward way to add a new recipe is through the ",(0,s.jsx)(n.code,{children:"AddRecipe"})," function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Basic recipe structure\nAddRecipe(\n    "recipe_name",       -- Internal name of the recipe\n    {ingredients},       -- Table of ingredients\n    tab,                 -- Crafting tab where this recipe appears\n    tech_level,          -- Tech level requirement\n    placer,              -- Placer prefab (for structures)\n    min_spacing,         -- Minimum spacing between placeable structures\n    nounlock,            -- If true, recipe won\'t show as "new" when unlocked\n    numtogive,           -- Number of items crafted\n    builder_tag,         -- Tag required to see/craft this recipe\n    atlas,               -- Custom atlas for the recipe icon\n    image                -- Custom image for the recipe icon\n)\n\n-- Example: Simple spear recipe\nAddRecipe(\n    "spear",\n    {\n        Ingredient("twigs", 2),\n        Ingredient("flint", 1),\n        Ingredient("grass", 3)\n    },\n    RECIPETABS.TOOLS,\n    TECH.NONE,\n    nil, nil, nil, nil, nil\n)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"ingredients",children:"Ingredients"}),"\n",(0,s.jsxs)(n.p,{children:["Ingredients are specified using the ",(0,s.jsx)(n.code,{children:"Ingredient"})," function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'Ingredient("item_prefab", count, "atlas", "image", "ingredient_type")\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"item_prefab"}),": The prefab name of the required item"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"count"}),": Number of items required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"atlas"})," and ",(0,s.jsx)(n.code,{children:"image"}),": Optional custom icon"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ingredient_type"}),': Optional type specification (e.g., "SPECIAL")']}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ingredient-types",children:"Ingredient Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Standard ingredient that is consumed when crafting\nIngredient("log", 2)\n\n-- Tag-based ingredient (any item with this tag works)\nIngredient("nightmarefuel", 2, nil, nil, "TAG")\n\n-- Special ingredient types\nIngredient("boards", 1, nil, nil, "SPECIAL")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"tech-levels",children:"Tech Levels"}),"\n",(0,s.jsxs)(n.p,{children:["Tech levels determine what crafting stations are required to craft an item. The standard tech levels are defined in ",(0,s.jsx)(n.code,{children:"TECH"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"TECH = {\n    NONE = 0,               -- No crafting station required\n    SCIENCE_ONE = 1,        -- Science Machine\n    SCIENCE_TWO = 2,        -- Alchemy Engine\n    MAGIC_TWO = 2,          -- Prestihatitator\n    MAGIC_THREE = 3,        -- Shadow Manipulator\n    ANCIENT_TWO = 2,        -- Ancient Pseudoscience Station\n    ANCIENT_THREE = 3,      -- Ancient Pseudoscience Station (higher tier)\n    ANCIENT_FOUR = 4,       -- Ancient Pseudoscience Station (highest tier)\n    CELESTIAL_ONE = 1,      -- Moon Stone\n    CELESTIAL_THREE = 3,    -- Celestial Altar\n    LOST = 10,              -- Lost technology (not normally accessible)\n    CARTOGRAPHY_TWO = 2,    -- Cartography Desk\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example of setting tech levels for recipes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Basic recipe (no tech required)\nAddRecipe("torch", {...}, RECIPETABS.LIGHT, TECH.NONE)\n\n-- Science Machine recipe\nAddRecipe("spear", {...}, RECIPETABS.TOOLS, TECH.SCIENCE_ONE)\n\n-- Alchemy Engine recipe\nAddRecipe("icestaff", {...}, RECIPETABS.TOOLS, TECH.SCIENCE_TWO)\n\n-- Magic recipe\nAddRecipe("nightsword", {...}, RECIPETABS.MAGIC, TECH.MAGIC_THREE)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"recipe-tabs",children:"Recipe Tabs"}),"\n",(0,s.jsxs)(n.p,{children:["Recipe tabs organize recipes into categories in the crafting menu. The standard tabs are defined in ",(0,s.jsx)(n.code,{children:"RECIPETABS"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'RECIPETABS = {\n    TOOLS = {str = "TOOLS", sort = 0, icon = "tab_tools.tex"},\n    LIGHT = {str = "LIGHT", sort = 1, icon = "tab_light.tex"},\n    SURVIVAL = {str = "SURVIVAL", sort = 2, icon = "tab_survival.tex"},\n    FARM = {str = "FARM", sort = 3, icon = "tab_farm.tex"},\n    SCIENCE = {str = "SCIENCE", sort = 4, icon = "tab_science.tex"},\n    TOWN = {str = "TOWN", sort = 5, icon = "tab_town.tex"},\n    REFINE = {str = "REFINE", sort = 6, icon = "tab_refine.tex"},\n    MAGIC = {str = "MAGIC", sort = 7, icon = "tab_magic.tex"},\n    DRESS = {str = "DRESS", sort = 8, icon = "tab_dress.tex"},\n    ANCIENT = {str = "ANCIENT", sort = 9, icon = "tab_ancient.tex"},\n    CELESTIAL = {str = "CELESTIAL", sort = 10, icon = "tab_celestial.tex"},\n    CARTOGRAPHY = {str = "CARTOGRAPHY", sort = 11, icon = "tab_cartography.tex"},\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"creating-custom-recipe-tabs",children:"Creating Custom Recipe Tabs"}),"\n",(0,s.jsx)(n.p,{children:"You can create your own recipe tab for organizing mod recipes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- In modmain.lua\nlocal CUSTOM_RECIPETAB = AddRecipeTab(\n    "MYCUSTOMTAB",         -- Tab ID\n    "Custom Tab",          -- Tab name\n    "images/tab_custom.tex", -- Tab icon\n    "images/tab_custom.xml", -- Tab icon atlas\n    100                     -- Sort order\n)\n\n-- Then use it for recipes\nAddRecipe("myitem", {...}, CUSTOM_RECIPETAB, TECH.NONE)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"character-specific-recipes",children:"Character-Specific Recipes"}),"\n",(0,s.jsx)(n.p,{children:"To create recipes that only specific characters can craft:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Recipe only visible to Wickerbottom\nAddRecipe(\n    "papyrus",\n    {Ingredient("cutreeds", 4)},\n    RECIPETABS.REFINE,\n    TECH.NONE,\n    nil, nil, nil, nil,\n    "bookbuilder" -- Wickerbottom\'s unique tag\n)\n\n-- Recipe only visible to Winona\nAddRecipe(\n    "sewing_tape",\n    {Ingredient("silk", 1), Ingredient("cutgrass", 3)},\n    RECIPETABS.REFINE,\n    TECH.NONE,\n    nil, nil, nil, nil,\n    "handyperson" -- Winona\'s unique tag\n)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"custom-tech-trees",children:"Custom Tech Trees"}),"\n",(0,s.jsx)(n.p,{children:"You can create your own tech trees by defining new tech levels and crafting stations:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- In modmain.lua\n-- Define new tech level\nGLOBAL.TECH.MYCUSTOM_ONE = 5 -- Choose a number not used by existing tech levels\n\n-- Create a custom prototyper (crafting station)\nlocal function MakeCustomPrototyper()\n    local inst = CreateEntity()\n    \n    -- Add required components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it placeable\n    MakeObstaclePhysics(inst, 1)\n    \n    -- Set up animations\n    inst.AnimState:SetBank("custom_prototyper")\n    inst.AnimState:SetBuild("custom_prototyper")\n    inst.AnimState:PlayAnimation("idle")\n    \n    -- Add prototyper component on the server\n    if not TheWorld.ismastersim then\n        return inst\n    end\n    \n    inst:AddComponent("prototyper")\n    inst.components.prototyper.trees = {TECH.MYCUSTOM_ONE = 1}\n    \n    return inst\nend\n\n-- Register the prefab\nAddPrefab("custom_prototyper", MakeCustomPrototyper)\n\n-- Add a recipe for the prototyper itself\nAddRecipe(\n    "custom_prototyper",\n    {\n        Ingredient("log", 4),\n        Ingredient("goldnugget", 2),\n        Ingredient("transistor", 1)\n    },\n    RECIPETABS.SCIENCE,\n    TECH.SCIENCE_ONE\n)\n\n-- Add recipes that require the custom tech\nAddRecipe(\n    "custom_item",\n    {Ingredient("log", 2), Ingredient("goldnugget", 1)},\n    RECIPETABS.TOOLS,\n    TECH.MYCUSTOM_ONE\n)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"modifying-existing-recipes",children:"Modifying Existing Recipes"}),"\n",(0,s.jsx)(n.p,{children:"You can modify existing recipes to change their ingredients, tech requirements, or crafting tabs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- In modmain.lua\n-- Get the recipe\nlocal recipe = GLOBAL.AllRecipes["spear"]\n\n-- Modify ingredients\nrecipe.ingredients = {\n    Ingredient("twigs", 1),\n    Ingredient("flint", 2),\n    Ingredient("goldnugget", 1)\n}\n\n-- Change tech level\nrecipe.level = TECH.SCIENCE_ONE\n\n-- Change crafting tab\nrecipe.tab = RECIPETABS.SURVIVAL\n'})}),"\n",(0,s.jsx)(n.h2,{id:"complete-example-custom-crafting-system",children:"Complete Example: Custom Crafting System"}),"\n",(0,s.jsx)(n.p,{children:"Here's a complete example that adds a new crafting tab, tech level, and several recipes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- modmain.lua\n\n-- Import globals into the environment\nGLOBAL.setmetatable(env, {__index = function(t, k) return GLOBAL.rawget(GLOBAL, k) end})\n\n-- Add assets\nAssets = {\n    Asset("IMAGE", "images/inventoryimages/magic_wand.tex"),\n    Asset("ATLAS", "images/inventoryimages/magic_wand.xml"),\n    Asset("IMAGE", "images/inventoryimages/magic_staff.tex"),\n    Asset("ATLAS", "images/inventoryimages/magic_staff.xml"),\n    Asset("IMAGE", "images/tab_arcane.tex"),\n    Asset("ATLAS", "images/tab_arcane.xml"),\n}\n\n-- Add prefabs\nPrefabFiles = {\n    "magic_wand",\n    "magic_staff",\n    "arcane_station",\n}\n\n-- Define new tech level\nGLOBAL.TECH.ARCANE_ONE = 6\nGLOBAL.TECH.ARCANE_TWO = 7\n\n-- Create a new recipe tab\nlocal ARCANE_TAB = AddRecipeTab(\n    "ARCANE", \n    "Arcane",\n    "images/tab_arcane.tex",\n    "images/tab_arcane.xml",\n    66\n)\n\n-- Add recipe for the crafting station\nAddRecipe(\n    "arcane_station",\n    {\n        Ingredient("boards", 2),\n        Ingredient("nightmarefuel", 3),\n        Ingredient("purplegem", 1)\n    },\n    RECIPETABS.MAGIC,\n    TECH.MAGIC_TWO,\n    "arcane_station_placer", -- Placer prefab\n    1.5, -- Min spacing\n    nil, \n    nil,\n    nil,\n    "images/inventoryimages/arcane_station.xml",\n    "arcane_station.tex"\n)\n\n-- Add recipes that use the new tech level\nAddRecipe(\n    "magic_wand",\n    {\n        Ingredient("twigs", 1),\n        Ingredient("nightmarefuel", 2),\n        Ingredient("redgem", 1)\n    },\n    ARCANE_TAB,\n    TECH.ARCANE_ONE,\n    nil, nil, nil, nil, nil,\n    "images/inventoryimages/magic_wand.xml",\n    "magic_wand.tex"\n)\n\nAddRecipe(\n    "magic_staff",\n    {\n        Ingredient("magic_wand", 1),\n        Ingredient("nightmarefuel", 3),\n        Ingredient("purplegem", 1)\n    },\n    ARCANE_TAB,\n    TECH.ARCANE_TWO,\n    nil, nil, nil, nil, nil,\n    "images/inventoryimages/magic_staff.xml",\n    "magic_staff.tex"\n)\n\n-- Add strings for the new items\nGLOBAL.STRINGS.NAMES.ARCANE_STATION = "Arcane Station"\nGLOBAL.STRINGS.RECIPE_DESC.ARCANE_STATION = "Unlock the secrets of arcane crafting"\n\nGLOBAL.STRINGS.NAMES.MAGIC_WAND = "Magic Wand"\nGLOBAL.STRINGS.RECIPE_DESC.MAGIC_WAND = "A basic tool for arcane crafting"\n\nGLOBAL.STRINGS.NAMES.MAGIC_STAFF = "Magic Staff"\nGLOBAL.STRINGS.RECIPE_DESC.MAGIC_STAFF = "A powerful arcane tool"\n\n-- Add a postinit for the arcane station\nAddPrefabPostInit("arcane_station", function(inst)\n    if not GLOBAL.TheWorld.ismastersim then\n        return\n    end\n    \n    if not inst.components.prototyper then\n        inst:AddComponent("prototyper")\n    end\n    \n    inst.components.prototyper.trees = {\n        TECH.ARCANE_ONE = 1,\n        TECH.ARCANE_TWO = 1\n    }\nend)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,s.jsx)(n.h3,{id:"recipe-not-showing-up",children:"Recipe Not Showing Up"}),"\n",(0,s.jsx)(n.p,{children:"If your recipe isn't appearing in the crafting menu:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check that you've defined the recipe with the correct tab and tech level"}),"\n",(0,s.jsx)(n.li,{children:"Verify that the player has access to the required tech level"}),"\n",(0,s.jsx)(n.li,{children:"Ensure any character-specific tags are correct"}),"\n",(0,s.jsx)(n.li,{children:"Check for errors in the console"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ingredients-not-being-recognized",children:"Ingredients Not Being Recognized"}),"\n",(0,s.jsx)(n.p,{children:"If ingredients aren't being recognized:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Make sure the ingredient prefab name is correct"}),"\n",(0,s.jsx)(n.li,{children:"Check if you're using the correct ingredient type"}),"\n",(0,s.jsx)(n.li,{children:"Verify that the ingredient exists in the game or your mod"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tech-level-issues",children:"Tech Level Issues"}),"\n",(0,s.jsx)(n.p,{children:"If tech level requirements aren't working correctly:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure your custom prototyper correctly defines its tech trees"}),"\n",(0,s.jsx)(n.li,{children:"Check that the tech level number doesn't conflict with existing tech levels"}),"\n",(0,s.jsx)(n.li,{children:"Verify that the recipe is using the correct tech level constant"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/recipe-mod",children:"Recipe Mod Example"})," - For a complete mod example focused on recipes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/core/mod-structure",children:"Mod Structure"})," - For understanding how mods are organized"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/builder",children:"Builder Component"})," - For the component that handles crafting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Prototyper Component"})," - For crafting stations"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);