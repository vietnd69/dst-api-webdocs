"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[655],{2019:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"api vanilla/core/modoverrides","title":"modoverrides.lua Configuration","description":"The modoverrides.lua file is a critical configuration file for Don\'t Starve Together servers that controls which mods are enabled and how they are configured.","source":"@site/docs/api vanilla/core/modoverrides.md","sourceDirName":"api vanilla/core","slug":"/api vanilla/core/modoverrides","permalink":"/dst-api-webdocs/api vanilla/core/modoverrides","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"modoverrides","title":"modoverrides.lua Configuration","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Mod Structure and Server Integration","permalink":"/dst-api-webdocs/api vanilla/core/mod-structure"},"next":{"title":"Prefabs","permalink":"/dst-api-webdocs/category/prefabs"}}');var i=r(4848),s=r(8453);const a={id:"modoverrides",title:"modoverrides.lua Configuration",sidebar_position:6},t="modoverrides.lua Configuration",d={},l=[{value:"File Location",id:"file-location",level:2},{value:"Basic Structure",id:"basic-structure",level:2},{value:"Complete Configuration Structure",id:"complete-configuration-structure",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Master vs. Caves Configuration",id:"master-vs-caves-configuration",level:2},{value:"Server-Side Validation",id:"server-side-validation",level:2},{value:"Dynamic Configuration",id:"dynamic-configuration",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"modoverrideslua-configuration",children:"modoverrides.lua Configuration"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"modoverrides.lua"})," file is a critical configuration file for Don't Starve Together servers that controls which mods are enabled and how they are configured."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mermaid",children:'flowchart TD\r\n    subgraph "Mod Configuration Flow"\r\n    A[Server Startup] --\x3e B[Read dedicated_server_mods_setup.lua]\r\n    B --\x3e C[Download Required Workshop Mods]\r\n    C --\x3e D[Read Master/modoverrides.lua]\r\n    C --\x3e E[Read Caves/modoverrides.lua]\r\n    D --\x3e F[Enable & Configure Mods for Master]\r\n    E --\x3e G[Enable & Configure Mods for Caves]\r\n    F --\x3e H[Initialize Master Shard]\r\n    G --\x3e I[Initialize Caves Shard]\r\n    end\r\n    \r\n    subgraph "modoverrides.lua Structure"\r\n    M1["return {"] --\x3e M2["[workshop-123456789] = {"]\r\n    M2 --\x3e M3["enabled = true/false"]\r\n    M2 --\x3e M4["configuration_options = {"]\r\n    M4 --\x3e M5["option1 = value1"]\r\n    M4 --\x3e M6["option2 = value2"]\r\n    M6 --\x3e M7["}"]\r\n    M7 --\x3e M8["}"]\r\n    M8 --\x3e M9["[workshop-987654321] = {"]\r\n    M9 --\x3e M10["..."]\r\n    M10 --\x3e M11["}"]\r\n    end\r\n    \r\n    subgraph "Validation Process"\r\n    V1[Client Connection] --\x3e V2[Check all_clients_require_mod]\r\n    V2 --\x3e |"= true"| V3[Client must have mod]\r\n    V2 --\x3e |"= false"| V4[Client can connect without mod]\r\n    V3 --\x3e V5[Verify mod version compatibility]\r\n    V4 --\x3e V5\r\n    V5 --\x3e V6[Client connects to server]\r\n    end\n'})}),"\n",(0,i.jsx)(n.h2,{id:"file-location",children:"File Location"}),"\n",(0,i.jsxs)(n.p,{children:["Each shard in a DST server cluster has its own ",(0,i.jsx)(n.code,{children:"modoverrides.lua"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"MyDediServer/\r\n\u251c\u2500\u2500 Cluster_1/\r\n\u2502   \u251c\u2500\u2500 Master/\r\n\u2502   \u2502   \u2514\u2500\u2500 modoverrides.lua  # Overworld shard mod configuration\r\n\u2502   \u2514\u2500\u2500 Caves/\r\n\u2502       \u2514\u2500\u2500 modoverrides.lua  # Caves shard mod configuration\r\n\u2514\u2500\u2500 Cluster_2/\r\n    \u2514\u2500\u2500 ...\n"})}),"\n",(0,i.jsx)(n.h2,{id:"basic-structure",children:"Basic Structure"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"modoverrides.lua"})," file returns a Lua table with mod configurations:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'return {\r\n  -- Workshop mods use "workshop-" prefix + Workshop ID\r\n  ["workshop-123456789"] = { \r\n    enabled = true \r\n  },\r\n  \r\n  -- Local mods use the folder name directly\r\n  ["mod_folder_name"] = { \r\n    enabled = true \r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"complete-configuration-structure",children:"Complete Configuration Structure"}),"\n",(0,i.jsxs)(n.p,{children:["A fully-featured ",(0,i.jsx)(n.code,{children:"modoverrides.lua"})," file contains:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'return {\r\n  ["workshop-123456789"] = {\r\n    -- Whether the mod is enabled\r\n    enabled = true,\r\n    \r\n    -- Mod configuration options (from modinfo.lua)\r\n    configuration_options = {\r\n      option1 = "value1",\r\n      option2 = 50,\r\n      option3 = false\r\n    }\r\n  },\r\n  \r\n  ["workshop-987654321"] = {\r\n    enabled = false  -- Mod is installed but disabled\r\n  },\r\n  \r\n  ["local_mod_folder"] = {\r\n    enabled = true,\r\n    configuration_options = {\r\n      difficulty = "hard",\r\n      spawn_rate = 0.5\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"configuration_options"})," table matches the options defined in the mod's ",(0,i.jsx)(n.code,{children:"modinfo.lua"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- In a mod\'s modinfo.lua\r\nconfiguration_options = {\r\n  {\r\n    name = "difficulty",  -- This is the key used in modoverrides.lua\r\n    label = "Difficulty", -- Display name shown to users\r\n    options = {\r\n      {description = "Easy", data = "easy"},\r\n      {description = "Normal", data = "normal"},\r\n      {description = "Hard", data = "hard"}\r\n    },\r\n    default = "normal"\r\n  },\r\n  {\r\n    name = "spawn_rate",\r\n    label = "Spawn Rate",\r\n    options = {\r\n      {description = "Low", data = 0.25},\r\n      {description = "Medium", data = 0.5},\r\n      {description = "High", data = 1.0}\r\n    },\r\n    default = 0.5\r\n  }\r\n}\r\n\r\n-- In modoverrides.lua\r\n["workshop-123456789"] = {\r\n  enabled = true,\r\n  configuration_options = {\r\n    difficulty = "hard",  -- Using the \'name\' field as key\r\n    spawn_rate = 0.25     -- Value must match a \'data\' field\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"master-vs-caves-configuration",children:"Master vs. Caves Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Each shard can have different mod configurations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Master/modoverrides.lua (Overworld)\r\nreturn {\r\n  ["workshop-123456789"] = {\r\n    enabled = true,\r\n    configuration_options = { difficulty = "hard" }\r\n  }\r\n}\r\n\r\n-- Caves/modoverrides.lua (Underground)\r\nreturn {\r\n  ["workshop-123456789"] = {\r\n    enabled = true,\r\n    configuration_options = { difficulty = "normal" }  -- Different setting\r\n  },\r\n  ["workshop-567891234"] = {\r\n    enabled = true  -- Mod only enabled in caves\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"server-side-validation",children:"Server-Side Validation"}),"\n",(0,i.jsx)(n.p,{children:"The server applies these rules when loading mods:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"all_clients_require_mod = true"})," in a mod's ",(0,i.jsx)(n.code,{children:"modinfo.lua"}),", clients must have the mod installed to connect"]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"client_only_mod = true"}),", the mod isn't loaded on the server but clients can still use it"]}),"\n",(0,i.jsx)(n.li,{children:"Mods with dependencies may require other mods to be enabled"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"dynamic-configuration",children:"Dynamic Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["For advanced setups, the ",(0,i.jsx)(n.code,{children:"modoverrides.lua"})," file can include logic:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Dynamic mod configuration based on cluster name\r\nlocal cluster_name = "_myClusterName_" -- Replace with actual code to get cluster name\r\n\r\nlocal config = {\r\n  ["workshop-123456789"] = { enabled = true }\r\n}\r\n\r\n-- Add PvP mods for specific clusters\r\nif cluster_name:find("PvP") then\r\n  config["workshop-PVP_MOD_ID"] = { enabled = true }\r\nend\r\n\r\n-- Adjust difficulty based on cluster name\r\nif cluster_name:find("Hard") then\r\n  config["workshop-123456789"].configuration_options = { difficulty = "hard" }\r\nelseif cluster_name:find("Easy") then\r\n  config["workshop-123456789"].configuration_options = { difficulty = "easy" }\r\nelse\r\n  config["workshop-123456789"].configuration_options = { difficulty = "normal" }\r\nend\r\n\r\nreturn config\n'})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsxs)(n.p,{children:["Common issues with ",(0,i.jsx)(n.code,{children:"modoverrides.lua"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Syntax Errors"}),": Ensure proper Lua syntax with all brackets and commas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Invalid Options"}),": Make sure option values match those defined in ",(0,i.jsx)(n.code,{children:"modinfo.lua"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mod Compatibility"}),": Some mods may conflict when enabled together"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Different Shard Configurations"}),": Ensure compatible settings between Master and Caves"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent Configurations"}),": Unless necessary, keep mod settings consistent across shards"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version Your Configurations"}),": Back up working configurations before making changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Before Deployment"}),": Verify mod combinations work before using on a production server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Document Special Settings"}),": Keep notes about non-default mod settings and their purpose"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular Updates"}),": Review and update mod configurations after game or mod updates"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>t});var o=r(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);