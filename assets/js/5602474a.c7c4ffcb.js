"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[21642],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(96540);const r={},c=s.createContext(r);function t(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(c.Provider,{value:n},e.children)}},51702:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/crafting/recipe","title":"Recipe System Core","description":"Core classes and functions for defining crafting recipes, ingredients, and recipe management in Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/game-mechanics/crafting/recipe.md","sourceDirName":"game-scripts/core-systems/game-mechanics/crafting","slug":"/game-scripts/core-systems/game-mechanics/crafting/recipe","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipe","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"recipe","title":"Recipe System Core","description":"Core classes and functions for defining crafting recipes, ingredients, and recipe management in Don\'t Starve Together","sidebar_position":1,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var r=i(74848),c=i(28453);const t={id:"recipe",title:"Recipe System Core",description:"Core classes and functions for defining crafting recipes, ingredients, and recipe management in Don't Starve Together",sidebar_position:1,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="Recipe System Core",d={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Global Variables",id:"global-variables",level:2},{value:"AllRecipes",id:"allrecipes",level:3},{value:"AllBuilderTaggedRecipes",id:"allbuildertaggedrecipes",level:3},{value:"mod_protect_Recipe",id:"mod_protect_recipe",level:3},{value:"Ingredient Class",id:"ingredient-class",level:2},{value:"Ingredient(ingredienttype, amount, atlas, deconstruct, imageoverride)",id:"ingredient-constructor",level:3},{value:"Instance Properties",id:"instance-properties",level:3},{value:"Ingredient()",id:"ingredient-get-atlas",level:3},{value:"Ingredient()",id:"ingredient-get-image",level:3},{value:"Helper Functions",id:"helper-functions",level:2},{value:"IsCharacterIngredient(ingredienttype)",id:"is-character-ingredient",level:3},{value:"IsTechIngredient(ingredienttype)",id:"is-tech-ingredient",level:3},{value:"Recipe Class",id:"recipe-class",level:2},{value:"Recipe(name, ingredients, tab, level, placer_or_more_data, ...)",id:"recipe-constructor",level:3},{value:"Recipe2(name, ingredients, tech, config)",id:"recipe2-constructor",level:3},{value:"Recipe Instance Properties",id:"recipe-instance-properties",level:3},{value:"Recipe()",id:"recipe-get-atlas",level:3},{value:"Recipe()",id:"recipe-set-mod-rpc-id",level:3},{value:"DeconstructRecipe Class",id:"deconstructrecipe-class",level:2},{value:"DeconstructRecipe(name, return_ingredients, config)",id:"deconstruct-recipe-constructor",level:3},{value:"Global Functions",id:"global-functions",level:2},{value:"GetValidRecipe(recname)",id:"get-valid-recipe",level:3},{value:"IsRecipeValid(recname)",id:"is-recipe-valid",level:3},{value:"RemoveAllRecipes()",id:"remove-all-recipes",level:3},{value:"Ingredient Types",id:"ingredient-types",level:2},{value:"Regular Ingredients",id:"regular-ingredients",level:3},{value:"Character Ingredients",id:"character-ingredients",level:3},{value:"Tech Ingredients",id:"tech-ingredients",level:3},{value:"Tech Tree Integration",id:"tech-tree-integration",level:2},{value:"Mod Integration",id:"mod-integration",level:2},{value:"Recipe Post-Initialization",id:"recipe-post-initialization",level:3},{value:"Best Practices for Mods",id:"best-practices-for-mods",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Item Recipe",id:"basic-item-recipe",level:3},{value:"Character-Specific Recipe",id:"character-specific-recipe",level:3},{value:"Structure with Placement Logic",id:"structure-with-placement-logic",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"recipe-system-core",children:"Recipe System Core"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"recipe"})," module provides the core infrastructure for Don't Starve Together's crafting system. It defines the ",(0,r.jsx)(n.code,{children:"Recipe"})," and ",(0,r.jsx)(n.code,{children:"Ingredient"})," classes that specify how items can be crafted, what components are required, and under what conditions crafting is allowed."]}),"\n",(0,r.jsx)(n.p,{children:"This module handles recipe registration, ingredient validation, tech requirements, and provides integration points for character-specific crafting restrictions and custom placement logic."}),"\n",(0,r.jsx)(n.h2,{id:"global-variables",children:"Global Variables"}),"\n",(0,r.jsx)(n.h3,{id:"allrecipes",children:"AllRecipes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"table"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Global registry of all recipes keyed by recipe name."]}),"\n",(0,r.jsx)(n.h3,{id:"allbuildertaggedrecipes",children:"AllBuilderTaggedRecipes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"table"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Registry of recipes restricted to specific characters, keyed by recipe name with builder tag or skill as value."]}),"\n",(0,r.jsx)(n.h3,{id:"mod_protect_recipe",children:"mod_protect_Recipe"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Flag to warn about deprecated direct Recipe usage in mods."]}),"\n",(0,r.jsx)(n.h2,{id:"ingredient-class",children:"Ingredient Class"}),"\n",(0,r.jsx)(n.h3,{id:"ingredient-constructor",children:"Ingredient(ingredienttype, amount, atlas, deconstruct, imageoverride)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates a new ingredient specification for recipes."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ingredienttype"})," (string): Type of ingredient (prefab name, CHARACTER_INGREDIENT, or TECH_INGREDIENT)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"amount"})," (number): Quantity required"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"atlas"})," (string, optional): Custom atlas path for ingredient image"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deconstruct"})," (boolean, optional): Whether ingredient is returned on deconstruction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"imageoverride"})," (string, optional): Custom image filename override"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Character ingredients (health/sanity) must be multiples of ",(0,r.jsx)(n.code,{children:"CHARACTER_INGREDIENT_SEG"})," (5)"]}),"\n",(0,r.jsx)(n.li,{children:"Uses string-based precision checking to avoid floating-point errors"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Regular item ingredient\nlocal twig_ingredient = Ingredient("twigs", 2)\n\n-- Character cost ingredient  \nlocal health_cost = Ingredient(CHARACTER_INGREDIENT.HEALTH, 20)\n\n-- Tech ingredient\nlocal science_req = Ingredient(TECH_INGREDIENT.SCIENCE, 1)\n\n-- Custom atlas ingredient\nlocal custom_ingredient = Ingredient("myitem", 1, "images/myatlas.xml", true, "myimage.tex")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"instance-properties",children:"Instance Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"})," (string): The ingredient type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"amount"})," (number): Required quantity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"atlas"})," (string): Atlas path for image"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"image"})," (string): Image filename"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deconstruct"})," (boolean): Returned on deconstruction"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"ingredient-get-atlas",children:["Ingredient",":GetAtlas","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRetrieves the atlas path for the ingredient's image, resolving it if not already set."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(string): Resolved atlas path"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local ingredient = Ingredient("twigs", 2)\nlocal atlas = ingredient:GetAtlas()\n-- Returns resolved path to twigs atlas\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"ingredient-get-image",children:["Ingredient",":GetImage","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nGets the image filename for the ingredient, generating default if not specified."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(string): Image filename with .tex extension"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local ingredient = Ingredient("rocks", 3)\nlocal image = ingredient:GetImage()\n-- Returns: "rocks.tex"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,r.jsx)(n.h3,{id:"is-character-ingredient",children:"IsCharacterIngredient(ingredienttype)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if an ingredient type is a character resource (health, sanity, etc.)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ingredienttype"})," (string): Ingredient type to check"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if ingredient is a character resource"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local is_char = IsCharacterIngredient(CHARACTER_INGREDIENT.HEALTH)\n-- Returns: true\n\nlocal is_item = IsCharacterIngredient("twigs")\n-- Returns: false\n'})}),"\n",(0,r.jsx)(n.h3,{id:"is-tech-ingredient",children:"IsTechIngredient(ingredienttype)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if an ingredient type is a tech resource (science points, etc.)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ingredienttype"})," (string): Ingredient type to check"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if ingredient is a tech resource"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local is_tech = IsTechIngredient(TECH_INGREDIENT.SCIENCE)\n-- Returns: true\n"})}),"\n",(0,r.jsx)(n.h2,{id:"recipe-class",children:"Recipe Class"}),"\n",(0,r.jsx)(n.h3,{id:"recipe-constructor",children:"Recipe(name, ingredients, tab, level, placer_or_more_data, ...)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"deprecated for mods"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nLegacy Recipe constructor. Mods should use ",(0,r.jsx)(n.code,{children:"AddRecipe()"})," instead."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Direct Recipe usage from mods triggers deprecation warning when ",(0,r.jsx)(n.code,{children:"mod_protect_Recipe"})," is true."]}),"\n",(0,r.jsx)(n.h3,{id:"recipe2-constructor",children:"Recipe2(name, ingredients, tech, config)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nModern Recipe constructor with cleaner parameter structure."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Recipe identifier and default product name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ingredients"})," (table): Array of Ingredient objects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tech"})," (table): Tech requirements using TECH constants"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config"})," (table, optional): Additional configuration options"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Config Options:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"product"})," (string): Override output prefab name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"numtogive"})," (number): Quantity produced (default: 1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"builder_tag"})," (string): Required character tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"builder_skill"})," (string): Required skill tree unlock"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"placer"})," (string): Placer prefab for structures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"min_spacing"})," (number): Minimum spacing for structures (default: 3.2)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"testfn"})," (function): Custom placement validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"canbuild"})," (function): Custom crafting permission check"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"atlas"})," (string): Custom image atlas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"image"})," (string): Custom image file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nounlock"})," (boolean): Don't show in crafting menu"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"manufactured"})," (boolean): Station handles item creation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"station_tag"})," (string): Required crafting station tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"limitedamount"})," (boolean): Can only be crafted once"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"actionstr"})," (string): Custom action text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sg_state"})," (string): Custom state graph state for crafting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"no_deconstruction"})," (boolean/function): Disable deconstruction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"require_special_event"})," (string): Require active special event"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("campfire",\n    {\n        Ingredient("log", 2),\n        Ingredient("cutgrass", 3)\n    },\n    TECH.NONE,\n    {\n        placer = "campfire_placer",\n        min_spacing = 2.0,\n        atlas = "images/inventoryimages.xml",\n        image = "campfire.tex"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"recipe-instance-properties",children:"Recipe Instance Properties"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Core Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Recipe identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"product"})," (string): Output prefab name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ingredients"})," (table): Regular item ingredients"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"character_ingredients"})," (table): Character resource costs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tech_ingredients"})," (table): Tech requirements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"level"})," (table): Tech tree requirements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"numtogive"})," (number): Output quantity"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Builder Restrictions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"builder_tag"})," (string): Required character tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"builder_skill"})," (string): Required skill unlock"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"no_builder_tag"})," (string): Excluded character tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"no_builder_skill"})," (string): Excluded skill"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"UI Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"atlas"})," (string): Image atlas path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"image"})," (string): Image filename"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"imagefn"})," (function): Dynamic image function"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nameoverride"})," (string): Display name override"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"description"})," (string): Description override"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"actionstr"})," (string): Custom action text"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Placement Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"placer"})," (string): Placer prefab"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"min_spacing"})," (number): Minimum structure spacing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"testfn"})," (function): Custom placement test"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"build_mode"})," (number): Placement mode (BUILDMODE constants)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"build_distance"})," (number): Maximum build distance"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Special Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"manufactured"})," (boolean): Station-crafted item"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"station_tag"})," (string): Required station tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"limitedamount"})," (boolean): One-time craftable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nounlock"})," (boolean): Hidden from menu"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is_deconstruction_recipe"})," (boolean): Deconstruction recipe flag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"require_special_event"})," (string): Event requirement"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"recipe-get-atlas",children:["Recipe",":GetAtlas","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nGets the resolved atlas path for the recipe's display image."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(string): Atlas path"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"recipe-set-mod-rpc-id",children:["Recipe",":SetModRPCID","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSets RPC ID for mod recipes using hash collision detection."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Automatically called by mod system during recipe registration."]}),"\n",(0,r.jsx)(n.h2,{id:"deconstructrecipe-class",children:"DeconstructRecipe Class"}),"\n",(0,r.jsx)(n.h3,{id:"deconstruct-recipe-constructor",children:"DeconstructRecipe(name, return_ingredients, config)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSpecialized recipe class for item deconstruction."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Recipe name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"return_ingredients"})," (table): Items returned on deconstruction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config"})," (table, optional): Additional configuration"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is_deconstruction_recipe"})," = true"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nounlock"})," = true (hidden from crafting menu)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"level"})," = TECH.NONE"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'DeconstructRecipe("axe_deconstruct",\n    {\n        Ingredient("twigs", 1),\n        Ingredient("flint", 1)\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"global-functions",children:"Global Functions"}),"\n",(0,r.jsx)(n.h3,{id:"get-valid-recipe",children:"GetValidRecipe(recname)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRetrieves a recipe if it's valid for the current game mode and conditions."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recname"})," (string): Recipe name to validate"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(Recipe|nil): Recipe object if valid, nil otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation Checks:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Game mode compatibility"}),"\n",(0,r.jsx)(n.li,{children:"Not a deconstruction recipe"}),"\n",(0,r.jsx)(n.li,{children:"Special event requirements (if any)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local campfire_recipe = GetValidRecipe("campfire")\nif campfire_recipe then\n    print("Campfire can be crafted")\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"is-recipe-valid",children:"IsRecipeValid(recname)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if a recipe is valid without returning the recipe object."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recname"})," (string): Recipe name to check"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if recipe is valid"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"remove-all-recipes",children:"RemoveAllRecipes()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nClears all recipe registries. Used for cleanup and testing."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Resets ",(0,r.jsx)(n.code,{children:"AllRecipes"}),", ",(0,r.jsx)(n.code,{children:"AllBuilderTaggedRecipes"}),", and recipe counter."]}),"\n",(0,r.jsx)(n.h2,{id:"ingredient-types",children:"Ingredient Types"}),"\n",(0,r.jsx)(n.h3,{id:"regular-ingredients",children:"Regular Ingredients"}),"\n",(0,r.jsx)(n.p,{children:"Standard items from player inventory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Ingredient("twigs", 2)\nIngredient("rocks", 3)\nIngredient("goldnugget", 1)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"character-ingredients",children:"Character Ingredients"}),"\n",(0,r.jsxs)(n.p,{children:["Resources from character stats (defined in ",(0,r.jsx)(n.code,{children:"constants.lua"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"Ingredient(CHARACTER_INGREDIENT.HEALTH, 20)\nIngredient(CHARACTER_INGREDIENT.SANITY, 15)\nIngredient(CHARACTER_INGREDIENT.MAX_HEALTH, 10)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tech-ingredients",children:"Tech Ingredients"}),"\n",(0,r.jsxs)(n.p,{children:["Technology requirements (defined in ",(0,r.jsx)(n.code,{children:"constants.lua"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"Ingredient(TECH_INGREDIENT.SCIENCE, 1)\nIngredient(TECH_INGREDIENT.MAGIC, 2)\nIngredient(TECH_INGREDIENT.ANCIENT, 1)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"tech-tree-integration",children:"Tech Tree Integration"}),"\n",(0,r.jsx)(n.p,{children:"Recipes integrate with the tech tree system through:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"level"})," property defining tech requirements"]}),"\n",(0,r.jsx)(n.li,{children:"Tech ingredients for prototype unlocking"}),"\n",(0,r.jsx)(n.li,{children:"Station tags for crafting location restrictions"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Tech Levels:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"TECH.NONE               -- No requirements\nTECH.SCIENCE_ONE        -- Science Machine\nTECH.SCIENCE_TWO        -- Alchemy Engine  \nTECH.MAGIC_TWO          -- Prestihatitator\nTECH.ANCIENT_TWO        -- Ancient Pseudoscience Station\n"})}),"\n",(0,r.jsx)(n.h2,{id:"mod-integration",children:"Mod Integration"}),"\n",(0,r.jsx)(n.h3,{id:"recipe-post-initialization",children:"Recipe Post-Initialization"}),"\n",(0,r.jsx)(n.p,{children:"Recipes support mod post-initialization hooks:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RecipePostInit"}),": Called for specific recipes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RecipePostInitAny"}),": Called for all recipes"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices-for-mods",children:"Best Practices for Mods"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- In modmain.lua - CORRECT\nAddRecipe2("myitem",\n    {Ingredient("twigs", 2)},\n    TECH.NONE,\n    {atlas = "images/mymod.xml"}\n)\n\n-- Direct Recipe usage - DEPRECATED\nRecipe2("myitem", ...) -- Triggers warning\n'})}),"\n",(0,r.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-item-recipe",children:"Basic Item Recipe"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("spear",\n    {\n        Ingredient("twigs", 2),\n        Ingredient("flint", 1),\n        Ingredient("rope", 1)\n    },\n    TECH.NONE,\n    {\n        atlas = "images/inventoryimages.xml",\n        image = "spear.tex"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"character-specific-recipe",children:"Character-Specific Recipe"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("lighter",\n    {\n        Ingredient("twigs", 2),\n        Ingredient("flint", 1)\n    },\n    TECH.NONE,\n    {\n        builder_tag = "pyromaniac", -- Willow only\n        atlas = "images/inventoryimages.xml",\n        image = "lighter.tex"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"structure-with-placement-logic",children:"Structure with Placement Logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local function ValidMermPlacement(pt)\n    local tile = TheWorld.Map:GetTileAtPoint(pt.x, pt.y, pt.z)\n    return tile == WORLD_TILES.MARSH\nend\n\nRecipe2("mermhouse_crafted",\n    {\n        Ingredient("boards", 4),\n        Ingredient("cutreeds", 3),\n        Ingredient("pondfish", 2)\n    },\n    TECH.SCIENCE_ONE,\n    {\n        builder_tag = "merm_builder",\n        placer = "mermhouse_crafted_placer",\n        min_spacing = 5.0,\n        testfn = ValidMermPlacement\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipes",children:"Recipes"}),": Complete recipe definitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipes_filter",children:"Recipe Filters"}),": Crafting menu categorization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/techtree",children:"Tech Tree"}),": Technology requirements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../components/builder.md",children:"Builder Component"}),": Recipe crafting logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./constants.md",children:"Constants"}),": Ingredient and tech type definitions"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);