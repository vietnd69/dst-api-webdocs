"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[17170],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var r=n(96540);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}},39669:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"game-scripts/core-systems/user-interface/graphics/postprocesseffects","title":"Post Process Effects","description":"Visual post-processing effects system for screen-space rendering","source":"@site/docs/game-scripts/core-systems/user-interface/graphics/postprocesseffects.md","sourceDirName":"game-scripts/core-systems/user-interface/graphics","slug":"/game-scripts/core-systems/user-interface/graphics/postprocesseffects","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/postprocesseffects","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"postprocesseffects","title":"Post Process Effects","description":"Visual post-processing effects system for screen-space rendering","sidebar_position":5,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Lighting","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/lighting"},"next":{"title":"Shade Effects","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/shadeeffects"}}');var i=n(74848),t=n(28453);const o={id:"postprocesseffects",title:"Post Process Effects",description:"Visual post-processing effects system for screen-space rendering",sidebar_position:5,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="Post Process Effects",d={},c=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"PostProcessor Methods",id:"postprocessor-methods",level:2},{value:"PostProcessor(index, src, dest)",id:"setcolourcubedata",level:3},{value:"PostProcessor(index, lerp)",id:"setcolourcubelerp",level:3},{value:"PostProcessor(tex)",id:"setoverlaytex",level:3},{value:"PostProcessor(mod)",id:"setcolourmodifier",level:3},{value:"PostProcessor(blend)",id:"setoverlayblend",level:3},{value:"Bloom Effects",id:"bloom-effects",level:2},{value:"PostProcessor(enabled)",id:"setbloomenabled",level:3},{value:"PostProcessor()",id:"isbloomenabled",level:3},{value:"Distortion Effects",id:"distortion-effects",level:2},{value:"PostProcessor(enabled)",id:"setdistortionenabled",level:3},{value:"PostProcessor()",id:"isdistortionenabled",level:3},{value:"PostProcessor(time)",id:"setdistortioneffecttime",level:3},{value:"PostProcessor(factor)",id:"setdistortionfactor",level:3},{value:"PostProcessor(inner, outer)",id:"setdistortionradii",level:3},{value:"PostProcessor(intensity)",id:"setdistortionfisheyeintensity",level:3},{value:"PostProcessor(time)",id:"setdistortionfisheyetime",level:3},{value:"Lunacy Effects",id:"lunacy-effects",level:2},{value:"PostProcessor(enabled)",id:"setlunacyenabled",level:3},{value:"PostProcessor(intensity)",id:"setlunacyintensity",level:3},{value:"PostProcessor(enabled)",id:"setzoomblurrenabled",level:3},{value:"Moon Pulse Effects",id:"moon-pulse-effects",level:2},{value:"PostProcessor(p1, p2, p3, p4)",id:"setmoonpulseparams",level:3},{value:"PostProcessor(p1, p2, p3, p4)",id:"setmoonpulsegradingparams",level:3},{value:"Shader Building Functions",id:"shader-building-functions",level:2},{value:"BuildColourCubeShader()",id:"buildcolourcubeshader",level:3},{value:"BuildBloomShader()",id:"buildbloomshader",level:3},{value:"BuildDistortShader()",id:"builddistortshader",level:3},{value:"BuildLunacyShader()",id:"buildlunacyshader",level:3},{value:"BuildZoomBlurShader()",id:"buildzoomblurshader",level:3},{value:"BuildMoonPulseShader()",id:"buildmoonpulseshader",level:3},{value:"BuildMoonPulseGradingShader()",id:"buildmoonpulsegradingshader",level:3},{value:"BuildModShaders()",id:"buildmodshaders",level:3},{value:"SortAndEnableShaders()",id:"sortandenableshaders",level:3},{value:"Constants",id:"constants",level:2},{value:"Effect Rendering Order",id:"effect-rendering-order",level:3},{value:"Dedicated Server Support",id:"dedicated-server-support",level:2},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Sanity-Based Effects",id:"sanity-based-effects",level:3},{value:"Day/Night Cycle",id:"daynight-cycle",level:3},{value:"Magical Effects",id:"magical-effects",level:3},{value:"Related Modules",id:"related-modules",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"post-process-effects",children:"Post Process Effects"})}),"\n",(0,i.jsx)(s.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Build Version"}),(0,i.jsx)(s.th,{children:"Change Date"}),(0,i.jsx)(s.th,{children:"Change Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676042"}),(0,i.jsx)(s.td,{children:"2025-06-21"}),(0,i.jsx)(s.td,{children:"stable"}),(0,i.jsx)(s.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"postprocesseffects"})," module provides a comprehensive system for managing visual post-processing effects in Don't Starve Together. It extends the PostProcessor with methods to control color grading, bloom, distortion, lunacy effects, and other screen-space visual enhancements. The system includes dedicated server support with no-op implementations for performance optimization."]}),"\n",(0,i.jsx)(s.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'-- Enable bloom effect\nPostProcessor:SetBloomEnabled(true)\n\n-- Set color cube transition\nPostProcessor:SetColourCubeData(0, "day_colourcube.tex", "night_colourcube.tex")\nPostProcessor:SetColourCubeLerp(0, 0.5)\n\n-- Configure distortion effect\nPostProcessor:SetDistortionEnabled(true)\nPostProcessor:SetDistortionFactor(0.1)\nPostProcessor:SetDistortionRadii(50, 100)\n'})}),"\n",(0,i.jsx)(s.h2,{id:"postprocessor-methods",children:"PostProcessor Methods"}),"\n",(0,i.jsxs)(s.h3,{id:"setcolourcubedata",children:["PostProcessor",":SetColourCubeData","(index, src, dest)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the source and destination texture samplers for a color cube effect at the specified index."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"index"})," (number): Color cube index (0, 1, or 2)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"src"})," (string): Source texture path for color cube"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"dest"})," (string): Destination texture path for color cube"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'-- Set day/night color cube transition\nPostProcessor:SetColourCubeData(0, "images/colour_cubes/day.tex", "images/colour_cubes/night.tex")\n\n-- Set secondary color effect\nPostProcessor:SetColourCubeData(1, "images/colour_cubes/normal.tex", "images/colour_cubes/sepia.tex")\n'})}),"\n",(0,i.jsxs)(s.h3,{id:"setcolourcubelerp",children:["PostProcessor",":SetColourCubeLerp","(index, lerp)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the interpolation value for blending between color cube textures."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"index"})," (number): Color cube index (0, 1, or 2)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"lerp"})," (number): Interpolation value between 0.0 and 1.0"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(void): No return value"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Gradually transition from day to night\nfor i = 0, 100 do\n    local lerp = i / 100\n    PostProcessor:SetColourCubeLerp(0, lerp)\n    Sleep(0.1)\nend\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setoverlaytex",children:["PostProcessor",":SetOverlayTex","(tex)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the texture used for overlay effects in lunacy processing."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"tex"})," (string): Path to overlay texture"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'PostProcessor:SetOverlayTex("images/overlays_lunacy.tex")\n'})}),"\n",(0,i.jsxs)(s.h3,{id:"setcolourmodifier",children:["PostProcessor",":SetColourModifier","(mod)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the intensity modifier for color effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"mod"})," (number): Color intensity modifier (default: 1.0)"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Increase color intensity\nPostProcessor:SetColourModifier(1.2)\n\n-- Desaturate colors\nPostProcessor:SetColourModifier(0.8)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setoverlayblend",children:["PostProcessor",":SetOverlayBlend","(blend)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the blend factor for overlay effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"blend"})," (number): Blend factor for overlay mixing"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"PostProcessor:SetOverlayBlend(0.5)\n"})}),"\n",(0,i.jsx)(s.h2,{id:"bloom-effects",children:"Bloom Effects"}),"\n",(0,i.jsxs)(s.h3,{id:"setbloomenabled",children:["PostProcessor",":SetBloomEnabled","(enabled)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nEnables or disables the bloom post-processing effect."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"enabled"})," (boolean): Whether to enable bloom effect"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Enable bloom for magical effects\nPostProcessor:SetBloomEnabled(true)\n\n-- Disable bloom for performance\nPostProcessor:SetBloomEnabled(false)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"isbloomenabled",children:["PostProcessor",":IsBloomEnabled","()"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nReturns whether the bloom effect is currently enabled."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(boolean): True if bloom is enabled, false otherwise"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'if PostProcessor:IsBloomEnabled() then\n    print("Bloom effect is active")\nend\n'})}),"\n",(0,i.jsx)(s.h2,{id:"distortion-effects",children:"Distortion Effects"}),"\n",(0,i.jsxs)(s.h3,{id:"setdistortionenabled",children:["PostProcessor",":SetDistortionEnabled","(enabled)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nEnables or disables screen distortion effects. Also controls zoom blur when combined with lunacy."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"enabled"})," (boolean): Whether to enable distortion effect"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Enable distortion for nightmare effects\nPostProcessor:SetDistortionEnabled(true)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"isdistortionenabled",children:["PostProcessor",":IsDistortionEnabled","()"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nReturns whether the distortion effect is currently enabled."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(boolean): True if distortion is enabled, false otherwise"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"if PostProcessor:IsDistortionEnabled() then\n    -- Apply additional nightmare effects\n    PostProcessor:SetDistortionFactor(0.2)\nend\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setdistortioneffecttime",children:["PostProcessor",":SetDistortionEffectTime","(time)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the time parameter for animated distortion effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"time"})," (number): Time value for distortion animation"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Animate distortion over time\nlocal time = GetTime()\nPostProcessor:SetDistortionEffectTime(time)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setdistortionfactor",children:["PostProcessor",":SetDistortionFactor","(factor)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the intensity of the distortion effect."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"factor"})," (number): Distortion intensity factor"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Mild distortion\nPostProcessor:SetDistortionFactor(0.05)\n\n-- Strong distortion for dramatic effect\nPostProcessor:SetDistortionFactor(0.2)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setdistortionradii",children:["PostProcessor",":SetDistortionRadii","(inner, outer)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the inner and outer radii for radial distortion effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"inner"})," (number): Inner radius of distortion"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"outer"})," (number): Outer radius of distortion"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Create distortion around screen center\nPostProcessor:SetDistortionRadii(100, 300)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setdistortionfisheyeintensity",children:["PostProcessor",":SetDistortionFishEyeIntensity","(intensity)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the intensity of fish-eye lens distortion effect."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"intensity"})," (number): Fish-eye effect intensity"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"PostProcessor:SetDistortionFishEyeIntensity(0.3)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setdistortionfisheyetime",children:["PostProcessor",":SetDistortionFishEyeTime","(time)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the time parameter for animated fish-eye effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"time"})," (number): Time value for fish-eye animation"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"PostProcessor:SetDistortionFishEyeTime(GetTime())\n"})}),"\n",(0,i.jsx)(s.h2,{id:"lunacy-effects",children:"Lunacy Effects"}),"\n",(0,i.jsxs)(s.h3,{id:"setlunacyenabled",children:["PostProcessor",":SetLunacyEnabled","(enabled)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nEnables or disables lunacy visual effects. When combined with distortion, also controls zoom blur."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"enabled"})," (boolean): Whether to enable lunacy effect"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Enable lunacy for sanity loss effects\nPostProcessor:SetLunacyEnabled(true)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setlunacyintensity",children:["PostProcessor",":SetLunacyIntensity","(intensity)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the intensity of lunacy visual effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"intensity"})," (number): Lunacy effect intensity"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Set lunacy intensity based on sanity level\nlocal sanity_percent = inst.components.sanity:GetPercent()\nlocal lunacy_intensity = (1 - sanity_percent) * 0.5\nPostProcessor:SetLunacyIntensity(lunacy_intensity)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setzoomblurrenabled",children:["PostProcessor",":SetZoomBlurEnabled","(enabled)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nEnables or disables zoom blur effect. Note: Zoom blur is only enabled when both distortion and lunacy are active."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"enabled"})," (boolean): Whether to enable zoom blur"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- This is automatically controlled by distortion and lunacy states\n-- Direct calls are typically not needed\nPostProcessor:SetZoomBlurEnabled(true)\n"})}),"\n",(0,i.jsx)(s.h2,{id:"moon-pulse-effects",children:"Moon Pulse Effects"}),"\n",(0,i.jsxs)(s.h3,{id:"setmoonpulseparams",children:["PostProcessor",":SetMoonPulseParams","(p1, p2, p3, p4)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets parameters for moon pulse visual effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p1"})," (number): First moon pulse parameter"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p2"})," (number): Second moon pulse parameter"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p3"})," (number): Third moon pulse parameter"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p4"})," (number): Fourth moon pulse parameter"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Configure moon pulse effect for full moon\nPostProcessor:SetMoonPulseParams(1.0, 0.5, 2.0, 0.8)\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"setmoonpulsegradingparams",children:["PostProcessor",":SetMoonPulseGradingParams","(p1, p2, p3, p4)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets color grading parameters for moon pulse effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p1"})," (number): First grading parameter"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p2"})," (number): Second grading parameter"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p3"})," (number): Third grading parameter"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"p4"})," (number): Fourth grading parameter"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Adjust color grading for moon phases\nPostProcessor:SetMoonPulseGradingParams(0.9, 1.1, 0.8, 1.0)\n"})}),"\n",(0,i.jsx)(s.h2,{id:"shader-building-functions",children:"Shader Building Functions"}),"\n",(0,i.jsx)(s.h3,{id:"buildcolourcubeshader",children:"BuildColourCubeShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nInitializes the color cube shader system with texture samplers and uniform variables."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildColourCubeShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"buildbloomshader",children:"BuildBloomShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nBuilds the bloom effect shader with horizontal and vertical blur samplers."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildBloomShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"builddistortshader",children:"BuildDistortShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nCreates the distortion effect shader with required uniform variables."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildDistortShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"buildlunacyshader",children:"BuildLunacyShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nBuilds the lunacy effect shader with overlay texture support."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildLunacyShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"buildzoomblurshader",children:"BuildZoomBlurShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nCreates the zoom blur effect shader for combined distortion and lunacy effects."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildZoomBlurShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"buildmoonpulseshader",children:"BuildMoonPulseShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nBuilds the moon pulse effect shader system."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildMoonPulseShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"buildmoonpulsegradingshader",children:"BuildMoonPulseGradingShader()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nCreates the moon pulse color grading shader."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization\nBuildMoonPulseGradingShader()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"buildmodshaders",children:"BuildModShaders()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nExecutes mod-defined shader initialization functions through ModManager."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization to allow mods to add custom shaders\nBuildModShaders()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"sortandenableshaders",children:"SortAndEnableShaders()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," ",(0,i.jsx)(s.code,{children:"stable"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nSets the rendering order and enables post-processing effects. The current order is: ZoomBlur \u2192 Bloom \u2192 Distort \u2192 ColourCube (base) \u2192 Lunacy \u2192 MoonPulse \u2192 MoonPulseGrading."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Called during initialization to establish effect order\nSortAndEnableShaders()\n"})}),"\n",(0,i.jsx)(s.h2,{id:"constants",children:"Constants"}),"\n",(0,i.jsx)(s.h3,{id:"effect-rendering-order",children:"Effect Rendering Order"}),"\n",(0,i.jsx)(s.p,{children:"The post-processing effects are rendered in this order:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ZoomBlur"})," - Applied first for background blur"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Bloom"})," - Light bloom effects"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Distort"})," - Screen distortion"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ColourCube"})," - Base color grading (always enabled)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Lunacy"})," - Sanity-related visual effects"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"MoonPulse"})," - Moon phase effects"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"MoonPulseGrading"})," - Final color grading"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"dedicated-server-support",children:"Dedicated Server Support"}),"\n",(0,i.jsx)(s.p,{children:"All PostProcessor methods have no-op implementations when running on dedicated servers to optimize performance since visual effects are not needed server-side."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- On dedicated servers, these calls do nothing\nif TheNet:IsDedicated() then\n    -- All post-processing methods are empty functions\n    PostProcessor:SetBloomEnabled(true) -- No effect on server\nend\n"})}),"\n",(0,i.jsx)(s.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,i.jsx)(s.h3,{id:"sanity-based-effects",children:"Sanity-Based Effects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Update visual effects based on player sanity\nlocal function UpdateSanityEffects(inst)\n    local sanity = inst.components.sanity\n    if sanity then\n        local sanity_percent = sanity:GetPercent()\n        \n        -- Enable lunacy effects when sanity is low\n        if sanity_percent < 0.3 then\n            PostProcessor:SetLunacyEnabled(true)\n            PostProcessor:SetLunacyIntensity((1 - sanity_percent) * 0.8)\n            \n            -- Add distortion for very low sanity\n            if sanity_percent < 0.15 then\n                PostProcessor:SetDistortionEnabled(true)\n                PostProcessor:SetDistortionFactor(0.1)\n            end\n        else\n            PostProcessor:SetLunacyEnabled(false)\n            PostProcessor:SetDistortionEnabled(false)\n        end\n    end\nend\n"})}),"\n",(0,i.jsx)(s.h3,{id:"daynight-cycle",children:"Day/Night Cycle"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'-- Smooth day/night color transitions\nlocal function UpdateDayNightColors(phase)\n    if phase == "day" then\n        PostProcessor:SetColourCubeData(0, "day.tex", "day.tex")\n        PostProcessor:SetColourCubeLerp(0, 1.0)\n    elseif phase == "dusk" then\n        PostProcessor:SetColourCubeData(0, "day.tex", "night.tex")\n        PostProcessor:SetColourCubeLerp(0, 0.5)\n    elseif phase == "night" then\n        PostProcessor:SetColourCubeData(0, "night.tex", "night.tex")\n        PostProcessor:SetColourCubeLerp(0, 1.0)\n    end\nend\n'})}),"\n",(0,i.jsx)(s.h3,{id:"magical-effects",children:"Magical Effects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Enhance magical moments with bloom\nlocal function ApplyMagicalEffects(intensity)\n    PostProcessor:SetBloomEnabled(true)\n    PostProcessor:SetColourModifier(1.0 + intensity * 0.3)\n    \n    -- Add subtle distortion for powerful magic\n    if intensity > 0.7 then\n        PostProcessor:SetDistortionEnabled(true)\n        PostProcessor:SetDistortionFactor(intensity * 0.05)\n    end\nend\n"})}),"\n",(0,i.jsx)(s.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/lighting",children:"Lighting"}),": Controls scene lighting that interacts with post-processing"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"../util/shaders.md",children:"Shaders"}),": Low-level shader management"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"./physics.md",children:"Physics"}),": Rendering system integration"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);