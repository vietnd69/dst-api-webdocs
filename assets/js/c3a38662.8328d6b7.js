"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[3431],{8118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"community/related-component","title":"Related Component","description":"The Related component allows entities to form relationships with other entities. It manages relationship types, relationship strength, and relationship effects.","source":"@site/docs/community/related-component.md","sourceDirName":"community","slug":"/community/related-component","permalink":"/dst-api-webdocs/docs/community/related-component","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"id":"related-component","title":"Related Component","sidebar_position":30,"version":619045}}');var r=t(4848),s=t(8453);const l={id:"related-component",title:"Related Component",sidebar_position:30,version:619045},o="Related Component",a={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Events",id:"events",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2},{value:"Example: Creating Entities with Relationships",id:"example-creating-entities-with-relationships",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"related-component",children:"Related Component"})}),"\n",(0,r.jsx)(n.p,{children:"The Related component allows entities to form relationships with other entities. It manages relationship types, relationship strength, and relationship effects."}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="basic_usage.lua"',children:'-- Add a related component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("related")\n\n-- Configure the related component\nlocal related = entity.components.related\nrelated:SetRelationshipType("friend")\nrelated:AddRelatedEntity(other_entity, 0.8) -- 80% relationship strength\n'})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"relationships"})}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"Table of related entities and relationship strengths"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"relationship_type"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Type of relationship (friend, enemy, neutral)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_relationships"})}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Maximum number of relationships allowed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"relationship_decay_rate"})}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Rate at which relationships decay over time"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ondissolverelationship"})}),(0,r.jsx)(n.td,{children:"Function"}),(0,r.jsx)(n.td,{children:"Callback for when a relationship dissolves"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onformrelationship"})}),(0,r.jsx)(n.td,{children:"Function"}),(0,r.jsx)(n.td,{children:"Callback for when a relationship forms"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="key_methods.lua"',children:'-- Set relationship type\nrelated:SetRelationshipType("friend")\n\n-- Add a related entity\nrelated:AddRelatedEntity(entity, 0.5) -- 50% relationship strength\n\n-- Remove a relationship\nrelated:RemoveRelatedEntity(entity)\n\n-- Check relationship strength\nlocal strength = related:GetRelationshipStrength(entity)\n\n-- Update relationship strength\nrelated:UpdateRelationship(entity, 0.1) -- Increase by 10%\n\n-- Check if entities are related\nlocal is_related = related:IsRelatedTo(entity)\n\n-- Set callbacks\nrelated:SetOnDissolveRelationship(function(inst, other)\n    -- Do something when relationship dissolves\n    print(inst.name .. " is no longer related to " .. other.name)\nend)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(n.p,{children:"The Related component responds to and triggers various events:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"newrelationship"})," - Triggered when a new relationship is formed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dissolverelationship"})," - Triggered when a relationship dissolves"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"updaterelationship"})," - Triggered when relationship strength changes"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,r.jsx)(n.p,{children:"The Related component often works with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Combat"})," - For modifying damage based on relationships"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Follower"})," - For following related entities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TeamAttacker"})," - For coordinating attacks with related entities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Herd"})," - For managing groups of related entities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Trader"})," - For special trading behavior with related entities"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"combat.md",children:"Combat Component"})," - For relationship effects on combat"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"other-components.md",children:"Follower Component"})," - For entities that follow related entities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"other-components.md",children:"TeamAttacker Component"})," - For coordinated attacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"other-components.md",children:"Herd Component"})," - For managing groups of entities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"trader.md",children:"Trader Component"})," - For trading between related entities"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-creating-entities-with-relationships",children:"Example: Creating Entities with Relationships"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="relationships_example.lua"',children:'local function MakeRelatedEntities()\n    -- Create parent entity\n    local parent = CreateEntity()\n    parent.entity:AddTransform()\n    parent.entity:AddAnimState()\n    parent:AddComponent("related")\n    parent.components.related:SetRelationshipType("family")\n    \n    -- Create child entities\n    for i = 1, 3 do\n        local child = CreateEntity()\n        child.entity:AddTransform()\n        child.entity:AddAnimState()\n        child:AddComponent("related")\n        child.components.related:SetRelationshipType("family")\n        \n        -- Establish two-way relationship\n        parent.components.related:AddRelatedEntity(child, 1.0)\n        child.components.related:AddRelatedEntity(parent, 0.8)\n        \n        -- Add behavior based on relationship\n        child:ListenForEvent("attacked", function(inst, data)\n            -- Call parent for help when attacked\n            if inst.components.related:IsRelatedTo(parent) then\n                if parent.components.combat ~= nil then\n                    parent.components.combat:SetTarget(data.attacker)\n                end\n            end\n        end)\n    end\n    \n    return parent\nend\n'})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);