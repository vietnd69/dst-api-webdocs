"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6757],{1719:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api-vanilla/recipes/crafting","title":"Crafting Recipes","description":"Last Update: 2023-08-01","source":"@site/docs/api-vanilla/recipes/crafting.md","sourceDirName":"api-vanilla/recipes","slug":"/api-vanilla/recipes/crafting","permalink":"/dst-api-webdocs/docs/api-vanilla/recipes/crafting","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"crafting","title":"Crafting Recipes","sidebar_position":2,"last_updated":"2023-08-01T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Recipes Overview","permalink":"/dst-api-webdocs/docs/api/recipes"},"next":{"title":"Cooking Recipes","permalink":"/dst-api-webdocs/docs/api-vanilla/recipes/cooking"}}');var t=n(4848),c=n(8453);const s={id:"crafting",title:"Crafting Recipes",sidebar_position:2,last_updated:new Date("2023-08-01T00:00:00.000Z")},a="Crafting Recipes",l={},d=[{value:"Recipe Definition",id:"recipe-definition",level:2},{value:"Ingredient Definition",id:"ingredient-definition",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Technology Levels",id:"technology-levels",level:2},{value:"Character-Specific Recipes",id:"character-specific-recipes",level:2},{value:"Example:",id:"example",level:3},{value:"API Functions",id:"api-functions",level:2},{value:"Adding Recipes",id:"adding-recipes",level:3},{value:"Recipe Testing",id:"recipe-testing",level:3},{value:"Deconstruction Recipes",id:"deconstruction-recipes",level:2}];function o(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:(0,t.jsx)(i.em,{children:"Last Update: 2023-08-01"})}),"\n",(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"crafting-recipes",children:"Crafting Recipes"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.em,{children:"API Version: 624447"})}),"\n",(0,t.jsx)(i.p,{children:"The crafting recipe system allows players to create items, tools, and structures by combining various ingredients."}),"\n",(0,t.jsx)(i.h2,{id:"recipe-definition",children:"Recipe Definition"}),"\n",(0,t.jsxs)(i.p,{children:["Crafting recipes are defined using the ",(0,t.jsx)(i.code,{children:"Recipe2"})," function:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:"Recipe2(\n    name,               -- String: Recipe name/identifier\n    ingredients,        -- Table: List of Ingredient objects\n    tech_level,         -- TECH enum: Technology level required\n    config              -- Table: Additional configuration\n)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"ingredient-definition",children:"Ingredient Definition"}),"\n",(0,t.jsxs)(i.p,{children:["Ingredients are defined using the ",(0,t.jsx)(i.code,{children:"Ingredient"})," class:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:"Ingredient(\n    type,               -- String: Item prefab name or CHARACTER_INGREDIENT enum\n    amount,             -- Number: Quantity required\n    atlas,              -- String (optional): Custom atlas path\n    deconstruct,        -- Boolean (optional): Whether this ingredient is returned on deconstruction\n    imageoverride       -- String (optional): Custom image name\n)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"config"})," table supports these options:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:'{\n    placer = "prefab_name",                   -- Placer prefab for buildables\n    min_spacing = 3.2,                        -- Minimum spacing between placeable objects\n    nounlock = false,                         -- Whether the recipe is unlocked by default\n    numtogive = 1,                            -- How many items the recipe produces\n    builder_tag = "tag_name",                 -- Character tag required to craft\n    builder_skill = "skill_name",             -- Character skill required to craft (from skill tree)\n    atlas = "path/to/atlas.xml",              -- Custom atlas for recipe icon\n    image = "image_name.tex",                 -- Custom image for recipe icon\n    testfn = function(pt, rot) ... end,       -- Custom placement test function\n    product = "result_prefab",                -- Prefab name of crafting result\n    build_mode = BUILDMODE.LAND,              -- Build mode (LAND, WATER, etc.)\n    build_distance = 1,                       -- Build distance\n    no_deconstruction = true,                 -- Whether the recipe can be deconstructed\n    station_tag = "tag_name",                 -- Required station tag\n    sg_state = "custom_stategraph"            -- Custom stategraph state for crafting\n}\n'})}),"\n",(0,t.jsx)(i.h2,{id:"technology-levels",children:"Technology Levels"}),"\n",(0,t.jsxs)(i.p,{children:["Recipes are locked behind technology levels defined in the ",(0,t.jsx)(i.code,{children:"TECH"})," enum:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.NONE"})," - Available without any science structure"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.SCIENCE_ONE"})," - Requires Science Machine"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.SCIENCE_TWO"})," - Requires Alchemy Engine"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.MAGIC_TWO"})," - Requires Prestihatitator"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.MAGIC_THREE"})," - Requires Shadow Manipulator"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.ANCIENT_TWO"})," - Requires Ancient Pseudoscience Station"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"TECH.ANCIENT_FOUR"})," - Requires Ancient Fuelweaver's crafting station"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"character-specific-recipes",children:"Character-Specific Recipes"}),"\n",(0,t.jsx)(i.p,{children:"Recipes can be restricted to specific characters using:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"builder_tag"}),' - Character-specific tag like "pyromaniac" for Willow']}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"builder_skill"})," - Skill from character's skill tree (preferred method as of API 624447)"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Note: As of API version 624447, all existing skill tree builder tags have been removed in favor of builder skills. If you were using builder tags for skill tree recipes in your mods, you need to update to use builder skills."}),"\n",(0,t.jsx)(i.h3,{id:"example",children:"Example:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:'-- Old method (pre-624447)\nRecipe2("wormwood_seed_rare", {...}, TECH.NONE, {builder_tag="plantkin"})\n\n-- New method (624447+)\nRecipe2("wormwood_seed_rare", {...}, TECH.NONE, {builder_skill="plantkin_rare_seeds"})\n'})}),"\n",(0,t.jsx)(i.h2,{id:"api-functions",children:"API Functions"}),"\n",(0,t.jsx)(i.h3,{id:"adding-recipes",children:"Adding Recipes"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:'-- Add a standard crafting recipe\nRecipe2("spear", {Ingredient("twigs", 2), Ingredient("flint", 1)}, TECH.NONE)\n\n-- Add a character-specific recipe with character tag\nRecipe2("lighter", {Ingredient("rope", 1), Ingredient("goldnugget", 1)}, TECH.NONE, {builder_tag="pyromaniac"})\n\n-- Add a character skill tree recipe\nRecipe2("special_axe", {Ingredient("twigs", 3), Ingredient("flint", 2)}, TECH.NONE, {builder_skill="woodie_lucy_crafting"})\n'})}),"\n",(0,t.jsx)(i.h3,{id:"recipe-testing",children:"Recipe Testing"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:"-- Check if a recipe is valid in the current game mode\nIsRecipeValidInGameMode(game_mode, recipe_name)\n\n-- Get a valid recipe object by name\nGetValidRecipe(recipe_name)\n\n-- Test if a recipe can be crafted\nIsRecipeValid(recipe_name)\n"})}),"\n",(0,t.jsx)(i.h2,{id:"deconstruction-recipes",children:"Deconstruction Recipes"}),"\n",(0,t.jsx)(i.p,{children:"Special recipes for breaking down items:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lua",children:'DeconstructRecipe(\n    "prefab_name",\n    {Ingredient("boards", 2), Ingredient("rope", 1)},\n    {config_options}\n)\n'})})]})}function p(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var r=n(6540);const t={},c=r.createContext(t);function s(e){const i=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(c.Provider,{value:i},e.children)}}}]);