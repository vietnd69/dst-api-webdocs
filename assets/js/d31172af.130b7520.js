"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[4448],{9671:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction DST Modding","href":"/dst-api-webdocs/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"link","label":"Introduction to DST API","href":"/dst-api-webdocs/docs/api/getting-started","docId":"api-vanilla/getting-started/introduction","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/getting-started"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Core Systems","items":[{"type":"link","label":"Entity System","href":"/dst-api-webdocs/docs/api-vanilla/core-systems/entity-system","docId":"api-vanilla/core-systems/entity-system","unlisted":false},{"type":"link","label":"Component System","href":"/dst-api-webdocs/docs/api-vanilla/core-systems/component-system","docId":"api-vanilla/core-systems/component-system","unlisted":false},{"type":"link","label":"Event System","href":"/dst-api-webdocs/docs/api-vanilla/core-systems/event-system","docId":"api-vanilla/core-systems/event-system","unlisted":false},{"type":"link","label":"State Graph System","href":"/dst-api-webdocs/docs/api-vanilla/core-systems/stategraph-system","docId":"api-vanilla/core-systems/stategraph-system","unlisted":false},{"type":"link","label":"Network System","href":"/dst-api-webdocs/docs/api-vanilla/core-systems/network-system","docId":"api-vanilla/core-systems/network-system","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/core-systems"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Entity Framework","items":[{"type":"link","label":"EntityScript","href":"/dst-api-webdocs/docs/api-vanilla/entity-framework/entityscript","docId":"api-vanilla/entity-framework/entityscript","unlisted":false},{"type":"link","label":"Tag System","href":"/dst-api-webdocs/docs/api-vanilla/entity-framework/tags","docId":"api-vanilla/entity-framework/tags","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/entity-framework"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Components","items":[{"type":"link","label":"Components Overview","href":"/dst-api-webdocs/docs/api/components","docId":"api-vanilla/components/components-overview","unlisted":false},{"type":"link","label":"Combat Component","href":"/dst-api-webdocs/docs/api-vanilla/components/combat","docId":"api-vanilla/components/combat","unlisted":false},{"type":"link","label":"Health Component","href":"/dst-api-webdocs/docs/api-vanilla/components/health","docId":"api-vanilla/components/health","unlisted":false},{"type":"link","label":"Inventory Component","href":"/dst-api-webdocs/docs/api-vanilla/components/inventory","docId":"api-vanilla/components/inventory","unlisted":false},{"type":"link","label":"Weapon Component","href":"/dst-api-webdocs/docs/api-vanilla/components/weapon","docId":"api-vanilla/components/weapon","unlisted":false},{"type":"link","label":"Temperature Component","href":"/dst-api-webdocs/docs/api-vanilla/components/temperature","docId":"api-vanilla/components/temperature","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/components"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Global Objects","items":[{"type":"link","label":"Global Objects Overview","href":"/dst-api-webdocs/docs/api/global-objects","docId":"api-vanilla/global-objects/global-objects-overview","unlisted":false},{"type":"link","label":"TheWorld","href":"/dst-api-webdocs/docs/api-vanilla/global-objects/theworld","docId":"api-vanilla/global-objects/theworld","unlisted":false},{"type":"link","label":"ThePlayer","href":"/dst-api-webdocs/docs/api-vanilla/global-objects/theplayer","docId":"api-vanilla/global-objects/theplayer","unlisted":false},{"type":"link","label":"TheNet","href":"/dst-api-webdocs/docs/api-vanilla/global-objects/thenet","docId":"api-vanilla/global-objects/thenet","unlisted":false},{"type":"link","label":"TheSim","href":"/dst-api-webdocs/docs/api-vanilla/global-objects/thesim","docId":"api-vanilla/global-objects/thesim","unlisted":false},{"type":"link","label":"GLOBAL","href":"/dst-api-webdocs/docs/api-vanilla/global-objects/global","docId":"api-vanilla/global-objects/global","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/global-objects"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Prefabs","items":[{"type":"link","label":"Prefabs Overview","href":"/dst-api-webdocs/docs/api/prefabs","docId":"api-vanilla/prefabs/prefabs-overview","unlisted":false},{"type":"link","label":"Character Prefabs","href":"/dst-api-webdocs/docs/api-vanilla/prefabs/characters","docId":"api-vanilla/prefabs/characters","unlisted":false},{"type":"link","label":"Creature Prefabs","href":"/dst-api-webdocs/docs/api-vanilla/prefabs/creatures","docId":"api-vanilla/prefabs/creatures","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/prefabs"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Core Concepts","items":[{"type":"link","label":"EntityScript","href":"/dst-api-webdocs/docs/api-vanilla/core/entityscript","docId":"api-vanilla/core/entityscript","unlisted":false},{"type":"link","label":"Event System","href":"/dst-api-webdocs/docs/api-vanilla/core/event-system","docId":"api-vanilla/core/event-system","unlisted":false},{"type":"link","label":"Constants","href":"/dst-api-webdocs/docs/api-vanilla/core/constants","docId":"api-vanilla/core/constants","unlisted":false},{"type":"link","label":"Server Startup Process","href":"/dst-api-webdocs/docs/api-vanilla/core/server-startup","docId":"api-vanilla/core/server-startup","unlisted":false},{"type":"link","label":"Mod Structure and Server Integration","href":"/dst-api-webdocs/docs/api-vanilla/core/mod-structure","docId":"api-vanilla/core/mod-structure","unlisted":false},{"type":"link","label":"modoverrides.lua Configuration","href":"/dst-api-webdocs/docs/api-vanilla/core/modoverrides","docId":"api-vanilla/core/modoverrides","unlisted":false},{"type":"link","label":"Component System","href":"/dst-api-webdocs/docs/api-vanilla/core/component-system","docId":"api-vanilla/core/component-system","unlisted":false},{"type":"link","label":"WorldState API","href":"/dst-api-webdocs/docs/api-vanilla/core/worldstate","docId":"api-vanilla/core/worldstate","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/core-concepts"},{"type":"html","value":"<hr/>","className":"sidebar-divider"},{"type":"category","label":"Data Types","items":[{"type":"link","label":"Data Types Overview","href":"/dst-api-webdocs/docs/api/data-types","docId":"api-vanilla/data-types/data-types-overview","unlisted":false},{"type":"link","label":"Vector","href":"/dst-api-webdocs/docs/api-vanilla/data-types/vector","docId":"api-vanilla/data-types/vector","unlisted":false},{"type":"link","label":"Colour","href":"/dst-api-webdocs/docs/api-vanilla/data-types/colour","docId":"api-vanilla/data-types/colour","unlisted":false},{"type":"link","label":"Network Variables","href":"/dst-api-webdocs/docs/api-vanilla/data-types/netvar","docId":"api-vanilla/data-types/netvar","unlisted":false},{"type":"link","label":"Lua Table","href":"/dst-api-webdocs/docs/api-vanilla/data-types/luatable","docId":"api-vanilla/data-types/luatable","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/dst-api-webdocs/docs/category/data-types"}]},"docs":{"api-vanilla/components/burnable":{"id":"api-vanilla/components/burnable","title":"Burnable Component","description":"The Burnable component allows entities to catch fire, burn, and potentially spread fire to nearby objects."},"api-vanilla/components/combat":{"id":"api-vanilla/components/combat","title":"Combat Component","description":"The Combat component handles all combat mechanics for entities that can attack or be attacked. It manages attack ranges, damage, cooldowns, targeting, and other combat-related behaviors.","sidebar":"docs"},"api-vanilla/components/components-overview":{"id":"api-vanilla/components/components-overview","title":"Components Overview","description":"Components are the fundamental building blocks for entity behavior in Don\'t Starve Together. The game uses a component-based architecture where entities (players, creatures, items, etc.) are composed of various components that define their functionality.","sidebar":"docs"},"api-vanilla/components/cookable":{"id":"api-vanilla/components/cookable","title":"Cookable Component","description":"The Cookable component allows entities to be cooked, typically on a fire or in a cooking station, transforming them into a cooked variant."},"api-vanilla/components/growable":{"id":"api-vanilla/components/growable","title":"Growable Component","description":"The Growable component allows entities to grow and change over time through different stages, such as plants maturing or trees growing."},"api-vanilla/components/health":{"id":"api-vanilla/components/health","title":"Health Component","description":"The Health component manages an entity\'s health state, including current and maximum health values, damage handling, regeneration, invincibility, and death triggers.","sidebar":"docs"},"api-vanilla/components/hunger":{"id":"api-vanilla/components/hunger","title":"Hunger Component","description":"The Hunger component manages an entity\'s hunger state, including maximum hunger, hunger rate, and starvation effects."},"api-vanilla/components/inventory":{"id":"api-vanilla/components/inventory","title":"Inventory Component","description":"The Inventory component manages item storage, equipment slots, and item manipulation for entities that can carry items (such as players and some creatures).","sidebar":"docs"},"api-vanilla/components/perishable":{"id":"api-vanilla/components/perishable","title":"Perishable Component","description":"The Perishable component allows items to spoil or deteriorate over time, particularly food items. It manages spoilage rates, preservation effects, and the resulting state changes."},"api-vanilla/components/sanity":{"id":"api-vanilla/components/sanity","title":"Sanity Component","description":"The Sanity component manages an entity\'s mental state, including sanity level, effects of insanity, and sanity modifiers."},"api-vanilla/components/temperature":{"id":"api-vanilla/components/temperature","title":"Temperature Component","description":"The Temperature component manages an entity\'s temperature state, including warming, cooling, freezing, and overheating effects. It\'s a key component for survival mechanics in Don\'t Starve Together.","sidebar":"docs"},"api-vanilla/components/weapon":{"id":"api-vanilla/components/weapon","title":"Weapon Component","description":"The Weapon component defines an item that can be used to attack entities. It manages damage values, attack ranges, and special weapon effects like projectiles and elemental damage.","sidebar":"docs"},"api-vanilla/components/workable":{"id":"api-vanilla/components/workable","title":"Workable Component","description":"The Workable component allows entities to be worked on with tools, such as chopping trees, mining rocks, or hammering structures."},"api-vanilla/core-systems/component-system":{"id":"api-vanilla/core-systems/component-system","title":"Component System","description":"Don\'t Starve Together uses a Component System to add functionality and behaviors to entities. Each component represents a specific feature that an entity can possess.","sidebar":"docs"},"api-vanilla/core-systems/entity-system":{"id":"api-vanilla/core-systems/entity-system","title":"Entity System","description":"The Entity System is the foundation of Don\'t Starve Together\'s game architecture. It defines how game objects are created, managed, and destroyed within the game world.","sidebar":"docs"},"api-vanilla/core-systems/event-system":{"id":"api-vanilla/core-systems/event-system","title":"Event System","description":"Don\'t Starve Together uses an event system to manage and react to game state changes. This system allows entities to register listeners and respond to events from other entities.","sidebar":"docs"},"api-vanilla/core-systems/network-system":{"id":"api-vanilla/core-systems/network-system","title":"Network System","description":"The Network System in Don\'t Starve Together manages multiplayer communication, ensuring game state is properly synchronized between the server and all connected clients.","sidebar":"docs"},"api-vanilla/core-systems/stategraph-system":{"id":"api-vanilla/core-systems/stategraph-system","title":"State Graph System","description":"The State Graph System in Don\'t Starve Together manages entity behaviors through finite state machines. It controls animations, actions, and transitions between different states, providing a structured way to handle complex entity behaviors.","sidebar":"docs"},"api-vanilla/core/component-system":{"id":"api-vanilla/core/component-system","title":"Component System","description":"Don\'t Starve Together uses a Component System to add functionality and behaviors to entities. Each component represents a specific feature that an entity can possess.","sidebar":"docs"},"api-vanilla/core/constants":{"id":"api-vanilla/core/constants","title":"Constants","description":"Don\'t Starve Together has many predefined constants and values used throughout the codebase. Below are the important constant groups and how to use them.","sidebar":"docs"},"api-vanilla/core/entityscript":{"id":"api-vanilla/core/entityscript","title":"EntityScript","description":"EntityScript is the base class for all entities in Don\'t Starve Together. Every object in the game such as characters, items, structures, and monsters inherits from this class.","sidebar":"docs"},"api-vanilla/core/event-system":{"id":"api-vanilla/core/event-system","title":"Event System","description":"Don\'t Starve Together uses an event system to manage and react to game state changes. This system allows entities to register listeners and respond to events from other entities.","sidebar":"docs"},"api-vanilla/core/mod-structure":{"id":"api-vanilla/core/mod-structure","title":"Mod Structure and Server Integration","description":"This document describes the structure of Don\'t Starve Together mods and how they integrate with the server environment.","sidebar":"docs"},"api-vanilla/core/modoverrides":{"id":"api-vanilla/core/modoverrides","title":"modoverrides.lua Configuration","description":"The modoverrides.lua file is a critical configuration file for Don\'t Starve Together servers that controls which mods are enabled and how they are configured.","sidebar":"docs"},"api-vanilla/core/server-startup":{"id":"api-vanilla/core/server-startup","title":"Server Startup Process","description":"This document describes the startup sequence of Don\'t Starve Together dedicated servers, with a focus on mod loading and initialization.","sidebar":"docs"},"api-vanilla/core/worldstate":{"id":"api-vanilla/core/worldstate","title":"WorldState API","description":"WorldState is the system that manages the world state in Don\'t Starve Together. It stores and tracks information such as seasons, weather, time, and other game world states.","sidebar":"docs"},"api-vanilla/data-types/colour":{"id":"api-vanilla/data-types/colour","title":"Colour","description":"Colour is a data type representing colors in the game, typically using RGBA format with values from 0 to 1.","sidebar":"docs"},"api-vanilla/data-types/data-types-overview":{"id":"api-vanilla/data-types/data-types-overview","title":"Data Types Overview","description":"Overview of data types used in the Don\'t Starve Together API, including both primitive data types and complex data structures.","sidebar":"docs"},"api-vanilla/data-types/luatable":{"id":"api-vanilla/data-types/luatable","title":"Lua Table","description":"Lua Table is a flexible data structure widely used in the Don\'t Starve Together API for storing and passing data.","sidebar":"docs"},"api-vanilla/data-types/netvar":{"id":"api-vanilla/data-types/netvar","title":"Network Variables","description":"Network Variables (net_*) are special data types used to synchronize data between server and client in the multiplayer system.","sidebar":"docs"},"api-vanilla/data-types/vector":{"id":"api-vanilla/data-types/vector","title":"Vector","description":"Vector is a data type representing 2D or 3D vectors in space, used for positions, directions, and physics calculations.","sidebar":"docs"},"api-vanilla/entity-framework/entityscript":{"id":"api-vanilla/entity-framework/entityscript","title":"EntityScript","description":"EntityScript is the base class for all entities in Don\'t Starve Together. Every object in the game such as characters, items, structures, and monsters inherits from this class.","sidebar":"docs"},"api-vanilla/entity-framework/tags":{"id":"api-vanilla/entity-framework/tags","title":"Tag System","description":"The tag system in Don\'t Starve Together is a lightweight method for categorizing and identifying entities. Tags are simple string labels attached to entities that allow for quick filtering and identification without the overhead of checking components or other properties.","sidebar":"docs"},"api-vanilla/getting-started/introduction":{"id":"api-vanilla/getting-started/introduction","title":"Introduction to DST API","description":"Don\'t Starve Together (DST) is a multiplayer survival game developed by Klei Entertainment. The game\'s modding API allows developers to create custom content, modify game mechanics, and enhance gameplay through the use of Lua scripts.","sidebar":"docs"},"api-vanilla/global-objects/global":{"id":"api-vanilla/global-objects/global","title":"GLOBAL","description":"The GLOBAL table is a special environment that contains all of the game\'s globally accessible functions, classes, and variables. In mod development, GLOBAL is used to access internal game functionality or to inject custom code into the game\'s global namespace.","sidebar":"docs"},"api-vanilla/global-objects/global-objects-overview":{"id":"api-vanilla/global-objects/global-objects-overview","title":"Global Objects Overview","description":"Overview of global objects in the Don\'t Starve Together API, including key variables, functions, and namespaces used in game modding.","sidebar":"docs"},"api-vanilla/global-objects/thenet":{"id":"api-vanilla/global-objects/thenet","title":"TheNet","description":"TheNet is the global object that manages networking functions and connections in Don\'t Starve Together.","sidebar":"docs"},"api-vanilla/global-objects/theplayer":{"id":"api-vanilla/global-objects/theplayer","title":"ThePlayer","description":"ThePlayer is the global object representing the current player character in Don\'t Starve Together.","sidebar":"docs"},"api-vanilla/global-objects/thesim":{"id":"api-vanilla/global-objects/thesim","title":"TheSim","description":"TheSim is a global object that provides access to the game\'s simulation engine, offering functionality for working with the file system, finding entities, playing sounds, and more low-level operations.","sidebar":"docs"},"api-vanilla/global-objects/theworld":{"id":"api-vanilla/global-objects/theworld","title":"TheWorld","description":"TheWorld is the main global object representing the game world in Don\'t Starve Together.","sidebar":"docs"},"api-vanilla/node-types/component":{"id":"api-vanilla/node-types/component","title":"Component","description":"Components are functional modules attached to entities to provide specific behaviors and properties."},"api-vanilla/node-types/entity":{"id":"api-vanilla/node-types/entity","title":"Entity","description":"Entity is the most basic node type in Don\'t Starve Together, representing all objects in the game from characters and items to structures."},"api-vanilla/node-types/node-types-overview":{"id":"api-vanilla/node-types/node-types-overview","title":"Node Types Overview","description":"Overview of the different node types in Don\'t Starve Together, including entities, components, and other objects that make up the game system."},"api-vanilla/node-types/prefab":{"id":"api-vanilla/node-types/prefab","title":"Prefab","description":"Prefabs are blueprints for creating entities, with predefined components and properties."},"api-vanilla/prefabs/characters":{"id":"api-vanilla/prefabs/characters","title":"Character Prefabs","description":"Character prefabs define the playable characters in Don\'t Starve Together. Each character has unique abilities, stats, and gameplay mechanics that differentiate them from one another.","sidebar":"docs"},"api-vanilla/prefabs/creatures":{"id":"api-vanilla/prefabs/creatures","title":"Creature Prefabs","description":"Creature prefabs define the non-player entities that populate the world of Don\'t Starve Together, including animals, monsters, bosses, and other living beings.","sidebar":"docs"},"api-vanilla/prefabs/items":{"id":"api-vanilla/prefabs/items","title":"Item Prefabs","description":"Item prefabs define the collectible objects that players can interact with, carry in their inventory, equip, and use in Don\'t Starve Together."},"api-vanilla/prefabs/prefabs-overview":{"id":"api-vanilla/prefabs/prefabs-overview","title":"Prefabs Overview","description":"Prefabs (short for \\"prefabricated objects\\") are the fundamental building blocks of all entities in Don\'t Starve Together. They are templates that define the behavior, appearance, and functionality of game objects.","sidebar":"docs"},"api-vanilla/prefabs/structures":{"id":"api-vanilla/prefabs/structures","title":"Structure Prefabs","description":"Structure prefabs define the buildings, crafting stations, and other placeable objects that players can construct and interact with in Don\'t Starve Together."},"api-vanilla/recipes/cooking":{"id":"api-vanilla/recipes/cooking","title":"Cooking Recipes","description":"System for defining and managing cookable foods."},"api-vanilla/recipes/crafting":{"id":"api-vanilla/recipes/crafting","title":"Crafting Recipes","description":"System for defining and managing craftable items."},"api-vanilla/recipes/recipes-overview":{"id":"api-vanilla/recipes/recipes-overview","title":"Recipes Overview","description":"Crafting and cooking recipe systems in Don\'t Starve Together."},"api-vanilla/reorganization-plan":{"id":"api-vanilla/reorganization-plan","title":"API Documentation Reorganization Plan","description":"Current Structure"},"api-vanilla/shared-properties/network":{"id":"api-vanilla/shared-properties/network","title":"Network","description":"Network is a common property that manages data synchronization between server and client in the multiplayer system."},"api-vanilla/shared-properties/shared-properties-overview":{"id":"api-vanilla/shared-properties/shared-properties-overview","title":"Shared Node Properties Overview","description":"Overview of common properties shared between different node types in the Don\'t Starve Together API."},"api-vanilla/shared-properties/tags":{"id":"api-vanilla/shared-properties/tags","title":"Tags","description":"The tag system is a common property used to categorize and identify entity characteristics in Don\'t Starve Together."},"api-vanilla/shared-properties/transform":{"id":"api-vanilla/shared-properties/transform","title":"Transform","description":"Transform is a common property that manages an entity\'s position, rotation, and scale in 3D space."},"api-vanilla/stategraphs/events":{"id":"api-vanilla/stategraphs/events","title":"Stategraph Events","description":"Event handling and transitions in the stategraph system."},"api-vanilla/stategraphs/stategraphs-overview":{"id":"api-vanilla/stategraphs/stategraphs-overview","title":"Stategraphs Overview","description":"State machine system for controlling entity behavior in Don\'t Starve Together."},"api-vanilla/stategraphs/states":{"id":"api-vanilla/stategraphs/states","title":"States API","description":"Individual state definitions and behaviors in the stategraph system."},"api-vanilla/utils/string":{"id":"api-vanilla/utils/string","title":"String Utilities","description":"String manipulation and text processing functions."},"api-vanilla/utils/table":{"id":"api-vanilla/utils/table","title":"Table Utilities","description":"Lua table manipulation and processing functions."},"api-vanilla/utils/utils-overview":{"id":"api-vanilla/utils/utils-overview","title":"Utilities Overview","description":"Helper functions and utilities for Don\'t Starve Together modding."},"api-vanilla/utils/vector":{"id":"api-vanilla/utils/vector","title":"Vector Utilities","description":"Vector manipulation and mathematics utilities."},"api-vanilla/world/map":{"id":"api-vanilla/world/map","title":"Map API","description":"Interfaces for map generation and manipulation."},"api-vanilla/world/network":{"id":"api-vanilla/world/network","title":"Network API","description":"Tools for generating and managing the world\'s underlying node network and structure."},"api-vanilla/world/seasons":{"id":"api-vanilla/world/seasons","title":"Seasons API","description":"Controls for seasonal mechanics and transitions in the game world."},"api-vanilla/world/world-overview":{"id":"api-vanilla/world/world-overview","title":"World API Overview","description":"APIs for world generation, management and manipulation in Don\'t Starve Together."},"api-vanilla/world/worldgen":{"id":"api-vanilla/world/worldgen","title":"World Generation API","description":"Tools and systems for procedurally generating game worlds in Don\'t Starve Together."},"api-vanilla/world/worldsettings":{"id":"api-vanilla/world/worldsettings","title":"World Settings API","description":"Configuration options and controls for world generation settings."},"getting-started":{"id":"getting-started","title":"Introduction DST Modding","description":"Introduction","sidebar":"docs"}}}}')}}]);