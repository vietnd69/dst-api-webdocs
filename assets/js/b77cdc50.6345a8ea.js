"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[69224],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(96540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},71336:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/core/entityscriptproxy","title":"EntityScript Proxy System","description":"Proxy wrapper system for EntityScript instances providing transparent access control and memory management","source":"@site/docs/game-scripts/core-systems/fundamentals/core/entityscriptproxy.md","sourceDirName":"game-scripts/core-systems/fundamentals/core","slug":"/game-scripts/core-systems/fundamentals/core/entityscriptproxy","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscriptproxy","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"entityscriptproxy","title":"EntityScript Proxy System","description":"Proxy wrapper system for EntityScript instances providing transparent access control and memory management","sidebar_position":4,"last_updated":"2025-01-27T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"EntityScript","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscript"},"next":{"title":"MetaClass","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/metaclass"}}');var s=t(74848),o=t(28453);const i={id:"entityscriptproxy",title:"EntityScript Proxy System",description:"Proxy wrapper system for EntityScript instances providing transparent access control and memory management",sidebar_position:4,last_updated:new Date("2025-01-27T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="EntityScript Proxy System",c={},l=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Core Functions",id:"core-functions",level:2},{value:"ProxyClass(class, ctor)",id:"proxy-class",level:3},{value:"ProxyInstance(obj)",id:"proxy-instance",level:3},{value:"EntityScriptProxy",id:"entity-script-proxy",level:3},{value:"Proxy Metamethods",id:"proxy-metamethods",level:2},{value:"__index",id:"metamethod-index",level:3},{value:"__newindex",id:"metamethod-newindex",level:3},{value:"__eq",id:"metamethod-eq",level:3},{value:"__gc",id:"metamethod-gc",level:3},{value:"Component Proxy System",id:"component-proxy-system",level:2},{value:"Component Access",id:"component-access",level:3},{value:"Automatic Reference Management",id:"automatic-reference-management",level:3},{value:"Memory Management",id:"memory-management",level:2},{value:"Reference Counting",id:"reference-counting",level:3},{value:"Garbage Collection",id:"garbage-collection",level:3},{value:"Advanced Usage Patterns",id:"advanced-usage-patterns",level:2},{value:"Safe Entity Interfaces",id:"safe-entity-interfaces",level:3},{value:"Component Wrapper System",id:"component-wrapper-system",level:3},{value:"Temporary Entity Modifications",id:"temporary-entity-modifications",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Caching Strategy",id:"caching-strategy",level:3},{value:"Access Patterns",id:"access-patterns",level:3},{value:"Memory Usage",id:"memory-usage",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Plugin System Interface",id:"plugin-system-interface",level:3},{value:"Debugging and Inspection",id:"debugging-and-inspection",level:3},{value:"Validation Wrapper",id:"validation-wrapper",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging",id:"debugging",level:3},{value:"Related Modules",id:"related-modules",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"entityscript-proxy-system",children:"EntityScript Proxy System"})}),"\n",(0,s.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Build Version"}),(0,s.jsx)(n.th,{children:"Change Date"}),(0,s.jsx)(n.th,{children:"Change Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"676042"}),(0,s.jsx)(n.td,{children:"2025-01-27"}),(0,s.jsx)(n.td,{children:"stable"}),(0,s.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The EntityScript Proxy system provides a transparent wrapper mechanism for EntityScript instances, enabling controlled access to entity data while maintaining proper memory management and reference handling. This system is particularly useful for creating safe interfaces between different parts of the codebase and handling entity lifecycle management."}),"\n",(0,s.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create a proxy for an entity\nlocal entity = CreateEntity()\nlocal proxy = EntityScriptProxy(entity)\n\n-- Access works transparently through the proxy\nproxy:AddComponent("health")\nproxy.components.health:SetMaxHealth(100)\n\n-- Proxy maintains proper references\nlocal health_component = proxy.components.health\nprint("Max health:", health_component:GetMaxHealth())\n'})}),"\n",(0,s.jsx)(n.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,s.jsx)(n.h3,{id:"proxy-class",children:"ProxyClass(class, ctor)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nCreates a proxy class for the specified base class with optional custom constructor logic."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"class"})," (Class): The base class to create a proxy for"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ctor"})," (function, optional): Custom constructor function for the proxy"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"(ProxyClass): The created proxy class"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create a custom proxy class\nlocal MyProxy = ProxyClass(MyClass, function(self)\n    print("Custom proxy created for", self._)\nend)\n\n-- Use the proxy class\nlocal obj = MyClass()\nlocal proxy = MyProxy(obj)\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Implementation Details:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Maintains reference counting for proxy instances"}),"\n",(0,s.jsx)(n.li,{children:"Overrides metamethods for transparent access"}),"\n",(0,s.jsx)(n.li,{children:"Handles garbage collection properly"}),"\n",(0,s.jsx)(n.li,{children:"Caches proxy classes to avoid recreation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"proxy-instance",children:"ProxyInstance(obj)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nCreates a proxy instance for an existing object using its metatable."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"obj"})," (object): The object to create a proxy for"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"(ProxyInstance): A proxy instance wrapping the object"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create proxy for existing object\nlocal entity = CreateEntity()\nlocal proxy = ProxyInstance(entity)\n\n-- Access original object through proxy\nproxy:AddTag("proxied")\nprint("Original object:", proxy._)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"entity-script-proxy",children:"EntityScriptProxy"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type:"})," ",(0,s.jsx)(n.code,{children:"ProxyClass"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nSpecialized proxy class for EntityScript instances that provides enhanced component and replica access."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Transparent access to all EntityScript methods and properties"}),"\n",(0,s.jsxs)(n.li,{children:["Enhanced component proxy system with automatic ",(0,s.jsx)(n.code,{children:".inst"})," reference management"]}),"\n",(0,s.jsx)(n.li,{children:"Replica proxy system with proper reference handling"}),"\n",(0,s.jsx)(n.li,{children:"Memory-efficient caching of proxy components"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create EntityScript proxy\nlocal entity = CreateEntity()\nlocal proxy = EntityScriptProxy(entity)\n\n-- Components automatically get proxy treatment\nproxy:AddComponent("health")\nlocal health_proxy = proxy.components.health\n-- health_proxy.inst points to the proxy, not the original entity\n\n-- Replica components work the same way\nlocal health_replica = proxy.replica.health\n-- Maintains proper reference chain\n'})}),"\n",(0,s.jsx)(n.h2,{id:"proxy-metamethods",children:"Proxy Metamethods"}),"\n",(0,s.jsx)(n.h3,{id:"metamethod-index",children:"__index"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nHandles property access on proxy objects, falling back to the wrapped object if property doesn't exist on proxy."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check proxy's metatable for the property"}),"\n",(0,s.jsx)(n.li,{children:"Fall back to the wrapped object's property"}),"\n",(0,s.jsx)(n.li,{children:"Return nil if property doesn't exist"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"metamethod-newindex",children:"__newindex"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nHandles property assignment on proxy objects, directing assignments to the wrapped object."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All property assignments are directed to the wrapped object"}),"\n",(0,s.jsx)(n.li,{children:"Proxy itself remains unchanged except for special proxy properties"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"metamethod-eq",children:"__eq"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nHandles equality comparison between proxy objects and their wrapped objects."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Compares the wrapped objects, not the proxy wrappers"}),"\n",(0,s.jsx)(n.li,{children:"Allows transparent equality checking between proxies and original objects"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"metamethod-gc",children:"__gc"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nHandles garbage collection and reference counting for proxy objects."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Decrements reference count when proxy is collected"}),"\n",(0,s.jsx)(n.li,{children:"Removes equality override when no more proxies exist"}),"\n",(0,s.jsx)(n.li,{children:"Ensures proper cleanup of proxy resources"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"component-proxy-system",children:"Component Proxy System"}),"\n",(0,s.jsx)(n.h3,{id:"component-access",children:"Component Access"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Component proxies are created on-demand\nlocal entity = CreateEntity()\nlocal proxy = EntityScriptProxy(entity)\n\nproxy:AddComponent("health")\n\n-- First access creates component proxy\nlocal health_component = proxy.components.health\n-- Subsequent accesses return cached proxy\nlocal same_component = proxy.components.health\n-- health_component == same_component is true\n'})}),"\n",(0,s.jsx)(n.h3,{id:"automatic-reference-management",children:"Automatic Reference Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Component proxies automatically get correct .inst reference\nlocal proxy = EntityScriptProxy(entity)\nproxy:AddComponent("inventory")\n\nlocal inventory = proxy.components.inventory\n-- inventory.inst points to the proxy, not the original entity\nassert(inventory.inst == proxy)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"memory-management",children:"Memory Management"}),"\n",(0,s.jsx)(n.h3,{id:"reference-counting",children:"Reference Counting"}),"\n",(0,s.jsx)(n.p,{children:"The proxy system maintains automatic reference counting to optimize memory usage:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Creating multiple proxies increments count\nlocal proxy1 = EntityScriptProxy(entity)\nlocal proxy2 = EntityScriptProxy(entity)\n-- Reference count is now 2\n\n-- When proxies are garbage collected, count decrements\nproxy1 = nil\ncollectgarbage()\n-- Reference count is now 1\n\n-- When count reaches 0, cleanup occurs\nproxy2 = nil\ncollectgarbage()\n-- All proxy metadata is cleaned up\n"})}),"\n",(0,s.jsx)(n.h3,{id:"garbage-collection",children:"Garbage Collection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Proxy cleanup is automatic\nlocal function CreateTempProxy(entity)\n    local proxy = EntityScriptProxy(entity)\n    proxy:AddComponent("temporary")\n    return proxy.components.temporary\n    -- proxy goes out of scope here\nend\n\nlocal temp_component = CreateTempProxy(entity)\ncollectgarbage()\n-- Proxy is automatically cleaned up\n-- Component proxy remains valid because it\'s still referenced\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-usage-patterns",children:"Advanced Usage Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"safe-entity-interfaces",children:"Safe Entity Interfaces"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create safe interface for entity access\nlocal function CreateSafeEntityInterface(entity)\n    local proxy = EntityScriptProxy(entity)\n    \n    -- Add safety checks\n    proxy.SafeAddComponent = function(self, name)\n        if not self:IsValid() then\n            print("Cannot add component to invalid entity")\n            return nil\n        end\n        return self:AddComponent(name)\n    end\n    \n    return proxy\nend\n\n-- Usage\nlocal safe_entity = CreateSafeEntityInterface(entity)\nsafe_entity:SafeAddComponent("health")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"component-wrapper-system",children:"Component Wrapper System"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create specialized component access\nlocal function CreateInventoryInterface(entity)\n    local proxy = EntityScriptProxy(entity)\n    \n    -- Ensure inventory component exists\n    if not proxy.components.inventory then\n        proxy:AddComponent("inventory")\n    end\n    \n    -- Create specialized interface\n    proxy.GetItemCount = function(self, prefab)\n        return self.components.inventory:GetItemCount(prefab)\n    end\n    \n    proxy.GiveItem = function(self, item)\n        return self.components.inventory:GiveItem(item)\n    end\n    \n    return proxy\nend\n'})}),"\n",(0,s.jsx)(n.h3,{id:"temporary-entity-modifications",children:"Temporary Entity Modifications"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Make temporary changes safely\nlocal function WithTemporaryModifications(entity, modifications, callback)\n    local proxy = EntityScriptProxy(entity)\n    local original_values = {}\n    \n    -- Apply modifications\n    for property, value in pairs(modifications) do\n        original_values[property] = proxy[property]\n        proxy[property] = value\n    end\n    \n    -- Execute callback\n    local result = callback(proxy)\n    \n    -- Restore original values\n    for property, value in pairs(original_values) do\n        proxy[property] = value\n    end\n    \n    return result\nend\n\n-- Usage\nlocal result = WithTemporaryModifications(entity, {\n    name = "Temporary Name",\n    custom_flag = true\n}, function(temp_entity)\n    return temp_entity:DoSomething()\nend)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"caching-strategy",children:"Caching Strategy"}),"\n",(0,s.jsx)(n.p,{children:"The proxy system uses intelligent caching to minimize overhead:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Proxy classes are cached and reused"}),"\n",(0,s.jsx)(n.li,{children:"Component proxies are created once and cached"}),"\n",(0,s.jsx)(n.li,{children:"Metadata is shared between proxy instances of the same class"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"access-patterns",children:"Access Patterns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Efficient: Cache proxy references\nlocal proxy = EntityScriptProxy(entity)\nlocal health = proxy.components.health\nfor i = 1, 1000 do\n    health:DoDelta(-1) -- Fast access\nend\n\n-- Less efficient: Repeated proxy creation\nfor i = 1, 1000 do\n    local proxy = EntityScriptProxy(entity) -- Creates new proxy each time\n    proxy.components.health:DoDelta(-1)\nend\n"})}),"\n",(0,s.jsx)(n.h3,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Monitor proxy memory usage\nlocal function GetProxyCount()\n    local count = 0\n    for class, proxy_class in pairs(ProxyClasses) do\n        count = count + 1\n    end\n    return count\nend\n\nprint("Active proxy classes:", GetProxyCount())\n'})}),"\n",(0,s.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"plugin-system-interface",children:"Plugin System Interface"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Create plugin-safe entity interface\nlocal function CreatePluginInterface(entity)\n    local proxy = EntityScriptProxy(entity)\n    \n    -- Restrict access to safe methods only\n    local safe_interface = {\n        GetPosition = function() return proxy:GetPosition() end,\n        GetDisplayName = function() return proxy:GetDisplayName() end,\n        HasTag = function(tag) return proxy:HasTag(tag) end,\n        IsValid = function() return proxy:IsValid() end,\n    }\n    \n    return safe_interface\nend\n"})}),"\n",(0,s.jsx)(n.h3,{id:"debugging-and-inspection",children:"Debugging and Inspection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create debug proxy with logging\nlocal function CreateDebugProxy(entity, log_access)\n    local proxy = EntityScriptProxy(entity)\n    \n    if log_access then\n        -- Override component access to log\n        local original_components = proxy.components\n        proxy.components = setmetatable({}, {\n            __index = function(t, k)\n                print("Accessing component:", k)\n                return original_components[k]\n            end\n        })\n    end\n    \n    return proxy\nend\n\n-- Usage\nlocal debug_entity = CreateDebugProxy(entity, true)\ndebug_entity.components.health -- Logs: "Accessing component: health"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"validation-wrapper",children:"Validation Wrapper"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add validation to entity operations\nlocal function CreateValidatedProxy(entity)\n    local proxy = EntityScriptProxy(entity)\n    \n    -- Override methods with validation\n    local original_AddComponent = proxy.AddComponent\n    proxy.AddComponent = function(self, name)\n        if not name or type(name) ~= "string" then\n            error("Invalid component name: " .. tostring(name))\n        end\n        return original_AddComponent(self, name)\n    end\n    \n    return proxy\nend\n'})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Proxy reference loops:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Avoid circular references\nlocal proxy = EntityScriptProxy(entity)\n-- Don\'t do this:\n-- entity.my_proxy = proxy -- Creates circular reference\n\n-- Instead, use weak references or temporary storage\nlocal proxy_registry = setmetatable({}, {__mode = "v"})\nproxy_registry[entity] = proxy\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Memory leaks:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Ensure proxies are properly cleaned up\nlocal function CleanupProxy(proxy)\n    -- Clear any custom properties\n    for k, v in pairs(proxy) do\n        if type(k) == "string" and not k:match("^_") then\n            proxy[k] = nil\n        end\n    end\nend\n'})}),"\n",(0,s.jsx)(n.h3,{id:"debugging",children:"Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Check proxy state\nlocal function DebugProxy(proxy)\n    print("Proxy type:", type(proxy))\n    print("Wrapped object:", proxy._)\n    print("Is EntityScript proxy:", proxy:is_a(EntityScriptProxy))\n    \n    -- Check component proxies\n    if proxy.components then\n        for name, component in pairs(proxy.components._) do\n            print("Component proxy:", name, component.inst == proxy)\n        end\n    end\nend\n'})}),"\n",(0,s.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscript",children:"EntityScript"}),": Core entity functionality that proxies wrap"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityreplica",children:"Entity Replica System"}),": Network replication system that works with proxies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/class",children:"Class"}),": Base class system used for proxy creation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/",children:"Components Overview"}),": Component system that benefits from proxy interfaces"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);