"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[34412],{8568:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"game-scripts/core-systems/character-systems/customization/skin-affinity-info","title":"Skin Affinity Info","description":"Character-specific skin affinity mapping data for Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/character-systems/customization/skin_affinity_info.md","sourceDirName":"game-scripts/core-systems/character-systems/customization","slug":"/game-scripts/core-systems/character-systems/customization/skin-affinity-info","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-affinity-info","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"skin-affinity-info","title":"Skin Affinity Info","description":"Character-specific skin affinity mapping data for Don\'t Starve Together","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Clothing","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/clothing"},"next":{"title":"Skin Assets","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-assets"}}');var r=s(74848),t=s(28453);const a={id:"skin-affinity-info",title:"Skin Affinity Info",description:"Character-specific skin affinity mapping data for Don't Starve Together",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},c="Skin Affinity Info",d={},l=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Character Data Format",id:"character-data-format",level:3},{value:"Supported Characters",id:"supported-characters",level:2},{value:"Skin Categories",id:"skin-categories",level:2},{value:"Body Parts",id:"body-parts",level:3},{value:"Full Character Skins",id:"full-character-skins",level:3},{value:"Common Themes",id:"common-themes",level:3},{value:"Functions",id:"functions",level:2},{value:"Character Skin Lookup",id:"character-skin-lookup",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Auto-Generation",id:"auto-generation",level:2},{value:"Related Modules",id:"related-modules",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"skin-affinity-info",children:"Skin Affinity Info"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"skin_affinity_info.lua"})," file contains character-specific skin affinity mapping data that defines which character skins are associated with each playable character in Don't Starve Together. This file is automatically generated by the ",(0,r.jsx)(n.code,{children:"export_accountitems.lua"})," script and serves as a central registry for character skin relationships."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Access skin affinity data\nlocal skin_affinity_info = require("skin_affinity_info")\n\n-- Get all skins for Wilson\nlocal wilson_skins = skin_affinity_info.wilson\n\n-- Check if a specific skin exists for a character\nlocal function has_character_skin(character, skin_name)\n    local character_skins = skin_affinity_info[character]\n    if character_skins then\n        for _, skin in ipairs(character_skins) do\n            if skin == skin_name then\n                return true\n            end\n        end\n    end\n    return false\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,r.jsx)(n.p,{children:"The file returns a single table where each key is a character name and each value is an array of skin identifiers associated with that character."}),"\n",(0,r.jsx)(n.h3,{id:"character-data-format",children:"Character Data Format"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'{\n    [character_name] = {\n        "skin_identifier_1",\n        "skin_identifier_2",\n        "skin_identifier_3",\n        -- ... more skin identifiers\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"supported-characters",children:"Supported Characters"}),"\n",(0,r.jsx)(n.p,{children:"The following characters have skin affinity data defined:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Character"}),(0,r.jsx)(n.th,{children:"Number of Skins"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"walter"})}),(0,r.jsx)(n.td,{children:"47+"}),(0,r.jsx)(n.td,{children:"Walter's scout-themed and adventure skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wanda"})}),(0,r.jsx)(n.td,{children:"43+"}),(0,r.jsx)(n.td,{children:"Wanda's time-manipulation themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"warly"})}),(0,r.jsx)(n.td,{children:"56+"}),(0,r.jsx)(n.td,{children:"Warly's chef and culinary-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wathgrithr"})}),(0,r.jsx)(n.td,{children:"75+"}),(0,r.jsx)(n.td,{children:"Wigfrid's warrior and valkyrie-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"waxwell"})}),(0,r.jsx)(n.td,{children:"69+"}),(0,r.jsx)(n.td,{children:"Maxwell's gentleman and shadow-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"webber"})}),(0,r.jsx)(n.td,{children:"65+"}),(0,r.jsx)(n.td,{children:"Webber's spider and child-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wendy"})}),(0,r.jsx)(n.td,{children:"62+"}),(0,r.jsx)(n.td,{children:"Wendy's gothic and mourning-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wes"})}),(0,r.jsx)(n.td,{children:"63+"}),(0,r.jsx)(n.td,{children:"Wes's mime and performer-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wickerbottom"})}),(0,r.jsx)(n.td,{children:"62+"}),(0,r.jsx)(n.td,{children:"Wickerbottom's librarian and scholarly skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"willow"})}),(0,r.jsx)(n.td,{children:"62+"}),(0,r.jsx)(n.td,{children:"Willow's fire and pyromaniac-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wilson"})}),(0,r.jsx)(n.td,{children:"61+"}),(0,r.jsx)(n.td,{children:"Wilson's scientist and gentleman skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"winona"})}),(0,r.jsx)(n.td,{children:"64+"}),(0,r.jsx)(n.td,{children:"Winona's engineer and factory worker skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wolfgang"})}),(0,r.jsx)(n.td,{children:"61+"}),(0,r.jsx)(n.td,{children:"Wolfgang's strongman and circus skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"woodie"})}),(0,r.jsx)(n.td,{children:"64+"}),(0,r.jsx)(n.td,{children:"Woodie's lumberjack and nature-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wormwood"})}),(0,r.jsx)(n.td,{children:"47+"}),(0,r.jsx)(n.td,{children:"Wormwood's plant and nature-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wortox"})}),(0,r.jsx)(n.td,{children:"56+"}),(0,r.jsx)(n.td,{children:"Wortox's imp and demonic-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wurt"})}),(0,r.jsx)(n.td,{children:"50+"}),(0,r.jsx)(n.td,{children:"Wurt's merm and aquatic-themed skins"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"wx78"})}),(0,r.jsx)(n.td,{children:"62+"}),(0,r.jsx)(n.td,{children:"WX-78's robot and mechanical-themed skins"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"skin-categories",children:"Skin Categories"}),"\n",(0,r.jsx)(n.p,{children:"Character skins are organized into several categories based on their naming conventions:"}),"\n",(0,r.jsx)(n.h3,{id:"body-parts",children:"Body Parts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"body_[character]_[theme]"})," - Full body costume skins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"hand_[character]_[theme]"})," - Hand/glove accessories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"legs_[character]_[theme]"})," - Leg/pants accessories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"feet_[character]_[theme]"})," - Feet/shoe accessories"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"full-character-skins",children:"Full Character Skins"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[character]_[theme]"})," - Complete character appearance changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[character]_[theme]_d"})," - Distinguishable variants"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[character]_[theme]_p"})," - Premium/special variants"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"common-themes",children:"Common Themes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ancient"})," - Ancient civilization themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"formal"})," - Formal wear and elegant attire"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ice"})," - Ice/winter themed skins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lunar"})," - Moon/celestial themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nature"})," - Natural/plant themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rose"})," - Rose/romantic themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadow"})," - Shadow/dark themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"survivor"})," - Survival gear themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"victorian"})," - Victorian era styled"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"yule"})," - Holiday/Christmas themed"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"character-skin-lookup",children:"Character Skin Lookup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Check if character has skins defined\nlocal function character_has_skins(character_name)\n    return skin_affinity_info[character_name] ~= nil\nend\n\n-- Get skin count for character\nlocal function get_character_skin_count(character_name)\n    local skins = skin_affinity_info[character_name]\n    return skins and #skins or 0\nend\n\n-- Find characters with specific skin theme\nlocal function find_characters_with_theme(theme)\n    local characters = {}\n    for character, skins in pairs(skin_affinity_info) do\n        for _, skin in ipairs(skins) do\n            if string.find(skin, theme) then\n                table.insert(characters, character)\n                break\n            end\n        end\n    end\n    return characters\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,r.jsx)(n.p,{children:"This data is commonly used by:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Skin System"}),": Character customization and appearance management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inventory Management"}),": Tracking owned skins per character"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"UI Systems"}),": Displaying available skins in character selection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Save/Load Systems"}),": Persisting character appearance data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Account Systems"}),": Managing purchased and unlocked skins"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"auto-generation",children:"Auto-Generation"}),"\n",(0,r.jsx)(n.p,{children:"This file is automatically generated and should not be manually edited. The generation process:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Source"}),": ",(0,r.jsx)(n.code,{children:"export_accountitems.lua"})," script processes account item data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update Trigger"}),": Game content updates and new skin releases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Format"}),": Maintains consistent Lua table structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Ensures all character-skin relationships are valid"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-gifts",children:(0,r.jsx)(n.code,{children:"skin_gifts"})}),": Gift system integration for skin items"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-assets",children:(0,r.jsx)(n.code,{children:"skin_assets"})}),": Asset definitions for character skins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./prefabskins.md",children:(0,r.jsx)(n.code,{children:"prefabskins"})}),": Skin application and management system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./characters-and-mobs/",children:(0,r.jsx)(n.code,{children:"characters"})}),": Character definitions and behavior"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(96540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);