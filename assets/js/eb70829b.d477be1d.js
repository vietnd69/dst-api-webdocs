"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[5948],{1779:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api-vanilla/examples/simple-item","title":"Simple Item Mod","description":"This tutorial walks through creating a basic custom item for Don\'t Starve Together: a \\"Frost Axe\\" that works like a regular axe but has ice-themed effects and properties.","source":"@site/docs/api-vanilla/examples/simple-item.md","sourceDirName":"api-vanilla/examples","slug":"/api-vanilla/examples/simple-item","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/simple-item","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"simple-item","title":"Simple Item Mod","sidebar_position":2,"last_updated":"2023-07-06T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Examples and Tutorials","permalink":"/dst-api-webdocs/docs/api/examples"},"next":{"title":"Complex Item with Multiple Components","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/complex-item"}}');var o=t(4848),a=t(8453);const s={id:"simple-item",title:"Simple Item Mod",sidebar_position:2,last_updated:new Date("2023-07-06T00:00:00.000Z")},r="Creating a Simple Custom Item",l={},d=[{value:"Project Overview",id:"project-overview",level:2},{value:"Step 1: Set Up the Mod Structure",id:"step-1-set-up-the-mod-structure",level:2},{value:"Step 2: Create the modinfo.lua File",id:"step-2-create-the-modinfolua-file",level:2},{value:"Step 3: Create the modmain.lua File",id:"step-3-create-the-modmainlua-file",level:2},{value:"Step 4: Create the Prefab File",id:"step-4-create-the-prefab-file",level:2},{value:"Step 5: Create the Inventory Image",id:"step-5-create-the-inventory-image",level:2},{value:"Step 6: Testing Your Mod",id:"step-6-testing-your-mod",level:2},{value:"Customization Options",id:"customization-options",level:2},{value:"Change the Recipe",id:"change-the-recipe",level:3},{value:"Add a Custom Animation",id:"add-a-custom-animation",level:3},{value:"Add More Freezing Effects",id:"add-more-freezing-effects",level:3},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"Problem: Mod doesn&#39;t appear in the mod list",id:"problem-mod-doesnt-appear-in-the-mod-list",level:3},{value:"Problem: Inventory image doesn&#39;t show up",id:"problem-inventory-image-doesnt-show-up",level:3},{value:"Problem: Freezing effect doesn&#39;t work",id:"problem-freezing-effect-doesnt-work",level:3},{value:"Problem: Game crashes when using the axe",id:"problem-game-crashes-when-using-the-axe",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"creating-a-simple-custom-item",children:"Creating a Simple Custom Item"})}),"\n",(0,o.jsx)(n.p,{children:'This tutorial walks through creating a basic custom item for Don\'t Starve Together: a "Frost Axe" that works like a regular axe but has ice-themed effects and properties.'}),"\n",(0,o.jsx)(n.h2,{id:"project-overview",children:"Project Overview"}),"\n",(0,o.jsx)(n.p,{children:"We'll create an axe with these features:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Increased durability compared to a regular axe"}),"\n",(0,o.jsx)(n.li,{children:"Freezing effect on enemies when used as a weapon"}),"\n",(0,o.jsx)(n.li,{children:"Custom appearance with ice/frost theme"}),"\n",(0,o.jsx)(n.li,{children:"Special effect when chopping trees"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"step-1-set-up-the-mod-structure",children:"Step 1: Set Up the Mod Structure"}),"\n",(0,o.jsx)(n.p,{children:"Create these folders and files:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"frost_axe_mod/\n\u251c\u2500\u2500 modinfo.lua\n\u251c\u2500\u2500 modmain.lua\n\u251c\u2500\u2500 scripts/\n\u2502   \u2514\u2500\u2500 prefabs/\n\u2502       \u2514\u2500\u2500 frost_axe.lua\n\u2514\u2500\u2500 images/\n    \u2514\u2500\u2500 inventoryimages/\n        \u251c\u2500\u2500 frost_axe.png\n        \u2514\u2500\u2500 frost_axe.xml\n"})}),"\n",(0,o.jsx)(n.h2,{id:"step-2-create-the-modinfolua-file",children:"Step 2: Create the modinfo.lua File"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'name = "Frost Axe"\ndescription = "Adds a magical axe with freezing properties"\nauthor = "Your Name"\nversion = "1.0.0"\n\n-- Compatible with Don\'t Starve Together\ndst_compatible = true\n\n-- Not compatible with Don\'t Starve\ndont_starve_compatible = false\nreign_of_giants_compatible = false\n\n-- This mod is required on clients\nall_clients_require_mod = true\n\n-- This mod is not a client-only mod\nclient_only_mod = false\n\n-- Icon displayed in the server list\nicon_atlas = "modicon.xml"\nicon = "modicon.tex"\n\n-- Tags that describe your mod\nserver_filter_tags = {\n    "item",\n    "tool"\n}\n\n-- Configuration options\nconfiguration_options = {\n    {\n        name = "frost_damage",\n        label = "Frost Damage",\n        options = {\n            {description = "Low", data = 25},\n            {description = "Medium", data = 34, hover = "Default axe damage"},\n            {description = "High", data = 42}\n        },\n        default = 34\n    },\n    {\n        name = "durability",\n        label = "Durability",\n        options = {\n            {description = "Standard", data = 100},\n            {description = "Improved", data = 150},\n            {description = "Superior", data = 200}\n        },\n        default = 150\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-3-create-the-modmainlua-file",children:"Step 3: Create the modmain.lua File"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Import globals into the environment\nGLOBAL.setmetatable(env, {__index = function(t, k) return GLOBAL.rawget(GLOBAL, k) end})\n\n-- Add asset files\nAssets = {\n    -- Inventory image\n    Asset("IMAGE", "images/inventoryimages/frost_axe.tex"),\n    Asset("ATLAS", "images/inventoryimages/frost_axe.xml"),\n}\n\n-- Register the prefab\nPrefabFiles = {\n    "frost_axe",\n}\n\n-- Add recipe to craft the frost axe\nAddRecipe("frost_axe", \n    {\n        Ingredient("twigs", 1),\n        Ingredient("flint", 1),\n        Ingredient("bluegem", 1)\n    }, \n    GLOBAL.RECIPETABS.TOOLS, \n    GLOBAL.TECH.SCIENCE_ONE, \n    nil, nil, nil, nil, nil, \n    "images/inventoryimages/frost_axe.xml", "frost_axe.tex")\n\n-- Add custom strings\nGLOBAL.STRINGS.NAMES.FROST_AXE = "Frost Axe"\nGLOBAL.STRINGS.CHARACTERS.GENERIC.DESCRIBE.FROST_AXE = "It\'s unnaturally cold to the touch."\nGLOBAL.STRINGS.RECIPE_DESC.FROST_AXE = "An axe with freezing properties."\n\n-- Add custom tags for the item\nAddPrefabPostInit("frost_axe", function(inst)\n    inst:AddTag("frostweapon")\nend)\n\n-- Add a special effect when chopping trees\nAddComponentPostInit("workable", function(self)\n    local old_WorkedBy = self.WorkedBy\n    \n    function self:WorkedBy(worker, numworks, ...)\n        local result = old_WorkedBy(self, worker, numworks, ...)\n        \n        -- Check if the worker is using our frost axe\n        if worker and worker.components.inventory then\n            local tool = worker.components.inventory:GetEquippedItem(GLOBAL.EQUIPSLOTS.HANDS)\n            if tool and tool.prefab == "frost_axe" and self.action == GLOBAL.ACTIONS.CHOP then\n                -- Spawn frost effect\n                local fx = GLOBAL.SpawnPrefab("icespike_fx_1")\n                if fx then\n                    fx.Transform:SetPosition(self.inst.Transform:GetWorldPosition())\n                end\n                \n                -- Apply cold to nearby entities\n                local x, y, z = self.inst.Transform:GetWorldPosition()\n                local ents = GLOBAL.TheSim:FindEntities(x, y, z, 3, nil, {"player", "companion"})\n                for _, ent in ipairs(ents) do\n                    if ent.components.temperature then\n                        ent.components.temperature:DoDelta(-2)\n                    end\n                end\n            end\n        end\n        \n        return result\n    end\nend)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-4-create-the-prefab-file",children:"Step 4: Create the Prefab File"}),"\n",(0,o.jsxs)(n.p,{children:["Create ",(0,o.jsx)(n.code,{children:"scripts/prefabs/frost_axe.lua"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local assets = {\n    -- Use the axe animation but we\'ll recolor it\n    Asset("ANIM", "anim/axe.zip"),\n    Asset("ANIM", "anim/swap_axe.zip"),\n    \n    -- Inventory image\n    Asset("IMAGE", "images/inventoryimages/frost_axe.tex"),\n    Asset("ATLAS", "images/inventoryimages/frost_axe.xml"),\n}\n\n-- Function called when the axe is equipped\nlocal function onequip(inst, owner)\n    -- Use the regular axe animation for now\n    owner.AnimState:OverrideSymbol("swap_object", "swap_axe", "swap_axe")\n    \n    -- Show the arm holding the tool\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\n    \n    -- Apply a blue tint to the axe when equipped\n    owner.AnimState:SetMultColour(0.8, 0.8, 1, 1)\nend\n\n-- Function called when the axe is unequipped\nlocal function onunequip(inst, owner)\n    -- Restore normal appearance\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\n    owner.AnimState:SetMultColour(1, 1, 1, 1)\nend\n\n-- Function called when attacking with the axe\nlocal function onattack(inst, owner, target)\n    -- Apply freezing effect if the target has temperature\n    if target and target.components.temperature then\n        target.components.temperature:DoDelta(-5)\n        \n        -- Slow the target if it has locomotor\n        if target.components.locomotor then\n            target.components.locomotor:SetExternalSpeedMultiplier(inst, "frost_axe_slow", 0.7)\n            \n            -- Remove the slow effect after 3 seconds\n            if target._frost_axe_task then\n                target._frost_axe_task:Cancel()\n            end\n            \n            target._frost_axe_task = target:DoTaskInTime(3, function()\n                target.components.locomotor:RemoveExternalSpeedMultiplier(inst, "frost_axe_slow")\n                target._frost_axe_task = nil\n            end)\n        end\n        \n        -- Spawn a frost effect\n        local fx = SpawnPrefab("frostbreath")\n        if fx then\n            fx.Transform:SetPosition(target.Transform:GetWorldPosition())\n        end\n    end\nend\n\n-- Main function to create the frost axe\nlocal function fn()\n    -- Create the entity\n    local inst = CreateEntity()\n\n    -- Add required components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n\n    -- Set up physics\n    MakeInventoryPhysics(inst)\n\n    -- Set up animation\n    inst.AnimState:SetBank("axe")\n    inst.AnimState:SetBuild("axe")\n    inst.AnimState:PlayAnimation("idle")\n    \n    -- Apply a blue tint to the axe\n    inst.AnimState:SetMultColour(0.7, 0.7, 1, 1)\n\n    -- Add tags\n    inst:AddTag("sharp")\n    inst:AddTag("tool")\n    inst:AddTag("frostweapon")\n\n    -- Make the entity pristine for networking\n    inst.entity:SetPristine()\n    if not TheWorld.ismastersim then\n        return inst\n    end\n\n    -- Add components\n    inst:AddComponent("inventoryitem")\n    inst.components.inventoryitem.imagename = "frost_axe"\n    inst.components.inventoryitem.atlasname = "images/inventoryimages/frost_axe.xml"\n\n    -- Make it work as a tool\n    inst:AddComponent("tool")\n    inst.components.tool:SetAction(ACTIONS.CHOP, 2) -- Chop efficiency multiplier\n\n    -- Make it work as a weapon\n    inst:AddComponent("weapon")\n    inst.components.weapon:SetDamage(GetModConfigData("frost_damage"))\n    inst.components.weapon:SetOnAttack(onattack)\n\n    -- Add durability\n    inst:AddComponent("finiteuses")\n    inst.components.finiteuses:SetMaxUses(GetModConfigData("durability"))\n    inst.components.finiteuses:SetUses(GetModConfigData("durability"))\n    inst.components.finiteuses:SetOnFinished(inst.Remove)\n    inst.components.finiteuses:SetConsumption(ACTIONS.CHOP, 1)\n\n    -- Make it inspectable\n    inst:AddComponent("inspectable")\n\n    -- Make it equippable\n    inst:AddComponent("equippable")\n    inst.components.equippable:SetOnEquip(onequip)\n    inst.components.equippable:SetOnUnequip(onunequip)\n\n    -- Add a light component for a subtle glow\n    inst:AddComponent("lighttweener")\n    inst.components.lighttweener:StartTween(\n        inst.entity:AddLight(), \n        0, 0.6, 0.6, {80/255, 120/255, 255/255}, \n        0, \n        function() \n            -- After the light is added, make it flicker slightly\n            inst:DoPeriodicTask(0.3, function()\n                local intensity = 0.5 + math.random() * 0.1\n                inst.Light:SetIntensity(intensity)\n            end)\n        end\n    )\n\n    return inst\nend\n\n-- Register the prefab\nreturn Prefab("frost_axe", fn, assets)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-5-create-the-inventory-image",children:"Step 5: Create the Inventory Image"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Create a 64x64 pixel image for your frost axe"}),"\n",(0,o.jsxs)(n.li,{children:["Save it as ",(0,o.jsx)(n.code,{children:"images/inventoryimages/frost_axe.png"})]}),"\n",(0,o.jsxs)(n.li,{children:["Use a TEX converter tool to create ",(0,o.jsx)(n.code,{children:"frost_axe.tex"})," and ",(0,o.jsx)(n.code,{children:"frost_axe.xml"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"step-6-testing-your-mod",children:"Step 6: Testing Your Mod"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Launch Don't Starve Together"}),"\n",(0,o.jsx)(n.li,{children:"Enable your mod in the Mods menu"}),"\n",(0,o.jsx)(n.li,{children:"Start a new game"}),"\n",(0,o.jsx)(n.li,{children:"Craft your Frost Axe (requires twigs, flint, and a blue gem)"}),"\n",(0,o.jsxs)(n.li,{children:["Test the axe by:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Chopping trees to see the frost effect"}),"\n",(0,o.jsx)(n.li,{children:"Attacking creatures to see the freezing effect"}),"\n",(0,o.jsx)(n.li,{children:"Checking the durability as you use it"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"customization-options",children:"Customization Options"}),"\n",(0,o.jsx)(n.p,{children:"Here are some ways to customize your frost axe:"}),"\n",(0,o.jsx)(n.h3,{id:"change-the-recipe",children:"Change the Recipe"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Make it more expensive\nAddRecipe("frost_axe", \n    {\n        Ingredient("twigs", 2),\n        Ingredient("flint", 2),\n        Ingredient("bluegem", 2)\n    }, \n    GLOBAL.RECIPETABS.MAGIC,  -- Change to magic tab\n    GLOBAL.TECH.MAGIC_TWO,    -- Require prestihatitator\n    nil, nil, nil, nil, nil, \n    "images/inventoryimages/frost_axe.xml", "frost_axe.tex")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"add-a-custom-animation",children:"Add a Custom Animation"}),"\n",(0,o.jsx)(n.p,{children:"For a fully custom appearance, create your own animation files:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Create ",(0,o.jsx)(n.code,{children:"anim/frost_axe.zip"})," with custom animations"]}),"\n",(0,o.jsx)(n.li,{children:"Update the prefab file:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/frost_axe.zip"),\n    Asset("ANIM", "anim/swap_frost_axe.zip"),\n    -- Other assets...\n}\n\n-- Then in the fn() function:\ninst.AnimState:SetBank("frost_axe")\ninst.AnimState:SetBuild("frost_axe")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"add-more-freezing-effects",children:"Add More Freezing Effects"}),"\n",(0,o.jsx)(n.p,{children:"Enhance the freezing capabilities:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- In the onattack function:\nif target and target.components.freezable then\n    target.components.freezable:AddColdness(2)\n    target.components.freezable:SpawnShatterFX()\nend\n\n-- Add a chance to freeze enemies solid\nif target and math.random() < 0.1 then  -- 10% chance\n    if target.components.freezable then\n        target.components.freezable:Freeze(3)  -- Freeze for 3 seconds\n    end\nend\n"})}),"\n",(0,o.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,o.jsx)(n.h3,{id:"problem-mod-doesnt-appear-in-the-mod-list",children:"Problem: Mod doesn't appear in the mod list"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Check your folder structure and ensure modinfo.lua is in the root directory"]}),"\n",(0,o.jsx)(n.h3,{id:"problem-inventory-image-doesnt-show-up",children:"Problem: Inventory image doesn't show up"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Verify the image paths and ensure the TEX/XML files are correctly generated"]}),"\n",(0,o.jsx)(n.h3,{id:"problem-freezing-effect-doesnt-work",children:"Problem: Freezing effect doesn't work"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Make sure you're checking for the temperature component before trying to use it"]}),"\n",(0,o.jsx)(n.h3,{id:"problem-game-crashes-when-using-the-axe",children:"Problem: Game crashes when using the axe"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Add error checking around critical code:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"local function onattack(inst, owner, target)\n    if not target then return end\n    \n    if target.components.temperature then\n        target.components.temperature:DoDelta(-5)\n    end\n    \n    -- Rest of the function...\nend\n"})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Now that you've created a basic custom item, you can:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Add More Effects"}),": Create additional special abilities for your axe"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create Custom Animations"}),": Design unique animations for your item"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Expand Your Mod"}),": Add more frost-themed items to create a complete set"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Add Sound Effects"}),": Include custom sounds when the axe is used"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For more advanced item creation, check out the ",(0,o.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/custom-component",children:"Custom Component"})," tutorial to learn how to add entirely new behaviors to your items."]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);