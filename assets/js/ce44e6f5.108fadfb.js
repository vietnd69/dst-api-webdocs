"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6337],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:n},e.children)}},8666:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api-vanilla/stategraphs/states","title":"States API","description":"Last Update: 2023-07-06","source":"@site/docs/api-vanilla/stategraphs/states.md","sourceDirName":"api-vanilla/stategraphs","slug":"/api-vanilla/stategraphs/states","permalink":"/dst-api-webdocs/docs/api-vanilla/stategraphs/states","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"states","title":"States API","sidebar_position":2,"last_updated":"2023-07-06T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Stategraphs Overview","permalink":"/dst-api-webdocs/docs/api/stategraphs"},"next":{"title":"Stategraph Events","permalink":"/dst-api-webdocs/docs/api-vanilla/stategraphs/events"}}');var s=t(4848),a=t(8453);const l={id:"states",title:"States API",sidebar_position:2,last_updated:new Date("2023-07-06T00:00:00.000Z")},o="States API",r={},d=[{value:"State Structure",id:"state-structure",level:2},{value:"Key Properties",id:"key-properties",level:2},{value:"name",id:"name",level:3},{value:"tags",id:"tags",level:3},{value:"onenter",id:"onenter",level:3},{value:"onexit",id:"onexit",level:3},{value:"onupdate",id:"onupdate",level:3},{value:"timeline",id:"timeline",level:3},{value:"events",id:"events",level:3},{value:"State Manipulation",id:"state-manipulation",level:2},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Animation-driven State Transitions",id:"animation-driven-state-transitions",level:3},{value:"Timeout-driven State Transitions",id:"timeout-driven-state-transitions",level:3},{value:"Complex State Logic",id:"complex-state-logic",level:3}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Last Update: 2023-07-06"})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"states-api",children:"States API"})}),"\n",(0,s.jsx)(n.p,{children:"The States API allows you to define individual states within a stategraph, controlling how entities behave in different situations."}),"\n",(0,s.jsx)(n.h2,{id:"state-structure",children:"State Structure"}),"\n",(0,s.jsxs)(n.p,{children:["A state is created using the ",(0,s.jsx)(n.code,{children:"State"})," constructor with a table of properties:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'State{\n    name = "idle",              -- Unique name for the state\n    tags = { "idle", "canrotate" }, -- Tags used for querying state properties\n    onenter = function(inst) end,   -- Called when entering the state\n    onexit = function(inst) end,    -- Called when exiting the state\n    onupdate = function(inst, dt) end, -- Called every frame while in this state\n    timeline = {                   -- Timeline of events within the state\n        TimeEvent(10*FRAMES, function(inst) end),\n        TimeEvent(20*FRAMES, function(inst) end),\n    },\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"key-properties",children:"Key Properties"}),"\n",(0,s.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,s.jsx)(n.p,{children:"The unique identifier for the state, used when transitioning between states."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'name = "attack",\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tags",children:"tags"}),"\n",(0,s.jsx)(n.p,{children:"Tags are used to categorize states and query state properties. Common tags include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"idle"}),": Entity is in a neutral state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"moving"}),": Entity is in motion"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"running"}),": Entity is running"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"busy"}),": Entity can't be interrupted"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"attack"}),": Entity is attacking"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"canrotate"}),": Entity can change direction while in this state"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'tags = { "idle", "canrotate" },\n'})}),"\n",(0,s.jsx)(n.h3,{id:"onenter",children:"onenter"}),"\n",(0,s.jsx)(n.p,{children:"A function called when the entity enters the state. This is where you typically:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Play animations"}),"\n",(0,s.jsx)(n.li,{children:"Start sounds"}),"\n",(0,s.jsx)(n.li,{children:"Set up timers"}),"\n",(0,s.jsx)(n.li,{children:"Initialize state variables"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'onenter = function(inst)\n    inst.AnimState:PlayAnimation("idle_loop", true)\n    inst.SoundEmitter:PlaySound("dontstarve/creatures/spider/spider_walk")\n    inst.sg:SetTimeout(2 + math.random()*1)\nend,\n'})}),"\n",(0,s.jsx)(n.h3,{id:"onexit",children:"onexit"}),"\n",(0,s.jsx)(n.p,{children:"A function called when the entity exits the state. Use this to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clean up timers"}),"\n",(0,s.jsx)(n.li,{children:"Stop looping sounds"}),"\n",(0,s.jsx)(n.li,{children:"Reset variables"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'onexit = function(inst)\n    inst.SoundEmitter:KillSound("growl")\nend,\n'})}),"\n",(0,s.jsx)(n.h3,{id:"onupdate",children:"onupdate"}),"\n",(0,s.jsxs)(n.p,{children:["Called every frame while in this state. The ",(0,s.jsx)(n.code,{children:"dt"})," parameter is the time since the last update."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'onupdate = function(inst, dt)\n    if inst.components.locomotor:WantsToMoveForward() then\n        inst.components.locomotor:WalkForward()\n    else\n        inst.sg:GoToState("idle")\n    end\nend,\n'})}),"\n",(0,s.jsx)(n.h3,{id:"timeline",children:"timeline"}),"\n",(0,s.jsxs)(n.p,{children:["A sequence of timed events that occur while in the state. Use ",(0,s.jsx)(n.code,{children:"TimeEvent"})," to define when functions should be called relative to entering the state."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'timeline = {\n    TimeEvent(0*FRAMES, function(inst)\n        inst.SoundEmitter:PlaySound("dontstarve/wilson/attack_weapon")\n    end),\n    TimeEvent(8*FRAMES, function(inst)\n        inst.components.combat:DoAttack()\n    end),\n    TimeEvent(12*FRAMES, function(inst)\n        inst.sg:RemoveStateTag("attack")\n        inst.sg:AddStateTag("idle")\n    end),\n},\n'})}),"\n",(0,s.jsx)(n.h3,{id:"events",children:"events"}),"\n",(0,s.jsx)(n.p,{children:"A list of events that can be handled while in this state. When an event is triggered, it can cause a state transition."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'events = {\n    EventHandler("animover", function(inst)\n        inst.sg:GoToState("idle")\n    end),\n},\n'})}),"\n",(0,s.jsx)(n.h2,{id:"state-manipulation",children:"State Manipulation"}),"\n",(0,s.jsx)(n.p,{children:"Within a state, you can use these methods to manipulate the current state:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inst.sg:GoToState(statename, [data])"}),": Transition to a new state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inst.sg:AddStateTag(tag)"}),": Add a tag to the current state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inst.sg:RemoveStateTag(tag)"}),": Remove a tag from the current state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inst.sg:HasStateTag(tag)"}),": Check if the current state has a tag"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inst.sg:SetTimeout(time)"}),": Set a timeout for the current state"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"animation-driven-state-transitions",children:"Animation-driven State Transitions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Go to another state when animation finishes\nevents = {\n    EventHandler("animover", function(inst)\n        inst.sg:GoToState("idle")\n    end),\n},\n'})}),"\n",(0,s.jsx)(n.h3,{id:"timeout-driven-state-transitions",children:"Timeout-driven State Transitions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Set a timeout when entering the state\nonenter = function(inst)\n    inst.AnimState:PlayAnimation("idle_loop", true)\n    inst.sg:SetTimeout(2 + math.random()*1)\nend,\n\n-- Define what happens when timeout is reached\nontimeout = function(inst)\n    inst.sg:GoToState("alert")\nend,\n'})}),"\n",(0,s.jsx)(n.h3,{id:"complex-state-logic",children:"Complex State Logic"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'onenter = function(inst)\n    inst.AnimState:PlayAnimation("atk")\n    inst.components.locomotor:StopMoving()\n    inst.sg.statemem.target = inst.components.combat.target\n    inst.components.combat:StartAttack()\nend,\n\ntimeline = {\n    TimeEvent(8*FRAMES, function(inst) \n        inst.components.combat:DoAttack(inst.sg.statemem.target) \n    end),\n},\n\nevents = {\n    EventHandler("animover", function(inst)\n        inst.sg:GoToState("idle")\n    end),\n},\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);