"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[71601],{1328:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/achievements/lavaarena-achievement-quest-defs","title":"Lava Arena Achievement Quest Definitions","description":"Defines achievement quest categories and progression system for Lava Arena events","source":"@site/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena_achievement_quest_defs.md","sourceDirName":"game-scripts/core-systems/game-mechanics/achievements","slug":"/game-scripts/core-systems/game-mechanics/achievements/lavaarena-achievement-quest-defs","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena-achievement-quest-defs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"lavaarena-achievement-quest-defs","title":"Lava Arena Achievement Quest Definitions","description":"Defines achievement quest categories and progression system for Lava Arena events","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var r=s(74848),t=s(28453);const a={id:"lavaarena-achievement-quest-defs",title:"Lava Arena Achievement Quest Definitions",description:"Defines achievement quest categories and progression system for Lava Arena events",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},c="Lava Arena Achievement Quest Definitions",l={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Constants",id:"constants",level:2},{value:"WXP_DAILY_WIN",id:"wxp_daily_win",level:3},{value:"WXP_DAILY_MATCH",id:"wxp_daily_match",level:3},{value:"WXP_QUESTS_BASIC",id:"wxp_quests_basic",level:3},{value:"WXP_QUESTS_CHALLENGE",id:"wxp_quests_challenge",level:3},{value:"WXP_QUESTS_SPECIALIZED",id:"wxp_quests_specialized",level:3},{value:"Functions",id:"functions",level:2},{value:"TestMatchTime(user, data, max_time)",id:"test-match-time",level:3},{value:"TestForVictory(user, data)",id:"test-for-victory",level:3},{value:"Achievement Categories",id:"achievement-categories",level:2},{value:"quests_daily",id:"quests_daily",level:3},{value:"quests_basic",id:"quests_basic",level:3},{value:"quests_challenge",id:"quests_challenge",level:3},{value:"quests_specialized",id:"quests_specialized",level:3},{value:"Achievement Properties",id:"achievement-properties",level:2},{value:"achievementid",id:"achievementid",level:3},{value:"wxp",id:"wxp",level:3},{value:"daily",id:"daily",level:3},{value:"team",id:"team",level:3},{value:"character_set",id:"character_set",level:3},{value:"Data Structure",id:"data-structure",level:2},{value:"Achievement Definition",id:"achievement-definition",level:3},{value:"Category Definition",id:"category-definition",level:3},{value:"Event Configuration",id:"event-configuration",level:2},{value:"seasons",id:"seasons",level:3},{value:"eventid",id:"eventid",level:3},{value:"Related Modules",id:"related-modules",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"lava-arena-achievement-quest-definitions",children:"Lava Arena Achievement Quest Definitions"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"lavaarena_achievement_quest_defs"})," module defines the quest and achievement system for the Lava Arena event. It organizes achievements into categories with different experience point rewards and provides testing functions for quest completion validation."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Quest definitions are automatically loaded during Lava Arena events\nlocal quest_data = event_server_data("lavaarena", "lavaarena_achievement_quest_defs")\nlocal achievements = quest_data.achievements\n'})}),"\n",(0,r.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,r.jsx)(n.h3,{id:"wxp_daily_win",children:"WXP_DAILY_WIN"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"5000"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Experience points awarded for daily win achievements."]}),"\n",(0,r.jsx)(n.h3,{id:"wxp_daily_match",children:"WXP_DAILY_MATCH"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"500"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Experience points awarded for daily match participation achievements."]}),"\n",(0,r.jsx)(n.h3,{id:"wxp_quests_basic",children:"WXP_QUESTS_BASIC"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"500"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Experience points awarded for basic quest completion."]}),"\n",(0,r.jsx)(n.h3,{id:"wxp_quests_challenge",children:"WXP_QUESTS_CHALLENGE"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"2500"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Experience points awarded for challenge quest completion."]}),"\n",(0,r.jsx)(n.h3,{id:"wxp_quests_specialized",children:"WXP_QUESTS_SPECIALIZED"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"1500"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Experience points awarded for specialized character quest completion."]}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"test-match-time",children:"TestMatchTime(user, data, max_time)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nTests whether a match was won within the specified time limit."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user"})," (table): Player user data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," (table): Match outcome data containing ",(0,r.jsx)(n.code,{children:"outcome.won"})," and ",(0,r.jsx)(n.code,{children:"outcome.time"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"max_time"})," (number): Maximum allowed time in seconds"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if match was won within time limit"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local result = TestMatchTime(user, data, 30*60) -- Test for 30 minute win\n"})}),"\n",(0,r.jsx)(n.h3,{id:"test-for-victory",children:"TestForVictory(user, data)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nTests whether the player achieved victory in the match."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user"})," (table): Player user data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," (table): Match outcome data containing ",(0,r.jsx)(n.code,{children:"outcome.won"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if player won the match"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local won = TestForVictory(user, data)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"achievement-categories",children:"Achievement Categories"}),"\n",(0,r.jsx)(n.h3,{id:"quests_daily",children:"quests_daily"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDaily recurring achievements that reset each day."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Achievements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_dailywin"}),": Daily victory achievement (5000 WXP)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_dailymatch"}),": Daily match participation (500 WXP)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"daily = true"}),": Marks achievements as daily recurring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wxp"}),": Experience points awarded"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quests_basic",children:"quests_basic"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nBasic achievements accessible to all players with standard difficulty."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Category WXP:"})," 500"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sample Achievements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_battlestandards"}),": Battle standard related achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_reviver"}),": Revival related achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_specials_veryfast"}),": Fast special attack achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_outofharmsway"}),": Damage avoidance achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_nodeath_solo_easy"}),": Solo no-death achievements (easy mode)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"team = true"}),": Some achievements require team coordination"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quests_challenge",children:"quests_challenge"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nHigh-difficulty achievements requiring skilled play and coordination."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Category WXP:"})," 2500"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sample Achievements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_nodeath_r2"})," through ",(0,r.jsx)(n.code,{children:"laq_nodeath_r6"}),": No-death achievements for rounds 2-6"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_wintime_30"}),", ",(0,r.jsx)(n.code,{children:"laq_wintime_25"}),", ",(0,r.jsx)(n.code,{children:"laq_wintime_20"}),": Time-based victory achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_spinners_hard"}),": Advanced spinner-related challenges"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_rhinodrill_hard"}),": Advanced rhinodrill challenges"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"team = true"}),": All challenge achievements require team coordination"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quests_specialized",children:"quests_specialized"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCharacter-specific achievements that require playing specific characters."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Category WXP:"})," 1500"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Character Sets:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Combat characters: ",(0,r.jsx)(n.code,{children:'{"wolfgang", "wathgrithr"}'})]}),"\n",(0,r.jsxs)(n.li,{children:["Magic users: ",(0,r.jsx)(n.code,{children:'{"waxwell", "wickerbottom"}'})]}),"\n",(0,r.jsxs)(n.li,{children:["Support characters: ",(0,r.jsx)(n.code,{children:'{"wilson", "winona"}'})]}),"\n",(0,r.jsx)(n.li,{children:"Specialists: Individual character requirements"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sample Achievements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_guardsbroken"}),": Guard-breaking achievements for specific characters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_hammer"}),": Hammer-related achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_petrify"}),": Petrification achievements (Waxwell specific)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_meteorkill"}),": Meteor kill achievements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"laq_defeat_*"}),": Boss defeat achievements available to all characters"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"achievement-properties",children:"Achievement Properties"}),"\n",(0,r.jsx)(n.h3,{id:"achievementid",children:"achievementid"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Unique identifier for the achievement."]}),"\n",(0,r.jsx)(n.h3,{id:"wxp",children:"wxp"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"number"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Experience points awarded upon completion. Can be set per achievement or inherited from category."]}),"\n",(0,r.jsx)(n.h3,{id:"daily",children:"daily"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Whether the achievement resets daily."]}),"\n",(0,r.jsx)(n.h3,{id:"team",children:"team"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Whether the achievement requires team coordination."]}),"\n",(0,r.jsx)(n.h3,{id:"character_set",children:"character_set"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"table"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Array of character names that can complete this achievement. If nil, available to all characters."]}),"\n",(0,r.jsx)(n.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,r.jsx)(n.h3,{id:"achievement-definition",children:"Achievement Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'{\n    achievementid = "unique_id",\n    wxp = 500,              -- Experience points (optional if category_wxp set)\n    daily = true,           -- Daily reset flag (optional)\n    team = true,            -- Team achievement flag (optional)  \n    character_set = {"wilson", "willow"} -- Allowed characters (optional)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"category-definition",children:"Category Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'{\n    category = "category_name",\n    category_wxp = 500,     -- Default WXP for all achievements in category\n    data = {\n        -- Array of achievement definitions\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"event-configuration",children:"Event Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"seasons",children:"seasons"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"{ 2 }"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Array of seasons when these achievements are active."]}),"\n",(0,r.jsx)(n.h3,{id:"eventid",children:"eventid"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:'"lavaarena"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," stable"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Event identifier for the Lava Arena event."]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena-achievements",children:"Lava Arena Achievements"}),": Individual character achievement definitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena-communityprogression",children:"Lava Arena Community Progression"}),": Community-wide progression system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/eventachievements",children:"Event Achievements"}),": General event achievement framework"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(96540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);