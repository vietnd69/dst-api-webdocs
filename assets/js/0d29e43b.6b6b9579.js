"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[72404],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},69763:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/localization-content/strings/skin-strings","title":"Skin Strings","description":"Auto-generated localization strings for character skin quotes and item names","source":"@site/docs/game-scripts/core-systems/localization-content/strings/skin_strings.md","sourceDirName":"game-scripts/core-systems/localization-content/strings","slug":"/game-scripts/core-systems/localization-content/strings/skin-strings","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/skin-strings","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"skin-strings","title":"Skin Strings","description":"Auto-generated localization strings for character skin quotes and item names","sidebar_position":3,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Strings Pretranslated","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/strings-pretranslated"},"next":{"title":"Translation Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/translation/"}}');var r=s(74848),l=s(28453);const t={id:"skin-strings",title:"Skin Strings",description:"Auto-generated localization strings for character skin quotes and item names",sidebar_position:3,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},c="Skin Strings",a={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"String Tables",id:"string-tables",level:2},{value:"STRINGS.SKIN_QUOTES",id:"skin-quotes",level:3},{value:"STRINGS.SKIN_NAMES",id:"skin-names",level:3},{value:"STRINGS.SKIN_DESCRIPTIONS.TYPE",id:"skin-descriptions-type",level:3},{value:"STRINGS.SKIN_DESCRIPTIONS.ITEM",id:"skin-descriptions-item",level:3},{value:"Character Skin Patterns",id:"character-skin-patterns",level:2},{value:"Character Identifiers",id:"character-identifiers",level:3},{value:"Common Skin Themes",id:"common-skin-themes",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Mod Support",id:"mod-support",level:3},{value:"UI Integration",id:"ui-integration",level:3},{value:"Auto-Generation Process",id:"auto-generation-process",level:2},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Accessing Character Quotes",id:"accessing-character-quotes",level:3},{value:"Displaying Skin Names",id:"displaying-skin-names",level:3},{value:"Validating Skin Availability",id:"validating-skin-availability",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"skin-strings",children:"Skin Strings"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"skin_strings.lua"})," file contains auto-generated localization strings for character skin quotes and item names in Don't Starve Together. This file is automatically generated by the ",(0,r.jsx)(n.code,{children:"export_accountitems.lua"})," script and provides the localized text content for all cosmetic skins in the game."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Access a character\'s skin quote\nlocal quote = STRINGS.SKIN_QUOTES.wilson_formal\n-- Returns: "I hate parties."\n\n-- Access a skin\'s display name\nlocal name = STRINGS.SKIN_NAMES.wilson_formal\n-- Returns: "The Gentleman Scientist"\n\n-- Access item type descriptions\nlocal type_desc = STRINGS.SKIN_DESCRIPTIONS.TYPE.CHARACTER\n-- Returns: "Character"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"string-tables",children:"String Tables"}),"\n",(0,r.jsx)(n.h3,{id:"skin-quotes",children:"STRINGS.SKIN_QUOTES"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nContains character-specific quotes for each skin variation. These quotes appear when players inspect or interact with characters wearing specific skins."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'STRINGS.SKIN_QUOTES = {\n    [character_skin_id] = "Quote text"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"character_skin_id"})," (string): Unique identifier combining character name and skin theme"]}),"\n",(0,r.jsx)(n.li,{children:"Quote text (string): Localized quote displayed for the skin"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Patterns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Character names: ",(0,r.jsx)(n.code,{children:"wilson"}),", ",(0,r.jsx)(n.code,{children:"willow"}),", ",(0,r.jsx)(n.code,{children:"wolfgang"}),", ",(0,r.jsx)(n.code,{children:"wendy"}),", ",(0,r.jsx)(n.code,{children:"wx78"}),", ",(0,r.jsx)(n.code,{children:"wickerbottom"}),", ",(0,r.jsx)(n.code,{children:"woodie"}),", ",(0,r.jsx)(n.code,{children:"wes"}),", ",(0,r.jsx)(n.code,{children:"waxwell"}),", ",(0,r.jsx)(n.code,{children:"wathgrithr"}),", ",(0,r.jsx)(n.code,{children:"webber"}),", ",(0,r.jsx)(n.code,{children:"winona"}),", ",(0,r.jsx)(n.code,{children:"warly"}),", ",(0,r.jsx)(n.code,{children:"wormwood"}),", ",(0,r.jsx)(n.code,{children:"wurt"}),", ",(0,r.jsx)(n.code,{children:"walter"}),", ",(0,r.jsx)(n.code,{children:"wanda"})]}),"\n",(0,r.jsxs)(n.li,{children:["Skin themes: ",(0,r.jsx)(n.code,{children:"formal"}),", ",(0,r.jsx)(n.code,{children:"gladiator"}),", ",(0,r.jsx)(n.code,{children:"victorian"}),", ",(0,r.jsx)(n.code,{children:"shadow"}),", ",(0,r.jsx)(n.code,{children:"rose"}),", ",(0,r.jsx)(n.code,{children:"nature"}),", ",(0,r.jsx)(n.code,{children:"lunar"}),", ",(0,r.jsx)(n.code,{children:"ice"}),", ",(0,r.jsx)(n.code,{children:"survivor"}),", ",(0,r.jsx)(n.code,{children:"ancient"})]}),"\n",(0,r.jsxs)(n.li,{children:["Special variants: ",(0,r.jsx)(n.code,{children:"_d"})," (damaged), ",(0,r.jsx)(n.code,{children:"_p"})," (pristine)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Character skin quotes\nSTRINGS.SKIN_QUOTES.wilson_formal = "I hate parties."\nSTRINGS.SKIN_QUOTES.willow_ancient = "Sometimes the old ways need to crash and burn to make way for the new."\nSTRINGS.SKIN_QUOTES.wolfgang_gladiator = "You will kneel before might of Wolfgang!"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"skin-names",children:"STRINGS.SKIN_NAMES"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nContains display names for all cosmetic skins in the game, including character skins, item skins, and special cosmetic items."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'STRINGS.SKIN_NAMES = {\n    [skin_id] = "Display Name"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Categories:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Character Skins"}),": Named skin variations for playable characters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Item Skins"}),": Cosmetic variants for tools, weapons, armor, and structures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pet Skins"}),": Appearance modifications for companion creatures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Special Items"}),": Unique cosmetic elements and accessories"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Character skin names\nSTRINGS.SKIN_NAMES.wilson_formal = "The Gentleman Scientist"\nSTRINGS.SKIN_NAMES.willow_ancient = "The Firestarter"\n\n-- Item skin names\nSTRINGS.SKIN_NAMES.spear_poison = "Venomous Spear"\nSTRINGS.SKIN_NAMES.armor_grass_woven = "Woven Grass Armor"\n\n-- Pet skin names\nSTRINGS.SKIN_NAMES.chester_snow = "Snow Chester"\nSTRINGS.SKIN_NAMES.glommer_flower = "Flower Glommer"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"skin-descriptions-type",children:"STRINGS.SKIN_DESCRIPTIONS.TYPE"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nProvides localized descriptions for different skin categories and types used in the game's UI."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Available Types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"BASE"}),": Head/Base character modifications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"BEEFALO"}),": Beefalo mount clothing and accessories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CHARACTER"}),": Character skin variations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CLOTHING"}),": Wearable cosmetic items"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CRAFTABLE"}),": Cosmetic variants of craftable items"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EMOJI"}),": Emoticon expressions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EMOTE"}),": Character emote animations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LOADING"}),": Loading screen images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MYSTERYBOX"}),": Mystery box containers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PET"}),": Companion creature modifications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PLAYERPORTRAIT"}),": Player avatar portraits"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PROFILEFLAIR"}),": Profile decoration icons"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Skin type descriptions\nSTRINGS.SKIN_DESCRIPTIONS.TYPE.CHARACTER = "Character"\nSTRINGS.SKIN_DESCRIPTIONS.TYPE.CLOTHING = "Clothing"\nSTRINGS.SKIN_DESCRIPTIONS.TYPE.EMOTE = "Emote"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"skin-descriptions-item",children:"STRINGS.SKIN_DESCRIPTIONS.ITEM"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nContains localized names for specific items that can have skin variations applied to them."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Categories Include:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tools"}),": Axes, pickaxes, shovels, hammers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Weapons"}),": Spears, swords, staffs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Armor"}),": Protective equipment variants"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Structures"}),": Buildings and constructions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Containers"}),": Storage items and chests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lighting"}),": Torches, lanterns, fire pits"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Furniture"}),": Decorative and functional items"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Item descriptions for skinnable objects\nSTRINGS.SKIN_DESCRIPTIONS.ITEM.AXE = "Axe"\nSTRINGS.SKIN_DESCRIPTIONS.ITEM.SPEAR = "Spear"\nSTRINGS.SKIN_DESCRIPTIONS.ITEM.CHEST = "Chest"\nSTRINGS.SKIN_DESCRIPTIONS.ITEM.FIREPIT = "Fire Pit"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"character-skin-patterns",children:"Character Skin Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"character-identifiers",children:"Character Identifiers"}),"\n",(0,r.jsxs)(n.p,{children:["All character skins follow the pattern: ",(0,r.jsx)(n.code,{children:"[character]_[theme]"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Available Characters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wilson"})," - Wilson the Gentleman Scientist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"willow"})," - Willow the Firestarter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wolfgang"})," - Wolfgang the Strongman"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wendy"})," - Wendy the Mournful"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wx78"})," - WX-78 the Soulless Automaton"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wickerbottom"})," - Wickerbottom the Librarian"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"woodie"})," - Woodie the Lumberjack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wes"})," - Wes the Silent"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"waxwell"})," - Maxwell the Puppet Master"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wathgrithr"})," - Wigfrid the Performance Artist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"webber"})," - Webber the Indigestible"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"winona"})," - Winona the Handywoman"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"warly"})," - Warly the Culinarian"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wormwood"})," - Wormwood the Verdant"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wurt"})," - Wurt the Marsh Dweller"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"walter"})," - Walter the Fearless"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wanda"})," - Wanda the Timekeeper"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"common-skin-themes",children:"Common Skin Themes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Universal Themes"})," (available for most characters):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"formal"})," - Formal/elegant clothing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gladiator"})," - Combat/arena themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"victorian"})," - Victorian era styling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadow"})," - Dark/corrupted appearance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rose"})," - Rose/romantic themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nature"})," - Natural/forest themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lunar"})," - Moon/celestial themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ice"})," - Winter/cold themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"survivor"})," - Post-apocalyptic/rugged"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ancient"})," - Historical/archaeological"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"masquerade"})," - Masquerade ball themed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"yule"})," - Holiday/winter celebration"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Character-Specific Themes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"walter_detective"})," - Detective outfit for Walter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"warly_chef"})," - Chef uniform for Warly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wathgrithr_valkyrie"})," - Valkyrie armor for Wigfrid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wx78_retro"})," - Retro styling for WX-78"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,r.jsx)(n.h3,{id:"mod-support",children:"Mod Support"}),"\n",(0,r.jsx)(n.p,{children:"Mods can extend the skin strings system by adding entries to the string tables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Add custom skin quotes\nSTRINGS.SKIN_QUOTES = STRINGS.SKIN_QUOTES or {}\nSTRINGS.SKIN_QUOTES.mymod_character_custom = "My custom quote!"\n\n-- Add custom skin names  \nSTRINGS.SKIN_NAMES = STRINGS.SKIN_NAMES or {}\nSTRINGS.SKIN_NAMES.mymod_item_variant = "Custom Item Skin"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"ui-integration",children:"UI Integration"}),"\n",(0,r.jsx)(n.p,{children:"The skin strings are used throughout the game's user interface:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Character selection screens"}),"\n",(0,r.jsx)(n.li,{children:"Inventory item tooltips"}),"\n",(0,r.jsx)(n.li,{children:"Skin preview panels"}),"\n",(0,r.jsx)(n.li,{children:"Market/store displays"}),"\n",(0,r.jsx)(n.li,{children:"Achievement descriptions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"auto-generation-process",children:"Auto-Generation Process"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Source:"})," ",(0,r.jsx)(n.code,{children:"export_accountitems.lua"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Generation Method:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Reads skin definitions from game data"}),"\n",(0,r.jsx)(n.li,{children:"Extracts quote and name information"}),"\n",(0,r.jsx)(n.li,{children:"Formats into Lua string table structure"}),"\n",(0,r.jsxs)(n.li,{children:["Writes to ",(0,r.jsx)(n.code,{children:"skin_strings.lua"})," file"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Update Frequency:"})," Generated with each game build that includes new skins"]}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"accessing-character-quotes",children:"Accessing Character Quotes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Get quote for specific character skin\nlocal function GetSkinQuote(character, skin_theme)\n    local skin_id = character .. "_" .. skin_theme\n    return STRINGS.SKIN_QUOTES[skin_id]\nend\n\n-- Example usage\nlocal quote = GetSkinQuote("wilson", "formal")\nprint(quote) -- "I hate parties."\n'})}),"\n",(0,r.jsx)(n.h3,{id:"displaying-skin-names",children:"Displaying Skin Names"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Format skin name for UI display\nlocal function FormatSkinName(base_name, skin_id)\n    local skin_name = STRINGS.SKIN_NAMES[skin_id]\n    if skin_name then\n        return base_name .. " - " .. skin_name\n    end\n    return base_name\nend\n\n-- Example\nlocal display_name = FormatSkinName("Wilson", "wilson_formal")\nprint(display_name) -- "Wilson - The Gentleman Scientist"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"validating-skin-availability",children:"Validating Skin Availability"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Check if skin has localized strings\nlocal function HasSkinStrings(skin_id)\n    return STRINGS.SKIN_NAMES[skin_id] ~= nil or \n           STRINGS.SKIN_QUOTES[skin_id] ~= nil\nend\n\n-- Usage\nif HasSkinStrings("wilson_formal") then\n    -- Skin is properly localized\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./skin_assets.md",children:"Skin Assets"}),": Defines visual assets for skins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./skin_affinity_info.md",children:"Skin Affinity Info"}),": Character-skin compatibility mapping"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./skin_gifts.md",children:"Skin Gifts"}),": Gift system for skin distribution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./skin_set_info.md",children:"Skin Set Info"}),": Coordinated skin collections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./constants.md",children:"Constants"}),": Game-wide constant definitions"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);