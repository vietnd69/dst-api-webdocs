"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[20312],{13127:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/achievements/lavaarena-communityprogression","title":"Lava Arena Community Progression","description":"Manages community-wide progression tracking and unlock system for Lava Arena events","source":"@site/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena_communityprogression.md","sourceDirName":"game-scripts/core-systems/game-mechanics/achievements","slug":"/game-scripts/core-systems/game-mechanics/achievements/lavaarena-communityprogression","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena-communityprogression","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"lavaarena-communityprogression","title":"Lava Arena Community Progression","description":"Manages community-wide progression tracking and unlock system for Lava Arena events","sidebar_position":5,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var i=n(74848),l=n(28453);const t={id:"lavaarena-communityprogression",title:"Lava Arena Community Progression",description:"Manages community-wide progression tracking and unlock system for Lava Arena events",sidebar_position:5,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},d="Lava Arena Community Progression",a={},o=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Constants",id:"constants",level:2},{value:"Operation Modes",id:"operation-modes",level:3},{value:"IS_FRONTEND",id:"is_frontend",level:4},{value:"IS_CLIENT_ONLY",id:"is_client_only",level:4},{value:"IS_DEDICATED_SERVER",id:"is_dedicated_server",level:4},{value:"IS_CLIENT_HOSTED",id:"is_client_hosted",level:4},{value:"Configuration",id:"configuration",level:3},{value:"PROGRESSION_QUERY_EXPIRY",id:"progression_query_expiry",level:4},{value:"NUM_RETRIES",id:"num_retries",level:4},{value:"FINAL_UNLOCK_DATA",id:"final_unlock_data",level:4},{value:"Class: CommunityProgression",id:"class-communityprogression",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"GetUnlockData(id)",id:"get-unlock-data",level:3},{value:"IsLocked(id) / IsUnlocked(id)",id:"is-locked",level:3},{value:"GetProgression()",id:"get-progression",level:3},{value:"GetLastSeenProgression()",id:"get-last-seen-progression",level:3},{value:"IsNewUnlock(id)",id:"is-new-unlock",level:3},{value:"RequestProgressionData(force, time)",id:"request-progression-data",level:3},{value:"RequestQuestData(force, userid, time)",id:"request-quest-data",level:3},{value:"RequestAllData(force, userid)",id:"request-all-data",level:3},{value:"IsQueryActive()",id:"is-query-active",level:3},{value:"GetCurrentQuestData(userid)",id:"get-current-quest-data",level:3},{value:"RegisterForWorld()",id:"register-for-world",level:3},{value:"Load() / Save()",id:"load-save",level:3},{value:"Unlock System",id:"unlock-system",level:2},{value:"Unlock Types",id:"unlock-types",level:3},{value:"Creatures",id:"creatures",level:4},{value:"Items",id:"items",level:4},{value:"Bosses",id:"bosses",level:4},{value:"Unlock Properties",id:"unlock-properties",level:3},{value:"id",id:"id",level:4},{value:"alias",id:"alias",level:4},{value:"progression_key",id:"progression_key",level:4},{value:"style",id:"style",level:4},{value:"atlas",id:"atlas",level:4},{value:"icon",id:"icon",level:4},{value:"Server Communication",id:"server-communication",level:2},{value:"Progression Endpoint",id:"progression-endpoint",level:3},{value:"Quest Endpoint",id:"quest-endpoint",level:3},{value:"Events",id:"events",level:2},{value:"&quot;community_clientdata_updated&quot;",id:"community_clientdata_updated",level:3},{value:"&quot;community_progression_request_complete&quot;",id:"community_progression_request_complete",level:3},{value:"&quot;community_quest_request_complete&quot;",id:"community_quest_request_complete",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Progression Errors",id:"progression-errors",level:3},{value:"Quest Errors",id:"quest-errors",level:3},{value:"Retry Logic",id:"retry-logic",level:3},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"lava-arena-community-progression",children:"Lava Arena Community Progression"})}),"\n",(0,i.jsx)(s.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Build Version"}),(0,i.jsx)(s.th,{children:"Change Date"}),(0,i.jsx)(s.th,{children:"Change Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676042"}),(0,i.jsx)(s.td,{children:"2025-06-21"}),(0,i.jsx)(s.td,{children:"stable"}),(0,i.jsx)(s.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"lavaarena_communityprogression"})," module manages the community-wide progression system for Lava Arena events. It handles server queries for progression data, tracks unlockable content, manages quest data, and synchronizes progression between different game modes (frontend, client, server)."]}),"\n",(0,i.jsx)(s.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'-- Create community progression instance\nlocal progression = CommunityProgression()\nprogression:RegisterForWorld()\n\n-- Check if content is unlocked\nif progression:IsUnlocked("trails") then\n    -- Trails creature is available\nend\n\n-- Request updated data\nprogression:RequestAllData(false, TheNet:GetUserID())\n'})}),"\n",(0,i.jsx)(s.h2,{id:"constants",children:"Constants"}),"\n",(0,i.jsx)(s.h3,{id:"operation-modes",children:"Operation Modes"}),"\n",(0,i.jsx)(s.h4,{id:"is_frontend",children:"IS_FRONTEND"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Value:"})," ",(0,i.jsx)(s.code,{children:"0"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Frontend mode for main menu and pre-game screens."]}),"\n",(0,i.jsx)(s.h4,{id:"is_client_only",children:"IS_CLIENT_ONLY"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Value:"})," ",(0,i.jsx)(s.code,{children:"1"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Client-only mode for players joining dedicated servers."]}),"\n",(0,i.jsx)(s.h4,{id:"is_dedicated_server",children:"IS_DEDICATED_SERVER"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Value:"})," ",(0,i.jsx)(s.code,{children:"2"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Dedicated server mode handling multiple clients."]}),"\n",(0,i.jsx)(s.h4,{id:"is_client_hosted",children:"IS_CLIENT_HOSTED"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Value:"})," ",(0,i.jsx)(s.code,{children:"3"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Client-hosted mode where one player hosts the game."]}),"\n",(0,i.jsx)(s.h3,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(s.h4,{id:"progression_query_expiry",children:"PROGRESSION_QUERY_EXPIRY"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Value:"})," ",(0,i.jsx)(s.code,{children:"600"})," (10 minutes)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Time in seconds before progression data expires and needs refresh."]}),"\n",(0,i.jsx)(s.h4,{id:"num_retries",children:"NUM_RETRIES"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Value:"})," ",(0,i.jsx)(s.code,{children:"4"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Number of retry attempts for failed server queries."]}),"\n",(0,i.jsx)(s.h4,{id:"final_unlock_data",children:"FINAL_UNLOCK_DATA"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Complete unlock data when all content is available."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Structure:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'{\n    level = 10,\n    percent = 1.0,\n    unlock_order = {\n        "trails", "book_elemental", "boarrior", "lavaarena_firebomb",\n        "lavaarena_armor_hpextraheavy", "lavaarena_armor_hpdamager",\n        "rhinodrill", "lavaarena_heavyblade", "lavaarena_armor_hprecharger",\n        "lavaarena_armor_hppetmastery", "beetletaur"\n    }\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"class-communityprogression",children:"Class: CommunityProgression"}),"\n",(0,i.jsx)(s.h3,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"local progression = CommunityProgression()\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nCreates a new community progression instance with default values."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Initial State:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Mode: ",(0,i.jsx)(s.code,{children:"IS_FRONTEND"})]}),"\n",(0,i.jsx)(s.li,{children:"Progression level: 1"}),"\n",(0,i.jsx)(s.li,{children:"No unlocked content"}),"\n",(0,i.jsx)(s.li,{children:"Empty quest data"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"get-unlock-data",children:"GetUnlockData(id)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nRetrieves unlock data for a specific item or creature."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"id"})," (string): Unlock identifier or alias"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(table): Unlock data containing id, style, atlas, icon, and other properties"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'local trails_data = progression:GetUnlockData("trails")\n-- Returns: {id = "trails", style = "creature", atlas = "images/lavaarena_unlocks.xml", ...}\n'})}),"\n",(0,i.jsx)(s.h3,{id:"is-locked",children:"IsLocked(id) / IsUnlocked(id)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nChecks whether specific content is locked or unlocked."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"id"})," (string): Content identifier"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(boolean): Lock status"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'if progression:IsUnlocked("boarrior") then\n    print("Boarrior boss is available!")\nend\n'})}),"\n",(0,i.jsx)(s.h3,{id:"get-progression",children:"GetProgression()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nGets current community progression status."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["(table): Table with ",(0,i.jsx)(s.code,{children:"level"})," and ",(0,i.jsx)(s.code,{children:"percent"})," fields"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'local progress = progression:GetProgression()\nprint("Level:", progress.level, "Progress:", progress.percent * 100 .. "%")\n'})}),"\n",(0,i.jsx)(s.h3,{id:"get-last-seen-progression",children:"GetLastSeenProgression()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nGets the last seen progression data for comparison."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(table): Previous progression data"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"is-new-unlock",children:"IsNewUnlock(id)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nChecks if an unlock is newly available since last seen progression."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"id"})," (string): Content identifier"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(boolean): True if newly unlocked"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'if progression:IsNewUnlock("rhinodrill") then\n    -- Show unlock notification\nend\n'})}),"\n",(0,i.jsx)(s.h3,{id:"request-progression-data",children:"RequestProgressionData(force, time)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nRequests updated progression data from the server."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"force"})," (boolean): Whether to force refresh regardless of expiry"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"time"})," (number): Timestamp for the request"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"progression:RequestProgressionData(true, os.time())\n"})}),"\n",(0,i.jsx)(s.h3,{id:"request-quest-data",children:"RequestQuestData(force, userid, time)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nRequests quest data for a specific user."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"force"})," (boolean): Whether to force refresh"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"userid"})," (string): User identifier (optional, defaults to current user)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"time"})," (number): Timestamp for the request"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"progression:RequestQuestData(false, TheNet:GetUserID(), os.time())\n"})}),"\n",(0,i.jsx)(s.h3,{id:"request-all-data",children:"RequestAllData(force, userid)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nRequests both progression and quest data simultaneously."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"force"})," (boolean): Whether to force refresh"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"userid"})," (string): User identifier for quest data"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"progression:RequestAllData(false, TheNet:GetUserID())\n"})}),"\n",(0,i.jsx)(s.h3,{id:"is-query-active",children:"IsQueryActive()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nChecks if any server queries are currently active."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(boolean): True if queries are in progress"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"get-current-quest-data",children:"GetCurrentQuestData(userid)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nGets current quest data for a user."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"userid"})," (string): User identifier"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"(table): Quest data including daily and regular quests"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Structure:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'{\n    version = 1,\n    event_day = 5,\n    quest_day = 12,\n    daily_win = {quest = "laq_dailywin", daily = true},\n    daily_match = {quest = "laq_dailymatch", daily = true},\n    basic = {quest = "laq_battlestandards"},\n    challenge = {quest = "laq_nodeath_r3"},\n    special1 = {character = "wilson", quest = "wilson_reviver"},\n    special2 = {character = "willow", quest = "willow_meteor"},\n    daily_expiry = timestamp,\n    quest_expiry = timestamp\n}\n'})}),"\n",(0,i.jsx)(s.h3,{id:"register-for-world",children:"RegisterForWorld()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nRegisters the progression system for the current world context and sets up appropriate event listeners."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"progression:RegisterForWorld()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"load-save",children:"Load() / Save()"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nLoads progression data from persistent storage or saves current data."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"progression:Load()  -- Load on startup\nprogression:Save()  -- Save when data changes\n"})}),"\n",(0,i.jsx)(s.h2,{id:"unlock-system",children:"Unlock System"}),"\n",(0,i.jsx)(s.h3,{id:"unlock-types",children:"Unlock Types"}),"\n",(0,i.jsx)(s.h4,{id:"creatures",children:"Creatures"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Style:"})," ",(0,i.jsx)(s.code,{children:'"creature"'})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Enemy creatures that become available in matches."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"trails"}),": Trail creatures"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"rhinodrill"}),": Rhinoceros drill creatures"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"items",children:"Items"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Style:"})," ",(0,i.jsx)(s.code,{children:'"item"'})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Equipment and consumable items."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"book_elemental"}),": Elemental spellbook"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"lavaarena_firebomb"}),": Fire bomb weapon"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"lavaarena_heavyblade"}),": Heavy blade weapon"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"lavaarena_armor_*"}),": Various armor types"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"bosses",children:"Bosses"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Style:"})," ",(0,i.jsx)(s.code,{children:'"boss"'})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Major boss enemies."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"boarrior"}),": Boar warrior boss"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"beetletaur"}),": Beetle centaur boss"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"unlock-properties",children:"Unlock Properties"}),"\n",(0,i.jsx)(s.h4,{id:"id",children:"id"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"string"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Unique identifier for the unlock."]}),"\n",(0,i.jsx)(s.h4,{id:"alias",children:"alias"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"string"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Alternative identifier (optional)."]}),"\n",(0,i.jsx)(s.h4,{id:"progression_key",children:"progression_key"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"boolean"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Whether this unlock represents a major progression milestone."]}),"\n",(0,i.jsx)(s.h4,{id:"style",children:"style"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"string"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),' Visual category: "creature", "item", or "boss".']}),"\n",(0,i.jsx)(s.h4,{id:"atlas",children:"atlas"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"string"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Texture atlas path for the unlock icon."]}),"\n",(0,i.jsx)(s.h4,{id:"icon",children:"icon"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"string"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Icon texture name within the atlas."]}),"\n",(0,i.jsx)(s.h2,{id:"server-communication",children:"Server Communication"}),"\n",(0,i.jsx)(s.h3,{id:"progression-endpoint",children:"Progression Endpoint"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"URL:"})," ",(0,i.jsx)(s.code,{children:"https://theforge.kleientertainment.com/wins"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Method:"})," GET"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Retrieves community progression data."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Response Format:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "level": 4,\n    "percent": 0.65,\n    "unlock_order": ["trails", "book_elemental", "boarrior"]\n}\n'})}),"\n",(0,i.jsx)(s.h3,{id:"quest-endpoint",children:"Quest Endpoint"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"URL:"})," ",(0,i.jsx)(s.code,{children:"https://theforge.kleientertainment.com/quest?userid={userid}&date={timestamp}"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Method:"})," GET"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Retrieves user-specific quest data."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Response Format:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "version": 1,\n    "event_day": 5,\n    "quest_day": 12,\n    "d_win": "laq_dailywin",\n    "d_match": "laq_dailymatch",\n    "basic": {"quest": "laq_battlestandards"},\n    "challenge": {"quest": "laq_nodeath_r3"},\n    "special1": {"character": "wilson", "quest": "wilson_reviver"},\n    "special2": {"character": "willow", "quest": "willow_meteor"},\n    "daily_expiry": 1640995200,\n    "quest_expiry": 1641081600\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"events",children:"Events"}),"\n",(0,i.jsx)(s.h3,{id:"community_clientdata_updated",children:'"community_clientdata_updated"'}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nFired when client receives updated progression or quest data."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'TheGlobalInstance:ListenForEvent("community_clientdata_updated", function()\n    -- Refresh UI with new data\nend)\n'})}),"\n",(0,i.jsx)(s.h3,{id:"community_progression_request_complete",children:'"community_progression_request_complete"'}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nFired when server completes progression data request."]}),"\n",(0,i.jsx)(s.h3,{id:"community_quest_request_complete",children:'"community_quest_request_complete"'}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Status:"})," stable"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"data.userid"})," (string): User ID for completed quest request"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"}),"\nFired when server completes quest data request."]}),"\n",(0,i.jsx)(s.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(s.h3,{id:"progression-errors",children:"Progression Errors"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Error Codes:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'"Not Set"'}),": Initial state, no data requested"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'"Progression Query Failed: {code}"'}),": Server request failed"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'"Failed to parse progression json"'}),": JSON parsing error"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"quest-errors",children:"Quest Errors"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Error Codes:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'"Quest Query Failed: {code}"'}),": Server request failed"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'"Failed to parse quest json for {userid}"'}),": JSON parsing error"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"retry-logic",children:"Retry Logic"}),"\n",(0,i.jsxs)(s.p,{children:["The system automatically retries failed requests up to ",(0,i.jsx)(s.code,{children:"NUM_RETRIES"})," times before reporting permanent failure."]}),"\n",(0,i.jsx)(s.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena-achievements",children:"Lava Arena Achievements"}),": Character-specific achievement system"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/lavaarena-achievement-quest-defs",children:"Lava Arena Achievement Quest Definitions"}),": Quest-based achievement definitions"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/eventachievements",children:"Event Achievements"}),": General event achievement framework"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"./festivalevents.md",children:"Festival Events"}),": Event activation and management"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>d});var r=n(96540);const i={},l=r.createContext(i);function t(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);