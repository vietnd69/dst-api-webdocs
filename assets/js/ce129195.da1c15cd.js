"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[4438],{2484:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api-vanilla/localization/best-practices","title":"Localization Best Practices","description":"This guide covers best practices for creating high-quality, maintainable localizations for your Don\'t Starve Together mods. Following these guidelines will help ensure your translations are accurate, consistent, and user-friendly.","source":"@site/docs/api-vanilla/localization/best-practices.md","sourceDirName":"api-vanilla/localization","slug":"/api-vanilla/localization/best-practices","permalink":"/dst-api-webdocs/docs/api-vanilla/localization/best-practices","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"best-practices","title":"Localization Best Practices","sidebar_position":5,"last_updated":"2023-07-06T00:00:00.000Z","version":619045},"sidebar":"docs","previous":{"title":"Font Handling for Different Languages","permalink":"/dst-api-webdocs/docs/api-vanilla/localization/font-handling"},"next":{"title":"Testing Localized Content","permalink":"/dst-api-webdocs/docs/api-vanilla/localization/testing-localization"}}');var a=s(4848),t=s(8453);const r={id:"best-practices",title:"Localization Best Practices",sidebar_position:5,last_updated:new Date("2023-07-06T00:00:00.000Z"),version:619045},l="Localization Best Practices",o={},c=[{value:"Planning for Localization",id:"planning-for-localization",level:2},{value:"Start Early",id:"start-early",level:3},{value:"Choose Target Languages Strategically",id:"choose-target-languages-strategically",level:3},{value:"Writing for Translation",id:"writing-for-translation",level:2},{value:"Keep Text Simple and Clear",id:"keep-text-simple-and-clear",level:3},{value:"Example: Writing Translation-Friendly Text",id:"example-writing-translation-friendly-text",level:3},{value:"Handle Variables Carefully",id:"handle-variables-carefully",level:3},{value:"Avoid Concatenation",id:"avoid-concatenation",level:3},{value:"Handle Plurals Properly",id:"handle-plurals-properly",level:3},{value:"Working with Translators",id:"working-with-translators",level:2},{value:"Provide Clear Context",id:"provide-clear-context",level:3},{value:"Create a Translation Guide",id:"create-a-translation-guide",level:3},{value:"Establish a Review Process",id:"establish-a-review-process",level:3},{value:"Technical Implementation",id:"technical-implementation",level:2},{value:"Use a Modular Approach",id:"use-a-modular-approach",level:3},{value:"Create Maintainable String Tables",id:"create-maintainable-string-tables",level:3},{value:"Handle Special Cases",id:"handle-special-cases",level:3},{value:"Testing and Quality Assurance",id:"testing-and-quality-assurance",level:2},{value:"Automated Testing",id:"automated-testing",level:3},{value:"Visual Testing",id:"visual-testing",level:3},{value:"Common Issues to Watch For",id:"common-issues-to-watch-for",level:3},{value:"Maintenance and Updates",id:"maintenance-and-updates",level:2},{value:"Version Control for Translations",id:"version-control-for-translations",level:3},{value:"Community Contributions",id:"community-contributions",level:3},{value:"Regular Updates",id:"regular-updates",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"localization-best-practices",children:"Localization Best Practices"})}),"\n",(0,a.jsx)(e.p,{children:"This guide covers best practices for creating high-quality, maintainable localizations for your Don't Starve Together mods. Following these guidelines will help ensure your translations are accurate, consistent, and user-friendly."}),"\n",(0,a.jsx)(e.h2,{id:"planning-for-localization",children:"Planning for Localization"}),"\n",(0,a.jsx)(e.h3,{id:"start-early",children:"Start Early"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Design with localization in mind"})," from the beginning of your mod development"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Separate text from code"})," to make translations easier to manage"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Create a localization plan"})," identifying which languages to support and how to obtain translations"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"choose-target-languages-strategically",children:"Choose Target Languages Strategically"}),"\n",(0,a.jsx)(e.p,{children:"Consider these factors when selecting languages to support:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Player demographics"}),": Which languages are most common among DST players?"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Mod complexity"}),": More text-heavy mods require more translation effort"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Available resources"}),": Do you have access to native speakers for quality control?"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Common languages"}),": English, Simplified Chinese, Russian, Spanish, and Portuguese cover a large portion of the player base"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"writing-for-translation",children:"Writing for Translation"}),"\n",(0,a.jsx)(e.h3,{id:"keep-text-simple-and-clear",children:"Keep Text Simple and Clear"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Use simple sentence structures"})," that are easier to translate"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Avoid idioms, slang, and cultural references"})," that may not translate well"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Be consistent with terminology"})," throughout your mod"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Provide context for translators"})," about where and how text is used"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"example-writing-translation-friendly-text",children:"Example: Writing Translation-Friendly Text"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Difficult to translate\nSTRINGS.MY_MOD.UI.TOOLTIP = "Hit the road to kick off your adventure!"\n\n-- Better for translation\nSTRINGS.MY_MOD.UI.TOOLTIP = "Start your adventure by traveling."\n'})}),"\n",(0,a.jsx)(e.h3,{id:"handle-variables-carefully",children:"Handle Variables Carefully"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Use named placeholders"})," instead of positional ones"]}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Provide context about what variables represent"})}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Consider word order differences"})," between languages"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Problematic for translation (order may differ in other languages)\nlocal message = string.format("Found %d %s in %s", count, item_name, location)\n\n-- Better approach with named variables\nSTRINGS.MY_MOD.MESSAGES.ITEM_FOUND = "Found {count} {item} in {location}"\n\nlocal message = FormatString(STRINGS.MY_MOD.MESSAGES.ITEM_FOUND, {\n    count = count,\n    item = item_name,\n    location = location\n})\n'})}),"\n",(0,a.jsx)(e.h3,{id:"avoid-concatenation",children:"Avoid Concatenation"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Never build sentences by concatenating strings"})}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Use complete sentences with placeholders"})," instead"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Problematic (impossible to translate properly)\nlocal message = STRINGS.MY_MOD.PREFIXES.FOUND .. count .. " " .. item_name\n\n-- Better approach\nlocal message = FormatString(STRINGS.MY_MOD.MESSAGES.FOUND_ITEMS, {count = count, item = item_name})\n'})}),"\n",(0,a.jsx)(e.h3,{id:"handle-plurals-properly",children:"Handle Plurals Properly"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Create separate strings for singular and plural forms"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Consider that some languages have more than two plural forms"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Basic approach\nif count == 1 then\n    message = FormatString(STRINGS.MY_MOD.MESSAGES.FOUND_SINGLE, {item = item_name})\nelse\n    message = FormatString(STRINGS.MY_MOD.MESSAGES.FOUND_MULTIPLE, {count = count, item = item_name})\nend\n\n-- More comprehensive approach for languages with complex plural rules\nlocal function GetPluralForm(count, language)\n    if language == "en" then\n        return count == 1 and "one" or "other"\n    elseif language == "ru" then\n        -- Russian has more complex plural rules\n        if count % 10 == 1 and count % 100 ~= 11 then\n            return "one"\n        elseif count % 10 >= 2 and count % 10 <= 4 and (count % 100 < 10 or count % 100 >= 20) then\n            return "few"\n        else\n            return "many"\n        end\n    end\n    -- Default\n    return "other"\nend\n\nlocal plural_form = GetPluralForm(count, GLOBAL.LanguageTranslator.defaultlanguage)\nlocal message = FormatString(STRINGS.MY_MOD.MESSAGES["FOUND_" .. string.upper(plural_form)], \n                            {count = count, item = item_name})\n'})}),"\n",(0,a.jsx)(e.h2,{id:"working-with-translators",children:"Working with Translators"}),"\n",(0,a.jsx)(e.h3,{id:"provide-clear-context",children:"Provide Clear Context"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Add comments in string tables"})," explaining where and how text is used"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Provide screenshots"})," of UI elements showing text in context"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Explain game-specific terminology"})," that might be unfamiliar"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Good context for translators\n-- CONTEXT: Shown when player discovers a new recipe. {item} is the recipe name.\nSTRINGS.MY_MOD.MESSAGES.RECIPE_DISCOVERED = "New recipe discovered: {item}"\n\n-- CONTEXT: Button text for crafting menu, should be short (max 10 chars)\nSTRINGS.MY_MOD.UI.BUTTONS.CRAFT = "Craft"\n'})}),"\n",(0,a.jsx)(e.h3,{id:"create-a-translation-guide",children:"Create a Translation Guide"}),"\n",(0,a.jsx)(e.p,{children:"Provide translators with:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Glossary of terms"})," specific to your mod"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Style guide"})," for tone and voice"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Character limits"})," for UI elements"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Variable explanations"})," and how they're used"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Screenshots or mockups"})," showing text in context"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"establish-a-review-process",children:"Establish a Review Process"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Have native speakers review translations"})," when possible"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Test translations in-game"})," to catch context issues"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Create a feedback channel"})," for players to report translation issues"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,a.jsx)(e.h3,{id:"use-a-modular-approach",children:"Use a Modular Approach"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Separate string tables by language and category"})}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Use a consistent loading system"})," for all languages"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Implement fallbacks"})," for missing translations"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"create-maintainable-string-tables",children:"Create Maintainable String Tables"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Use descriptive, hierarchical keys"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Group related strings together"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Comment string tables thoroughly"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'STRINGS.MY_MOD = {\n    -- Item names and descriptions\n    ITEMS = {\n        -- CONTEXT: A magical sword that glows\n        MAGIC_SWORD = {\n            NAME = "Magic Sword",\n            DESCRIPTION = "A sword imbued with magical energy.",\n        },\n        \n        -- CONTEXT: A staff that shoots fireballs\n        FIRE_STAFF = {\n            NAME = "Fire Staff",\n            DESCRIPTION = "Launches fireballs at enemies.",\n        },\n    },\n    \n    -- UI elements\n    UI = {\n        -- CONTEXT: Main menu buttons\n        BUTTONS = {\n            -- CONTEXT: Opens crafting menu\n            CRAFT = "Craft",\n            -- CONTEXT: Opens inventory\n            INVENTORY = "Inventory",\n        },\n    },\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"handle-special-cases",children:"Handle Special Cases"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Create special handling for languages with unique requirements"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Implement custom formatting for dates, numbers, and currencies"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'local function FormatNumber(number)\n    local language = GLOBAL.LanguageTranslator.defaultlanguage\n    \n    if language == "en" then\n        -- 1,234.56\n        return string.format("%s", number):gsub("^(-?)(%d+)(%d%d%d)", \'%1%2,%3\')\n    elseif language == "de" or language == "fr" then\n        -- 1.234,56\n        return string.format("%s", number):gsub("^(-?)(%d+)(%d%d%d)", \'%1%2.%3\'):gsub("%.", ",")\n    end\n    \n    -- Default format\n    return tostring(number)\nend\n'})}),"\n",(0,a.jsx)(e.h2,{id:"testing-and-quality-assurance",children:"Testing and Quality Assurance"}),"\n",(0,a.jsx)(e.h3,{id:"automated-testing",children:"Automated Testing"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Create scripts to verify all strings are translated"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Check for missing or untranslated strings"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Validate string formatting and placeholders"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'local function ValidateTranslations(base_strings, translated_strings, language)\n    local missing = {}\n    \n    -- Check for missing translations\n    for key, value in pairs(base_strings) do\n        if type(value) == "table" then\n            if translated_strings[key] == nil then\n                table.insert(missing, key)\n            else\n                -- Recursively check nested tables\n                ValidateTranslations(base_strings[key], translated_strings[key], language)\n            end\n        else\n            if translated_strings[key] == nil or translated_strings[key] == value then\n                table.insert(missing, key)\n            end\n        end\n    end\n    \n    if #missing > 0 then\n        print("Missing translations for " .. language .. ":")\n        for _, key in ipairs(missing) do\n            print("  - " .. key)\n        end\n    end\nend\n\n-- Usage\nValidateTranslations(STRINGS.MY_MOD, TRANSLATIONS.ZH.MY_MOD, "zh")\n'})}),"\n",(0,a.jsx)(e.h3,{id:"visual-testing",children:"Visual Testing"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Check text rendering in all supported languages"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Verify UI layout with different text lengths"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Test with different font sizes and screen resolutions"})}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"common-issues-to-watch-for",children:"Common Issues to Watch For"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Text overflow"}),": Translations may be longer than the original text"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Font rendering"}),": Some characters may not display correctly"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Line breaks"}),": Different languages may require different line break rules"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Right-to-left issues"}),": For languages like Arabic and Hebrew"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Special characters"}),": Ensure proper encoding and font support"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"maintenance-and-updates",children:"Maintenance and Updates"}),"\n",(0,a.jsx)(e.h3,{id:"version-control-for-translations",children:"Version Control for Translations"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Track changes to string tables"})," between versions"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Clearly mark new strings"})," that need translation"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Maintain a changelog"})," specifically for localization"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Version 1.0 strings\nSTRINGS.MY_MOD.ITEMS.SWORD.NAME = "Sword"\n\n-- Version 1.1 strings\n-- New in v1.1\nSTRINGS.MY_MOD.ITEMS.STAFF.NAME = "Staff"\n\n-- Changed in v1.1 (was "Sword")\nSTRINGS.MY_MOD.ITEMS.SWORD.NAME = "Magic Sword"\n'})}),"\n",(0,a.jsx)(e.h3,{id:"community-contributions",children:"Community Contributions"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Create clear guidelines"})," for community translators"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Set up a platform"})," for submitting and reviewing translations"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Credit all translators"})," in your mod documentation"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"regular-updates",children:"Regular Updates"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Update translations with each mod update"})}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Communicate with translators"})," about upcoming changes"]}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Prioritize fixing reported translation issues"})}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(e.p,{children:"After implementing localization best practices, explore:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/localization/testing-localization",children:"Testing Localized Content"})," - For thorough quality assurance"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"By following these best practices, you can create high-quality localizations that make your mod accessible and enjoyable for players around the world, significantly expanding your mod's reach and impact in the Don't Starve Together community."})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>l});var i=s(6540);const a={},t=i.createContext(a);function r(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);