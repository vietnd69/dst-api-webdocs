"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[4192],{5888:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api-vanilla/world/seasons","title":"Seasons API","description":"Last Update: 2023-07-06","source":"@site/docs/api-vanilla/world/seasons.md","sourceDirName":"api-vanilla/world","slug":"/api-vanilla/world/seasons","permalink":"/dst-api-webdocs/docs/api-vanilla/world/seasons","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"seasons","title":"Seasons API","sidebar_position":3,"last_updated":"2023-07-06T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Map API","permalink":"/dst-api-webdocs/docs/api-vanilla/world/map"},"next":{"title":"Network and World Synchronization","permalink":"/dst-api-webdocs/docs/api-vanilla/world/network"}}');var o=s(4848),t=s(8453);const i={id:"seasons",title:"Seasons API",sidebar_position:3,last_updated:new Date("2023-07-06T00:00:00.000Z")},r="Seasons API",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Season Types",id:"season-types",level:2},{value:"Season Modes",id:"season-modes",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Season Management",id:"season-management",level:3},{value:"Season Configuration",id:"season-configuration",level:3},{value:"Events",id:"events",level:2},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Last Update: 2023-07-06"})}),"\n",(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"seasons-api",children:"Seasons API"})}),"\n",(0,o.jsx)(n.p,{children:"Controls for seasonal mechanics and transitions in the game world."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The Seasons API manages the game's seasonal cycle, including transitions, durations, and associated environmental effects. It controls day/night cycles, temperature changes, and seasonal events."}),"\n",(0,o.jsx)(n.h2,{id:"season-types",children:"Season Types"}),"\n",(0,o.jsx)(n.p,{children:"Don't Starve Together has four main seasons, each with unique characteristics:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Autumn"}),": Moderate temperature and foraging conditions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Winter"}),": Cold temperatures, snow, and limited resource availability"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Spring"}),": Frequent rain, abundant resources, and increased plant growth"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Summer"}),": Hot temperatures, wildfires, and drought conditions"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"season-modes",children:"Season Modes"}),"\n",(0,o.jsx)(n.p,{children:"The seasons component supports three operational modes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Season mode names\nlocal MODE_NAMES = {\n    "cycle",   -- Normal seasonal cycle\n    "endless", -- Stays in one season indefinitely\n    "always",  -- Permanent single season\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,o.jsx)(n.h3,{id:"season-management",children:"Season Management"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Get current season\nlocal current_season = TheWorld.components.seasons:GetSeason()\n\n-- Get days remaining in current season\nlocal days_remaining = TheWorld.components.seasons:GetDaysLeftInSeason()\n\n-- Get seasonal parameters\nlocal is_endless = TheWorld.components.seasons:IsEndless()\nlocal progress = TheWorld.components.seasons:GetSeasonProgress()\n\n-- Set season (requires admin privileges)\nTheWorld.components.seasons:SetSeason("winter")\n\n-- Transition to next season (requires admin privileges)\nTheWorld.components.seasons:Advance()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"season-configuration",children:"Season Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- Configure season lengths\nTheWorld.components.seasons:SetSeasonLengths({\n    autumn = 20,\n    winter = 15,\n    spring = 20,\n    summer = 15,\n})\n\n-- Set season segment modifiers (day/dusk/night ratios)\nTheWorld.components.seasons:SetSeasonSegmentModifier({\n    day = 1.0,\n    dusk = 1.0,\n    night = 1.0,\n})\n"})}),"\n",(0,o.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,o.jsx)(n.p,{children:"The seasons component triggers several events that other components can listen for:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"seasontick"}),": Fired regularly with current season information"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"seasonchange"}),": Fired when the season changes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ms_setclocksegs"}),": Adjusts day/dusk/night segment lengths based on season"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Temperature"}),": Controls ambient temperature based on season"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Precipitation"}),": Manages rain and snow patterns by season"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"WorldState"}),": Tracks global season-related state variables"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var a=s(6540);const o={},t=a.createContext(o);function i(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);