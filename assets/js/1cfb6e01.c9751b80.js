"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[7825],{7228:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api-vanilla/components/hunger","title":"Hunger","description":"The Hunger component manages an entity\'s hunger state, including maximum hunger, hunger rate, and starvation effects.","source":"@site/docs/api-vanilla/components/hunger.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/hunger","permalink":"/dst-api-webdocs/docs/api-vanilla/components/hunger","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"hunger","title":"Hunger","sidebar_position":7,"version":619045},"sidebar":"docs","previous":{"title":"Temperature","permalink":"/dst-api-webdocs/docs/api-vanilla/components/temperature"},"next":{"title":"Sanity","permalink":"/dst-api-webdocs/docs/api-vanilla/components/sanity"}}');var s=t(4848),i=t(8453);const o={id:"hunger",title:"Hunger",sidebar_position:7,version:619045},a="Hunger Component",l={},c=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"SetMax",id:"setmax",level:3},{value:"SetRate",id:"setrate",level:3},{value:"DoDelta",id:"dodelta",level:3},{value:"SetPercent",id:"setpercent",level:3},{value:"GetPercent",id:"getpercent",level:3},{value:"IsTooHungry",id:"istoohungry",level:3},{value:"Pause/Resume",id:"pauseresume",level:3},{value:"Events",id:"events",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"hunger-component",children:"Hunger Component"})}),"\n",(0,s.jsx)(e.p,{children:"The Hunger component manages an entity's hunger state, including maximum hunger, hunger rate, and starvation effects."}),"\n",(0,s.jsx)(e.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Add a hunger component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("hunger")\n\n-- Configure the hunger component\nlocal hunger = entity.components.hunger\nhunger:SetMax(150)\nhunger:SetRate(TUNING.WILSON_HUNGER_RATE)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Property"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"current"})}),(0,s.jsx)(e.td,{children:"Number"}),(0,s.jsx)(e.td,{children:"Current hunger value"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"max"})}),(0,s.jsx)(e.td,{children:"Number"}),(0,s.jsx)(e.td,{children:"Maximum hunger value"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"rate"})}),(0,s.jsx)(e.td,{children:"Number"}),(0,s.jsx)(e.td,{children:"Rate at which hunger decreases over time"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"hungerrate"})}),(0,s.jsx)(e.td,{children:"Number"}),(0,s.jsx)(e.td,{children:"Multiplier for hunger rate"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"burning"})}),(0,s.jsx)(e.td,{children:"Boolean"}),(0,s.jsx)(e.td,{children:"Whether hunger is currently being consumed"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,s.jsx)(e.h3,{id:"setmax",children:"SetMax"}),"\n",(0,s.jsx)(e.p,{children:"Sets the maximum hunger value for the entity."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Set maximum hunger capacity\nhunger:SetMax(200)\n\n-- Example with a custom character with higher hunger capacity\nfunction MakeHungryCharacter()\n    local inst = CreateEntity()\n    \n    -- Add required components\n    inst:AddComponent("hunger")\n    \n    -- Give the character a larger hunger capacity\n    inst.components.hunger:SetMax(200) -- 200 instead of default 150\n    \n    return inst\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"setrate",children:"SetRate"}),"\n",(0,s.jsx)(e.p,{children:"Sets the rate at which hunger decreases over time."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Set standard hunger rate\nhunger:SetRate(1.5)\n\n-- Example with conditional hunger rate\nfunction ConfigureHungerRate(inst)\n    local hunger = inst.components.hunger\n    \n    -- Make hunger deplete faster during winter\n    inst:WatchWorldState("iswinter", function(inst, iswinter) \n        if iswinter then\n            hunger:SetRate(TUNING.WILSON_HUNGER_RATE * 1.5) -- 50% faster in winter\n        else\n            hunger:SetRate(TUNING.WILSON_HUNGER_RATE)\n        end\n    end)\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"dodelta",children:"DoDelta"}),"\n",(0,s.jsx)(e.p,{children:"Adds or removes hunger points."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Add 10 hunger points\nhunger:DoDelta(10)\n\n-- Remove 10 hunger points\nhunger:DoDelta(-10)\n\n-- Example of food consumption\nfunction OnEatFood(inst, food)\n    if inst.components.hunger ~= nil and food.components.edible ~= nil then\n        -- Apply the food\'s hunger value\n        inst.components.hunger:DoDelta(food.components.edible:GetHunger())\n        \n        -- Display a custom message based on hunger level\n        if inst.components.hunger:GetPercent() < 0.25 then\n            if inst.components.talker then\n                inst.components.talker:Say("Still hungry...")\n            end\n        end\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"setpercent",children:"SetPercent"}),"\n",(0,s.jsx)(e.p,{children:"Sets hunger as a percentage of maximum (0-1)."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Set to 50% of maximum hunger\nhunger:SetPercent(0.5)\n\n-- Example of setting initial hunger on world start\nfunction SetupPlayerHunger(player, difficulty)\n    if player.components.hunger ~= nil then\n        if difficulty == "easy" then\n            player.components.hunger:SetPercent(1.0) -- Full hunger\n        elseif difficulty == "normal" then\n            player.components.hunger:SetPercent(0.75) -- 75% hunger\n        elseif difficulty == "hard" then\n            player.components.hunger:SetPercent(0.5) -- 50% hunger\n        end\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"getpercent",children:"GetPercent"}),"\n",(0,s.jsx)(e.p,{children:"Returns the current hunger as a percentage of maximum (0-1)."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:"-- Get current hunger percentage\nlocal hunger_percent = hunger:GetPercent()\n\n-- Example of using hunger percentage to affect other components\nfunction UpdateStaminaBasedOnHunger(inst)\n    if inst.components.hunger ~= nil and inst.components.stamina ~= nil then\n        local hunger_percent = inst.components.hunger:GetPercent()\n        \n        -- Stamina regeneration slows when hungry\n        local stamina_regen = TUNING.STAMINA_REGEN * (0.5 + 0.5 * hunger_percent)\n        inst.components.stamina:SetRegenRate(stamina_regen)\n    end\nend\n"})}),"\n",(0,s.jsx)(e.h3,{id:"istoohungry",children:"IsTooHungry"}),"\n",(0,s.jsx)(e.p,{children:"Checks if hunger is below a given threshold."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Check if too hungry to perform an action\nlocal is_too_hungry = hunger:IsTooHungry() \n\n-- Example of hunger affecting actions\nfunction CanCastSpell(inst)\n    if inst.components.hunger ~= nil and inst.components.hunger:IsTooHungry() then\n        if inst.components.talker ~= nil then\n            inst.components.talker:Say("I\'m too hungry to focus...")\n        end\n        return false\n    end\n    return true\nend\n'})}),"\n",(0,s.jsx)(e.h3,{id:"pauseresume",children:"Pause/Resume"}),"\n",(0,s.jsx)(e.p,{children:"Pauses or resumes hunger depletion."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Pause hunger depletion\nhunger:Pause()\n\n-- Resume hunger depletion\nhunger:Resume()\n\n-- Example of pausing hunger when in a special area\nfunction OnEnterMagicSanctuary(inst)\n    if inst.components.hunger ~= nil then\n        inst.components.hunger:Pause()\n        if inst.components.talker ~= nil then\n            inst.components.talker:Say("I don\'t feel hungry here...")\n        end\n    end\nend\n\nfunction OnExitMagicSanctuary(inst)\n    if inst.components.hunger ~= nil then\n        inst.components.hunger:Resume()\n    end\nend\n'})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Related functions"}),": When hunger drops to zero, the component typically calls the ",(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/health",children:"Health Component's"})," ",(0,s.jsx)(e.code,{children:"DoDelta()"})," method to apply starvation damage. Food consumption through the ",(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/eater",children:"Eater Component"})," triggers ",(0,s.jsx)(e.code,{children:"DoDelta()"})," with positive values to restore hunger. Hunger levels may influence ",(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/sanity",children:"Sanity Component"})," drain rates and can affect how quickly an entity gets cold via the ",(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/temperature",children:"Temperature Component"}),"."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"events",children:"Events"}),"\n",(0,s.jsx)(e.p,{children:"The Hunger component triggers these events:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"hungerdelta"})," - When hunger value changes"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"startstarving"})," - When entity starts starving"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"stopstarving"})," - When entity stops starving"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Example of handling hunger events\nfunction SetupHungerEvents(inst)\n    -- React to hunger changes\n    inst:ListenForEvent("hungerdelta", function(inst, data)\n        -- data.oldpercent and data.newpercent contain the before/after values\n        if data.newpercent < 0.25 and data.oldpercent >= 0.25 then\n            -- Hunger just dropped below 25%\n            if inst.components.talker ~= nil then\n                inst.components.talker:Say("My stomach is growling...")\n            end\n        end\n    end)\n    \n    -- React to starvation state\n    inst:ListenForEvent("startstarving", function(inst)\n        -- Apply movement speed penalty when starving\n        if inst.components.locomotor ~= nil then\n            inst.components.locomotor:SetExternalSpeedMultiplier(inst, "hunger_penalty", 0.7)\n        end\n    end)\n    \n    inst:ListenForEvent("stopstarving", function(inst)\n        -- Remove movement speed penalty\n        if inst.components.locomotor ~= nil then\n            inst.components.locomotor:RemoveExternalSpeedMultiplier(inst, "hunger_penalty")\n        end\n    end)\nend\n'})}),"\n",(0,s.jsx)(e.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,s.jsx)(e.p,{children:"The Hunger component often works with:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Health"})," - For starvation damage"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Eater"})," - For consuming food to restore hunger"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Temperature"})," - Hunger can affect temperature management"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Example of Hunger integration with Health for starvation\nfunction SetupStarvationDamage(inst)\n    -- Configure starvation damage\n    if inst.components.hunger ~= nil and inst.components.health ~= nil then\n        inst.components.hunger.onStarving = function(inst)\n            -- Apply damage when starving\n            inst.components.health:DoDelta(-TUNING.STARVE_DAMAGE)\n            \n            -- Play hunger sound\n            inst.SoundEmitter:PlaySound("dontstarve/wilson/hungry")\n        end\n    end\nend\n\n-- Example of Hunger integration with Temperature\nfunction SetupHungerTemperatureEffect(inst)\n    if inst.components.hunger ~= nil and inst.components.temperature ~= nil then\n        -- Add periodic check for hunger affecting temperature\n        inst:DoPeriodicTask(1, function(inst)\n            local hunger_percent = inst.components.hunger:GetPercent()\n            \n            -- Get colder faster when hungry\n            local temp_modifier = math.min(1, 0.5 + hunger_percent * 0.5)\n            inst.components.temperature.inherentinsulation = TUNING.INSULATION_SMALL * temp_modifier\n        end)\n    end\nend\n'})}),"\n",(0,s.jsx)(e.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/health",children:"Health Component"})," - For starvation damage"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/eater",children:"Eater Component"})," - For consuming food to restore hunger"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/edible",children:"Edible Component"})," - For food properties that affect hunger"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/temperature",children:"Temperature Component"})," - For hunger effects on temperature"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/sanity",children:"Sanity Component"})," - For another vital stat that works similarly"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);