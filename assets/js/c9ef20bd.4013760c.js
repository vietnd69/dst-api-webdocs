"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[25582],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(96540);const r={},c=i.createContext(r);function l(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(c.Provider,{value:n},e.children)}},43233:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/utilities/vec3util","title":"Vec3Util","description":"Utility functions for 3D vector operations without object instantiation","source":"@site/docs/game-scripts/core-systems/fundamentals/utilities/vec3util.md","sourceDirName":"game-scripts/core-systems/fundamentals/utilities","slug":"/game-scripts/core-systems/fundamentals/utilities/vec3util","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/vec3util","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"vec3util","title":"Vec3Util","description":"Utility functions for 3D vector operations without object instantiation","sidebar_position":6,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Utility Functions","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/util"},"next":{"title":"Vector3","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/vector3"}}');var r=s(74848),c=s(28453);const l={id:"vec3util",title:"Vec3Util",description:"Utility functions for 3D vector operations without object instantiation",sidebar_position:6,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},t="Vec3Util",o={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Functions",id:"functions",level:2},{value:"Vec3Util_Add(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)",id:"vec3util-add",level:3},{value:"Vec3Util_Sub(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)",id:"vec3util-sub",level:3},{value:"Vec3Util_Scale(p1_x, p1_y, p1_z, scale)",id:"vec3util-scale",level:3},{value:"Vec3Util_LengthSq(p1_x, p1_y, p1_z)",id:"vec3util-lengthsq",level:3},{value:"Vec3Util_Length(p1_x, p1_y, p1_z)",id:"vec3util-length",level:3},{value:"Vec3Util_DistSq(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)",id:"vec3util-distsq",level:3},{value:"Vec3Util_Dist(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)",id:"vec3util-dist",level:3},{value:"Vec3Util_Dot(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)",id:"vec3util-dot",level:3},{value:"Vec3Util_Lerp(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z, percent)",id:"vec3util-lerp",level:3},{value:"Vec3Util_Normalize(p1_x, p1_y, p1_z)",id:"vec3util-normalize",level:3},{value:"Vec3Util_NormalAndLength(p1_x, p1_y, p1_z)",id:"vec3util-normalandlength",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Distance Checking",id:"distance-checking",level:3},{value:"Direction Calculation",id:"direction-calculation",level:3},{value:"Interpolation Animation",id:"interpolation-animation",level:3},{value:"Related Modules",id:"related-modules",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"vec3util",children:"Vec3Util"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"vec3util.lua"})," module provides high-performance utility functions for 3D vector operations. These functions operate directly on coordinate parameters (x, y, z) without requiring object instantiation, making them ideal for performance-critical calculations where object creation overhead should be avoided."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Basic vector operations\nlocal x1, y1, z1 = 1, 2, 3\nlocal x2, y2, z2 = 4, 5, 6\n\n-- Add two vectors\nlocal result_x, result_y, result_z = Vec3Util_Add(x1, y1, z1, x2, y2, z2)\n-- result: 5, 7, 9\n\n-- Calculate distance between points\nlocal distance = Vec3Util_Dist(x1, y1, z1, x2, y2, z2)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-add",children:"Vec3Util_Add(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nAdds two 3D vectors component-wise."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_x"})," (number): X component of second vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_y"})," (number): Y component of second vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_z"})," (number): Z component of second vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number, number, number): The sum vector components (x, y, z)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local x, y, z = Vec3Util_Add(1, 2, 3, 4, 5, 6)\n-- Result: x=5, y=7, z=9\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-sub",children:"Vec3Util_Sub(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSubtracts the second 3D vector from the first vector component-wise."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_x"})," (number): X component of second vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_y"})," (number): Y component of second vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_z"})," (number): Z component of second vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number, number, number): The difference vector components (x, y, z)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local x, y, z = Vec3Util_Sub(5, 7, 9, 1, 2, 3)\n-- Result: x=4, y=5, z=6\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-scale",children:"Vec3Util_Scale(p1_x, p1_y, p1_z, scale)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nScales a 3D vector by a scalar value."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scale"})," (number): Scalar multiplier"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number, number, number): The scaled vector components (x, y, z)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local x, y, z = Vec3Util_Scale(1, 2, 3, 2.5)\n-- Result: x=2.5, y=5, z=7.5\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-lengthsq",children:"Vec3Util_LengthSq(p1_x, p1_y, p1_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCalculates the squared length (magnitude) of a 3D vector. This is more efficient than calculating the actual length when comparing distances or when the exact length is not needed."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): The squared length of the vector"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local lengthSq = Vec3Util_LengthSq(3, 4, 5)\n-- Result: 50 (3\xb2 + 4\xb2 + 5\xb2 = 9 + 16 + 25 = 50)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-length",children:"Vec3Util_Length(p1_x, p1_y, p1_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCalculates the length (magnitude) of a 3D vector."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): The length of the vector"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local length = Vec3Util_Length(3, 4, 5)\n-- Result: 7.071... (\u221a50)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-distsq",children:"Vec3Util_DistSq(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCalculates the squared distance between two 3D points. More efficient than calculating actual distance for comparison purposes."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X coordinate of first point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y coordinate of first point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z coordinate of first point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_x"})," (number): X coordinate of second point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_y"})," (number): Y coordinate of second point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_z"})," (number): Z coordinate of second point"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): The squared distance between the points"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local distSq = Vec3Util_DistSq(0, 0, 0, 3, 4, 5)\n-- Result: 50 (same as length squared in this case)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-dist",children:"Vec3Util_Dist(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCalculates the actual distance between two 3D points."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X coordinate of first point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y coordinate of first point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z coordinate of first point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_x"})," (number): X coordinate of second point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_y"})," (number): Y coordinate of second point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_z"})," (number): Z coordinate of second point"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): The distance between the points"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local distance = Vec3Util_Dist(0, 0, 0, 3, 4, 5)\n-- Result: 7.071... (\u221a50)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-dot",children:"Vec3Util_Dot(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCalculates the dot product of two 3D vectors. The dot product is useful for determining the angle between vectors and for projection calculations."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of first vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_x"})," (number): X component of second vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_y"})," (number): Y component of second vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_z"})," (number): Z component of second vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): The dot product of the two vectors"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local dot = Vec3Util_Dot(1, 0, 0, 0, 1, 0)\n-- Result: 0 (perpendicular vectors)\n\nlocal dot2 = Vec3Util_Dot(1, 2, 3, 4, 5, 6)\n-- Result: 32 (1*4 + 2*5 + 3*6 = 4 + 10 + 18 = 32)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-lerp",children:"Vec3Util_Lerp(p1_x, p1_y, p1_z, p2_x, p2_y, p2_z, percent)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nPerforms linear interpolation between two 3D vectors."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of start vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of start vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of start vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_x"})," (number): X component of end vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_y"})," (number): Y component of end vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p2_z"})," (number): Z component of end vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"percent"})," (number): Interpolation factor (0.0 to 1.0)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number, number, number): The interpolated vector components (x, y, z)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Interpolate halfway between two points\nlocal x, y, z = Vec3Util_Lerp(0, 0, 0, 10, 20, 30, 0.5)\n-- Result: x=5, y=10, z=15\n\n-- Get the start point (percent = 0)\nlocal x2, y2, z2 = Vec3Util_Lerp(0, 0, 0, 10, 20, 30, 0.0)\n-- Result: x2=0, y2=0, z2=0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-normalize",children:"Vec3Util_Normalize(p1_x, p1_y, p1_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nNormalizes a 3D vector to unit length (length = 1). The resulting vector points in the same direction but has a magnitude of 1."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number, number, number): The normalized vector components (x, y, z)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local x, y, z = Vec3Util_Normalize(3, 4, 5)\n-- Result: x\u22480.424, y\u22480.566, z\u22480.707 (unit vector in same direction)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vec3util-normalandlength",children:"Vec3Util_NormalAndLength(p1_x, p1_y, p1_z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nNormalizes a 3D vector and returns both the normalized vector and its original length. This is more efficient than calling normalize and length separately."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_x"})," (number): X component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_y"})," (number): Y component of vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p1_z"})," (number): Z component of vector"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number, number, number, number): The normalized vector components (x, y, z) and the original length"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local norm_x, norm_y, norm_z, length = Vec3Util_NormalAndLength(3, 4, 5)\n-- Result: norm_x\u22480.424, norm_y\u22480.566, norm_z\u22480.707, length\u22487.071\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsx)(n.p,{children:"These utility functions are designed for high-performance scenarios where:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Object creation overhead needs to be minimized"}),"\n",(0,r.jsx)(n.li,{children:"Large numbers of vector calculations are performed"}),"\n",(0,r.jsx)(n.li,{children:"Memory allocation should be reduced"}),"\n",(0,r.jsx)(n.li,{children:"Function call overhead should be minimal"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For general-purpose vector operations where performance is less critical, consider using the ",(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/vector3",children:"Vector3 class"})," which provides a more object-oriented interface."]}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"distance-checking",children:"Distance Checking"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Check if two points are within a certain distance\nlocal maxDistSq = MAX_RANGE * MAX_RANGE\nif Vec3Util_DistSq(x1, y1, z1, x2, y2, z2) <= maxDistSq then\n    -- Points are within range\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"direction-calculation",children:"Direction Calculation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Calculate direction from point A to point B\nlocal dir_x, dir_y, dir_z = Vec3Util_Sub(target_x, target_y, target_z, start_x, start_y, start_z)\nlocal norm_x, norm_y, norm_z = Vec3Util_Normalize(dir_x, dir_y, dir_z)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interpolation-animation",children:"Interpolation Animation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Smooth movement between two positions\nlocal current_x, current_y, current_z = Vec3Util_Lerp(start_x, start_y, start_z, end_x, end_y, end_z, progress)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/vecutil",children:"VecUtil"}),": 2D vector utility functions for XZ plane operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/vector3",children:"Vector3"}),": Object-oriented 3D vector class with operator overloading"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/mathutil",children:"MathUtil"}),": Additional mathematical utility functions"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);