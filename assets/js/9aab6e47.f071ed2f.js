"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[87884],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(96540);const t={},d=i.createContext(t);function o(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(d.Provider,{value:n},e.children)}},40560:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"game-scripts/core-systems/development-tools/debugging/debugsounds","title":"Debug Sounds","description":"Sound debugging system that tracks and monitors audio events with visual indicators and logging","source":"@site/docs/game-scripts/core-systems/development-tools/debugging/debugsounds.md","sourceDirName":"game-scripts/core-systems/development-tools/debugging","slug":"/game-scripts/core-systems/development-tools/debugging/debugsounds","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugsounds","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"debugsounds","title":"Debug Sounds","description":"Sound debugging system that tracks and monitors audio events with visual indicators and logging","sidebar_position":7,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Debug Print","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugprint"},"next":{"title":"Debug Tools","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugtools"}}');var t=s(74848),d=s(28453);const o={id:"debugsounds",title:"Debug Sounds",description:"Sound debugging system that tracks and monitors audio events with visual indicators and logging",sidebar_position:7,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},r="Debug Sounds",l={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Configuration Variables",id:"configuration-variables",level:2},{value:"SoundEmitter.SoundDebug.maxRecentSounds",id:"soundemittersounddebugmaxrecentsounds",level:3},{value:"SoundEmitter.SoundDebug.maxDistance",id:"soundemittersounddebugmaxdistance",level:3},{value:"Tracked Sound Data",id:"tracked-sound-data",level:2},{value:"SoundEmitter.SoundDebug.nearbySounds",id:"soundemittersounddebugnearbysounds",level:3},{value:"SoundEmitter.SoundDebug.loopingSounds",id:"soundemittersounddebugloopingsounds",level:3},{value:"SoundEmitter.SoundDebug.uiSounds",id:"soundemittersounddebuguisounds",level:3},{value:"SoundEmitter.SoundDebug.loopingUISounds",id:"soundemittersounddebugloopinguisounds",level:3},{value:"Intercepted Functions",id:"intercepted-functions",level:2},{value:"SoundEmitter.PlaySound(emitter, event, name, volume, ...)",id:"soundemitter-playsound",level:3},{value:"SoundEmitter.KillSound(emitter, name, ...)",id:"soundemitter-killsound",level:3},{value:"SoundEmitter.KillAllSounds(emitter, ...)",id:"soundemitter-killallsounds",level:3},{value:"SoundEmitter.SetParameter(emitter, name, parameter, value, ...)",id:"soundemitter-setparameter",level:3},{value:"SoundEmitter.SetVolume(emitter, name, volume, ...)",id:"soundemitter-setvolume",level:3},{value:"Debug Output Functions",id:"debug-output-functions",level:2},{value:"GetSoundDebugString()",id:"getsounddebugstring",level:3},{value:"Sound Information Structure",id:"sound-information-structure",level:2},{value:"Visual Debug Indicators",id:"visual-debug-indicators",level:2},{value:"Update System",id:"update-system",level:2},{value:"Complete Example",id:"complete-example",level:2},{value:"Debugging Tips",id:"debugging-tips",level:2},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"debug-sounds",children:"Debug Sounds"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"debugsounds"})," module provides comprehensive audio debugging capabilities by intercepting and tracking all sound events in the game. It maintains records of both looping and one-shot sounds, provides visual debugging indicators, and generates detailed debug output for audio troubleshooting."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- The module automatically intercepts sound calls\n-- Enable sound debug UI for visual indicators\nSOUNDDEBUGUI_ENABLED = true\n\n-- Play a sound (automatically tracked)\ninst.SoundEmitter:PlaySound("event/sound", "loop_name")\n\n-- Get debug information\nprint(GetSoundDebugString())\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-variables",children:"Configuration Variables"}),"\n",(0,t.jsx)(n.h3,{id:"soundemittersounddebugmaxrecentsounds",children:"SoundEmitter.SoundDebug.maxRecentSounds"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"number"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Value:"})," ",(0,t.jsx)(n.code,{children:"30"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nMaximum number of recent one-shot sounds to track in the debug output."]}),"\n",(0,t.jsx)(n.h3,{id:"soundemittersounddebugmaxdistance",children:"SoundEmitter.SoundDebug.maxDistance"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"number"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Value:"})," ",(0,t.jsx)(n.code,{children:"30"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nMaximum distance from the listener to show sounds in debug output."]}),"\n",(0,t.jsx)(n.h2,{id:"tracked-sound-data",children:"Tracked Sound Data"}),"\n",(0,t.jsx)(n.p,{children:"The module maintains several data structures for sound tracking:"}),"\n",(0,t.jsx)(n.h3,{id:"soundemittersounddebugnearbysounds",children:"SoundEmitter.SoundDebug.nearbySounds"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"table"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nArray of recent one-shot sound information within the maximum distance."]}),"\n",(0,t.jsx)(n.h3,{id:"soundemittersounddebugloopingsounds",children:"SoundEmitter.SoundDebug.loopingSounds"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"table"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTable mapping entities to their active looping sounds."]}),"\n",(0,t.jsx)(n.h3,{id:"soundemittersounddebuguisounds",children:"SoundEmitter.SoundDebug.uiSounds"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"table"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nArray of recent UI sound events."]}),"\n",(0,t.jsx)(n.h3,{id:"soundemittersounddebugloopinguisounds",children:"SoundEmitter.SoundDebug.loopingUISounds"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"table"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTable of active looping UI sounds."]}),"\n",(0,t.jsx)(n.h2,{id:"intercepted-functions",children:"Intercepted Functions"}),"\n",(0,t.jsx)(n.h3,{id:"soundemitter-playsound",children:"SoundEmitter.PlaySound(emitter, event, name, volume, ...)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})," (enhanced)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nEnhanced version of PlaySound that tracks all sound events and creates visual debug indicators."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"emitter"})," (SoundEmitter): The sound emitter instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"event"})," (string): FMOD event path"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Optional loop name for tracking"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"volume"})," (number): Sound volume (default: 1)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."})," (any): Additional parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Tracking Behavior:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Creates ",(0,t.jsx)(n.code,{children:"sounddebugicon"})," prefab for visual indication (if ",(0,t.jsx)(n.code,{children:"SOUNDDEBUGUI_ENABLED"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Records sound information including position, distance, and parameters"}),"\n",(0,t.jsx)(n.li,{children:"Distinguishes between one-shot and looping sounds"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- One-shot sound (tracked in nearbySounds)\ninst.SoundEmitter:PlaySound("dontstarve/characters/wilson/hurt")\n\n-- Looping sound (tracked in loopingSounds)\ninst.SoundEmitter:PlaySound("dontstarve/common/campfire", "fire_loop")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"soundemitter-killsound",children:"SoundEmitter.KillSound(emitter, name, ...)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})," (enhanced)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nEnhanced version of KillSound that removes tracking information and visual indicators."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"emitter"})," (SoundEmitter): The sound emitter instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Loop name to stop"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."})," (any): Additional parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Stop looping sound and remove debug tracking\ninst.SoundEmitter:KillSound("fire_loop")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"soundemitter-killallsounds",children:"SoundEmitter.KillAllSounds(emitter, ...)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})," (enhanced)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nEnhanced version of KillAllSounds that clears all tracking information for the emitter."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"emitter"})," (SoundEmitter): The sound emitter instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."})," (any): Additional parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"soundemitter-setparameter",children:"SoundEmitter.SetParameter(emitter, name, parameter, value, ...)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})," (enhanced)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nEnhanced version of SetParameter that tracks parameter changes for debugging."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"emitter"})," (SoundEmitter): The sound emitter instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Loop name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"parameter"})," (string): Parameter name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"value"})," (number): Parameter value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."})," (any): Additional parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Set parameter and track for debugging\ninst.SoundEmitter:SetParameter("fire_loop", "intensity", 0.8)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"soundemitter-setvolume",children:"SoundEmitter.SetVolume(emitter, name, volume, ...)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})," (enhanced)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nEnhanced version of SetVolume that tracks volume changes for debugging."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"emitter"})," (SoundEmitter): The sound emitter instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Loop name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"volume"})," (number): New volume value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."})," (any): Additional parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"debug-output-functions",children:"Debug Output Functions"}),"\n",(0,t.jsx)(n.h3,{id:"getsounddebugstring",children:"GetSoundDebugString()"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGenerates a comprehensive debug string containing information about all tracked sounds."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): Formatted debug information including looping sounds, recent sounds, and UI sounds"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Output Format:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"-------SOUND DEBUG-------\nLooping Sounds\n    [loop_name] event_path owner:guid prefab pos:x,y,z dist:distance volume:vol params:{param=value}\nRecent Sounds\n    [count] event_path owner:guid prefab pos:x,y,z dist:distance volume:vol\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Print detailed sound debug information\nprint(GetSoundDebugString())\n"})}),"\n",(0,t.jsx)(n.h2,{id:"sound-information-structure",children:"Sound Information Structure"}),"\n",(0,t.jsx)(n.p,{children:"Each tracked sound contains the following information:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local soundInfo = {\n    emitter = emitter,           -- SoundEmitter instance\n    event = event,               -- FMOD event path\n    owner = ent,                 -- Entity that owns the emitter\n    guid = ent.GUID,            -- Entity GUID\n    prefab = ent.prefab,        -- Entity prefab name\n    position = pos,              -- World position (Vector3)\n    dist = dist,                -- Distance from listener\n    volume = volume,            -- Sound volume\n    icon = soundIcon,           -- Visual debug icon (if enabled)\n    callstack = debugstack(2),  -- Call stack for debugging\n    params = {},                -- Parameter values (looping sounds only)\n    count = count               -- Sequence number (one-shot sounds only)\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"visual-debug-indicators",children:"Visual Debug Indicators"}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.code,{children:"SOUNDDEBUGUI_ENABLED"})," is true:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sound Icons"}),": ",(0,t.jsx)(n.code,{children:"sounddebugicon"})," prefabs spawn at sound locations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Loop Names"}),": Icons display the loop name for looping sounds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Count Numbers"}),": Icons display sequence numbers for one-shot sounds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auto-cleanup"}),": Icons are automatically removed when sounds stop"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"update-system",children:"Update System"}),"\n",(0,t.jsx)(n.p,{children:"The module includes a periodic update system that:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Validates looping sound states"}),"\n",(0,t.jsx)(n.li,{children:"Updates position and distance information"}),"\n",(0,t.jsx)(n.li,{children:"Removes stale sound tracking data"}),"\n",(0,t.jsx)(n.li,{children:"Cleans up visual indicators for stopped sounds"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Update runs every 1 second\nscheduler:ExecutePeriodic(1, DoUpdate)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Enable visual debugging\nSOUNDDEBUGUI_ENABLED = true\n\n-- Play various sounds for testing\nlocal campfire = SpawnPrefab("campfire")\ncampfire.SoundEmitter:PlaySound("dontstarve/common/campfire", "fire_loop")\ncampfire.SoundEmitter:SetParameter("fire_loop", "intensity", 0.5)\n\n-- Play one-shot sound\nplayer.SoundEmitter:PlaySound("dontstarve/characters/wilson/hurt")\n\n-- Debug output\nfunction ShowSoundDebug()\n    local debug_info = GetSoundDebugString()\n    print(debug_info)\n    \n    -- Also check console output for recent activity\n    local console_lines = GetConsoleOutputList()\n    for i, line in ipairs(console_lines) do\n        if string.find(line, "SOUND") then\n            print("Audio event:", line)\n        end\n    end\nend\n\n-- Call every few seconds to monitor audio\nscheduler:ExecutePeriodic(3, ShowSoundDebug)\n\n-- Stop all sounds and clean up tracking\ncampfire.SoundEmitter:KillAllSounds()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Distance Filtering"}),": Adjust ",(0,t.jsx)(n.code,{children:"maxDistance"})," to focus on nearby sounds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visual Indicators"}),": Enable ",(0,t.jsx)(n.code,{children:"SOUNDDEBUGUI_ENABLED"})," for spatial debugging"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameter Tracking"}),": Monitor parameter changes in real-time"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Impact"}),": Disable when not actively debugging audio"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugtools",children:"Debug Tools"}),": General debugging utilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugprint",children:"Debug Print"}),": Enhanced logging system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./fx.md",children:"FX"}),": Visual effects and audio coordination"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);