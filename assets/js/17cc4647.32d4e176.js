"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6164],{8371:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"api-vanilla/components/sanity","title":"Sanity","description":"The Sanity component manages an entity\'s mental state, including sanity level, effects of insanity, and sanity modifiers.","source":"@site/docs/api-vanilla/components/sanity.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/sanity","permalink":"/dst-api-webdocs/docs/api-vanilla/components/sanity","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"sanity","title":"Sanity","sidebar_position":8,"version":619045},"sidebar":"docs","previous":{"title":"Hunger","permalink":"/dst-api-webdocs/docs/api-vanilla/components/hunger"},"next":{"title":"Burnable Component","permalink":"/dst-api-webdocs/docs/api-vanilla/components/burnable"}}');var s=t(4848),a=t(8453);const r={id:"sanity",title:"Sanity",sidebar_position:8,version:619045},d="Sanity Component",l={},o=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Events",id:"events",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"sanity-component",children:"Sanity Component"})}),"\n",(0,s.jsx)(n.p,{children:"The Sanity component manages an entity's mental state, including sanity level, effects of insanity, and sanity modifiers."}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add a sanity component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("sanity")\n\n-- Configure the sanity component\nlocal sanity = entity.components.sanity\nsanity:SetMax(200)\nsanity:SetPercent(1) -- Start at full sanity\n'})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"current"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Current sanity value"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"max"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Maximum sanity value"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"rate"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Rate at which sanity changes over time"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"night_drain_mult"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Sanity drain multiplier during nighttime"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"neg_aura_mult"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Multiplier for negative auras"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pos_aura_mult"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Multiplier for positive auras"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"inducers"})}),(0,s.jsx)(n.td,{children:"Table"}),(0,s.jsx)(n.td,{children:"List of sources inducing sanity changes"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Set maximum sanity\nsanity:SetMax(200)\n\n-- Add or remove sanity\nsanity:DoDelta(10)  -- Add 10 sanity\nsanity:DoDelta(-10) -- Remove 10 sanity\n\n-- Set sanity as a percentage\nsanity:SetPercent(0.5) -- Set to 50% of max sanity\n\n-- Add a sanity inducer\nsanity:AddSanityAuraImmunity("spiders") -- Immune to spider sanity aura\n\n-- Check if insane\nlocal is_insane = sanity:IsInsane() -- Returns true if below threshold\n'})}),"\n",(0,s.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,s.jsx)(n.p,{children:"The Sanity component triggers these events:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sanitydelta"})," - When sanity value changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"goinginsane"})," - When sanity drops below the insanity threshold"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"goingsane"})," - When sanity rises above the insanity threshold"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,s.jsx)(n.p,{children:"The Sanity component often works with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Inventory"})," - Equipped items can affect sanity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Temperature"})," - Extreme temperatures can affect sanity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Hunger"})," - Hunger state can affect sanity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"State Graph"})," - For playing insanity animations"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/health",children:"Health Component"})," - For another vital stat that works similarly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/hunger",children:"Hunger Component"})," - For another vital stat that works similarly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/temperature",children:"Temperature Component"})," - For temperature effects on sanity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/equippable",children:"Equippable Component"})," - For items that affect sanity when equipped"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/edible",children:"Edible Component"})," - For food that affects sanity when eaten"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);