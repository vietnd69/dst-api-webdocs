"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[3080],{5294:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"api-vanilla/prefabs/prefabs-overview","title":"Prefabs Overview","description":"Prefabs (short for \\"prefabricated objects\\") are the fundamental building blocks of all entities in Don\'t Starve Together. They are templates that define the behavior, appearance, and functionality of game objects.","source":"@site/docs/api-vanilla/prefabs/index.md","sourceDirName":"api-vanilla/prefabs","slug":"/api/prefabs","permalink":"/dst-api-webdocs/docs/api/prefabs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"prefabs-overview","title":"Prefabs Overview","sidebar_position":1,"last_updated":"2023-07-06T00:00:00.000Z","slug":"/api/prefabs"},"sidebar":"docs","previous":{"title":"Prefabs","permalink":"/dst-api-webdocs/docs/category/prefabs"},"next":{"title":"Character Prefabs","permalink":"/dst-api-webdocs/docs/api-vanilla/prefabs/characters"}}');var t=s(4848),i=s(8453);const r={id:"prefabs-overview",title:"Prefabs Overview",sidebar_position:1,last_updated:new Date("2023-07-06T00:00:00.000Z"),slug:"/api/prefabs"},o="Prefabs Overview",l={},c=[{value:"What are Prefabs?",id:"what-are-prefabs",level:2},{value:"Creating a Prefab",id:"creating-a-prefab",level:2},{value:"Key Prefab Categories",id:"key-prefab-categories",level:2},{value:"Common Prefab Elements",id:"common-prefab-elements",level:2},{value:"Assets",id:"assets",level:3},{value:"Network Synchronization",id:"network-synchronization",level:3},{value:"Components",id:"components",level:3},{value:"Spawning Prefabs",id:"spawning-prefabs",level:2},{value:"Loot Tables",id:"loot-tables",level:2},{value:"Callbacks and Hooks",id:"callbacks-and-hooks",level:2},{value:"Common Prefab Patterns",id:"common-prefab-patterns",level:2},{value:"Character Prefabs",id:"character-prefabs",level:3},{value:"Item Prefabs",id:"item-prefabs",level:3},{value:"Creatures",id:"creatures",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"prefabs-overview",children:"Prefabs Overview"})}),"\n",(0,t.jsx)(n.p,{children:'Prefabs (short for "prefabricated objects") are the fundamental building blocks of all entities in Don\'t Starve Together. They are templates that define the behavior, appearance, and functionality of game objects.'}),"\n",(0,t.jsx)(n.h2,{id:"what-are-prefabs",children:"What are Prefabs?"}),"\n",(0,t.jsx)(n.p,{children:"Prefabs are Lua scripts that define and construct entities with specific components, properties, and behaviors. Every entity in the game - from characters to creatures, items to structures - is created from a prefab. Prefabs essentially serve as blueprints for spawning entities into the world."}),"\n",(0,t.jsx)(n.h2,{id:"creating-a-prefab",children:"Creating a Prefab"}),"\n",(0,t.jsxs)(n.p,{children:["Prefabs are created using the ",(0,t.jsx)(n.code,{children:"Prefab"})," function, which takes:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A prefab name identifier"}),"\n",(0,t.jsx)(n.li,{children:"A creation function that returns the entity"}),"\n",(0,t.jsx)(n.li,{children:"A list of assets needed by the entity"}),"\n",(0,t.jsx)(n.li,{children:"An optional list of dependencies (other prefabs that might be spawned by this prefab)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here's a basic prefab structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Define required assets\nlocal assets = {\n    Asset("ANIM", "anim/example.zip"),\n    Asset("SOUND", "sound/example.fsb"),\n}\n\n-- Define dependencies\nlocal prefabs = {\n    "dependency_prefab",\n}\n\n-- Main creation function\nlocal function fn()\n    -- Create the entity\n    local inst = CreateEntity()\n    \n    -- Add engine components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Set basic properties\n    inst.AnimState:SetBank("example")\n    inst.AnimState:SetBuild("example")\n    inst.AnimState:PlayAnimation("idle")\n    \n    -- Add tags for optimization\n    inst:AddTag("example_tag")\n    \n    -- Networking setup\n    inst.entity:SetPristine()\n    if not TheWorld.ismastersim then\n        return inst\n    end\n    \n    -- Add game components\n    inst:AddComponent("inspectable")\n    inst:AddComponent("inventoryitem")\n    \n    -- Configure components\n    inst.components.inventoryitem.imagename = "example"\n    \n    return inst\nend\n\n-- Return the prefab definition\nreturn Prefab("example_prefab", fn, assets, prefabs)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"key-prefab-categories",children:"Key Prefab Categories"}),"\n",(0,t.jsx)(n.p,{children:"Don't Starve Together has several major categories of prefabs:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Character Prefabs"}),": Playable characters like Wilson, Willow, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Creature Prefabs"}),": Mobs, animals, and monsters that inhabit the world"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Item Prefabs"}),": Tools, weapons, resources, and other collectibles"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Structure Prefabs"}),": Buildings, crafting stations, and other placeable objects"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"World Prefabs"}),": Specialized prefabs that define world generation and mechanics"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-prefab-elements",children:"Common Prefab Elements"}),"\n",(0,t.jsx)(n.p,{children:"Most prefabs contain several standard elements:"}),"\n",(0,t.jsx)(n.h3,{id:"assets",children:"Assets"}),"\n",(0,t.jsx)(n.p,{children:"Assets define the visual and audio resources needed by the prefab:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/spear.zip"),           -- Animation files\n    Asset("SOUND", "sound/beefalo.fsb"),       -- Sound files\n    Asset("MINIMAP_IMAGE", "beefalo_mini"),    -- Minimap icons\n    Asset("SCRIPT", "scripts/prefabs/wilson.lua"), -- Other scripts\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"network-synchronization",children:"Network Synchronization"}),"\n",(0,t.jsx)(n.p,{children:"Prefabs use a pristine state mechanism to handle client/server synchronization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"inst.entity:SetPristine()\nif not TheWorld.ismastersim then\n    return inst\nend\n"})}),"\n",(0,t.jsx)(n.p,{children:"Code before this check runs on both client and server, while code after only runs on the server."}),"\n",(0,t.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,t.jsx)(n.p,{children:"Components provide specific behaviors and functionality to prefabs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Combat capability\ninst:AddComponent("combat")\ninst.components.combat:SetDefaultDamage(10)\n\n-- Inventory item behavior\ninst:AddComponent("inventoryitem")\ninst.components.inventoryitem.imagename = "spear"\n\n-- Weapon behavior\ninst:AddComponent("weapon")\ninst.components.weapon:SetDamage(TUNING.SPEAR_DAMAGE)\n\n-- Finite uses (durability)\ninst:AddComponent("finiteuses")\ninst.components.finiteuses:SetMaxUses(100)\ninst.components.finiteuses:SetUses(100)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"spawning-prefabs",children:"Spawning Prefabs"}),"\n",(0,t.jsxs)(n.p,{children:["Prefabs can be spawned into the world using the ",(0,t.jsx)(n.code,{children:"SpawnPrefab"})," function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local entity = SpawnPrefab("spear")\nentity.Transform:SetPosition(x, y, z)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"loot-tables",children:"Loot Tables"}),"\n",(0,t.jsx)(n.p,{children:"Many prefabs define loot tables to determine what items drop when destroyed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'SetSharedLootTable("beefalo", {\n    {"meat",            1.00},\n    {"meat",            1.00},\n    {"beefalowool",     1.00},\n    {"horn",            0.33},\n})\n'})}),"\n",(0,t.jsx)(n.h2,{id:"callbacks-and-hooks",children:"Callbacks and Hooks"}),"\n",(0,t.jsx)(n.p,{children:"Prefabs often define callbacks for various events:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Equipment callbacks\nlocal function onequip(inst, owner)\n    owner.AnimState:OverrideSymbol("swap_object", "swap_spear", "swap_spear")\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\nend\n\nlocal function onunequip(inst, owner)\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\nend\n\n-- Attach callbacks to components\ninst.components.equippable:SetOnEquip(onequip)\ninst.components.equippable:SetOnUnequip(onunequip)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-prefab-patterns",children:"Common Prefab Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"character-prefabs",children:"Character Prefabs"}),"\n",(0,t.jsxs)(n.p,{children:["Character prefabs typically use the ",(0,t.jsx)(n.code,{children:"MakePlayerCharacter"})," helper function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'return MakePlayerCharacter("wilson", prefabs, assets, common_postinit, master_postinit)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"item-prefabs",children:"Item Prefabs"}),"\n",(0,t.jsxs)(n.p,{children:["Items often include components like ",(0,t.jsx)(n.code,{children:"inventoryitem"}),", ",(0,t.jsx)(n.code,{children:"equippable"}),", ",(0,t.jsx)(n.code,{children:"finiteuses"}),", and ",(0,t.jsx)(n.code,{children:"inspectable"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"creatures",children:"Creatures"}),"\n",(0,t.jsxs)(n.p,{children:["Creatures typically include components such as ",(0,t.jsx)(n.code,{children:"locomotor"}),", ",(0,t.jsx)(n.code,{children:"combat"}),", ",(0,t.jsx)(n.code,{children:"health"}),", and ",(0,t.jsx)(n.code,{children:"lootdropper"}),", along with a brain for AI behavior."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var a=s(6540);const t={},i=a.createContext(t);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);