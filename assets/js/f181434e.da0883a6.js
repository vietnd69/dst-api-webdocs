"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[3407],{7709:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"api-vanilla/localization/multilingual-support","title":"Implementing Multilingual Support","description":"This guide covers the essential steps for adding multilingual support to your Don\'t Starve Together mods, allowing players worldwide to enjoy your content in their preferred language.","source":"@site/docs/api-vanilla/localization/multilingual-support.md","sourceDirName":"api-vanilla/localization","slug":"/api-vanilla/localization/multilingual-support","permalink":"/dst-api-webdocs/docs/api-vanilla/localization/multilingual-support","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"multilingual-support","title":"Implementing Multilingual Support","sidebar_position":2,"last_updated":"2023-07-06T00:00:00.000Z","version":619045},"sidebar":"docs","previous":{"title":"Localization Overview","permalink":"/dst-api-webdocs/docs/api/localization"},"next":{"title":"Managing String Tables","permalink":"/dst-api-webdocs/docs/api-vanilla/localization/string-tables"}}');var l=a(4848),t=a(8453);const s={id:"multilingual-support",title:"Implementing Multilingual Support",sidebar_position:2,last_updated:new Date("2023-07-06T00:00:00.000Z"),version:619045},r="Implementing Multilingual Support in Mods",o={},g=[{value:"Basic Structure",id:"basic-structure",level:2},{value:"Language Detection",id:"language-detection",level:2},{value:"String Tables Organization",id:"string-tables-organization",level:2},{value:"Loading Language Files",id:"loading-language-files",level:2},{value:"Creating String Tables",id:"creating-string-tables",level:2},{value:"Using Localized Strings",id:"using-localized-strings",level:2},{value:"Supporting Special Characters",id:"supporting-special-characters",level:2},{value:"Fallback Mechanism",id:"fallback-mechanism",level:2},{value:"Handling Language Changes",id:"handling-language-changes",level:2},{value:"Testing Different Languages",id:"testing-different-languages",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"implementing-multilingual-support-in-mods",children:"Implementing Multilingual Support in Mods"})}),"\n",(0,l.jsx)(n.p,{children:"This guide covers the essential steps for adding multilingual support to your Don't Starve Together mods, allowing players worldwide to enjoy your content in their preferred language."}),"\n",(0,l.jsx)(n.h2,{id:"basic-structure",children:"Basic Structure"}),"\n",(0,l.jsx)(n.p,{children:"The localization system in Don't Starve Together uses string tables organized by language. Here's how to set up the basic structure:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- In your modmain.lua or a separate strings.lua file\nSTRINGS = GLOBAL.STRINGS\n\n-- Create namespaces for your mod's strings\nSTRINGS.MY_MOD = {}\nSTRINGS.MY_MOD.ITEMS = {}\nSTRINGS.MY_MOD.CHARACTERS = {}\nSTRINGS.MY_MOD.UI = {}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"language-detection",children:"Language Detection"}),"\n",(0,l.jsx)(n.p,{children:"Don't Starve Together automatically detects the player's language setting. You can access the current language using:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'local language = GLOBAL.LanguageTranslator.defaultlanguage\n-- Returns language code like "en", "zh", "ru", etc.\n'})}),"\n",(0,l.jsx)(n.h2,{id:"string-tables-organization",children:"String Tables Organization"}),"\n",(0,l.jsx)(n.p,{children:"Create separate files for each supported language:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"modroot/\n  \u251c\u2500\u2500 scripts/\n  \u2502    \u2514\u2500\u2500 languages/\n  \u2502         \u251c\u2500\u2500 strings_en.lua  -- English (default)\n  \u2502         \u251c\u2500\u2500 strings_zh.lua  -- Chinese\n  \u2502         \u251c\u2500\u2500 strings_ru.lua  -- Russian\n  \u2502         \u2514\u2500\u2500 strings_es.lua  -- Spanish\n  \u2514\u2500\u2500 modmain.lua\n"})}),"\n",(0,l.jsx)(n.h2,{id:"loading-language-files",children:"Loading Language Files"}),"\n",(0,l.jsx)(n.p,{children:"In your modmain.lua, load the appropriate language file:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Default to English\nmodimport("scripts/languages/strings_en.lua")\n\n-- Load language-specific strings if available\nlocal language = GLOBAL.LanguageTranslator.defaultlanguage\nif language ~= "en" then\n    local language_file = "scripts/languages/strings_" .. language .. ".lua"\n    \n    -- Check if we have a translation for this language\n    if GLOBAL.kleifileexists("scripts/languages/strings_" .. language .. ".lua") then\n        modimport(language_file)\n    end\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"creating-string-tables",children:"Creating String Tables"}),"\n",(0,l.jsx)(n.p,{children:"Here's an example of how to structure your English strings file (strings_en.lua):"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'STRINGS = GLOBAL.STRINGS\n\n-- Item names and descriptions\nSTRINGS.MY_MOD.ITEMS.MAGIC_SWORD = {\n    NAME = "Magic Sword",\n    DESCRIPTION = "A powerful magical weapon.",\n}\n\n-- Character speech\nSTRINGS.MY_MOD.CHARACTERS.HERO = {\n    DESCRIBE = {\n        MAGIC_SWORD = "This sword glows with magical energy!",\n        MONSTER = "What a terrifying creature!",\n    },\n    ACTIONFAIL = {\n        MAGIC_SWORD = "I\'m not skilled enough to use this yet.",\n    },\n}\n\n-- UI elements\nSTRINGS.MY_MOD.UI = {\n    BUTTON_CRAFT = "Craft",\n    BUTTON_CANCEL = "Cancel",\n    TOOLTIP_MAGIC = "Increases magical abilities by {magic_value}%",\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"And a corresponding Chinese translation (strings_zh.lua):"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'STRINGS = GLOBAL.STRINGS\n\n-- Item names and descriptions\nSTRINGS.MY_MOD.ITEMS.MAGIC_SWORD = {\n    NAME = "\u9b54\u6cd5\u5251",\n    DESCRIPTION = "\u4e00\u628a\u5f3a\u5927\u7684\u9b54\u6cd5\u6b66\u5668\u3002",\n}\n\n-- Character speech\nSTRINGS.MY_MOD.CHARACTERS.HERO = {\n    DESCRIBE = {\n        MAGIC_SWORD = "\u8fd9\u628a\u5251\u95ea\u70c1\u7740\u9b54\u6cd5\u80fd\u91cf\uff01",\n        MONSTER = "\u591a\u4e48\u53ef\u6015\u7684\u751f\u7269\uff01",\n    },\n    ACTIONFAIL = {\n        MAGIC_SWORD = "\u6211\u8fd8\u4e0d\u591f\u719f\u7ec3\uff0c\u65e0\u6cd5\u4f7f\u7528\u5b83\u3002",\n    },\n}\n\n-- UI elements\nSTRINGS.MY_MOD.UI = {\n    BUTTON_CRAFT = "\u5236\u4f5c",\n    BUTTON_CANCEL = "\u53d6\u6d88",\n    TOOLTIP_MAGIC = "\u589e\u52a0\u9b54\u6cd5\u80fd\u529b {magic_value}%",\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"using-localized-strings",children:"Using Localized Strings"}),"\n",(0,l.jsx)(n.p,{children:"Once your string tables are set up, you can use them throughout your mod:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- For item names and descriptions\nlocal item = CreateEntity()\nitem.entity:AddNetwork()\n\nlocal inventoryitem = item:AddComponent("inventoryitem")\ninventoryitem:SetAtlas("images/inventoryimages/magic_sword.xml")\ninventoryitem:SetImage("magic_sword")\n\nitem:AddComponent("inspectable")\nitem.components.inspectable:SetDescription(STRINGS.MY_MOD.ITEMS.MAGIC_SWORD.DESCRIPTION)\n\n-- For UI text\nlocal button = Button("button_craft", STRINGS.MY_MOD.UI.BUTTON_CRAFT)\n\n-- For dynamic text with variables\nlocal magic_value = 25\nlocal tooltip_text = string.gsub(\n    STRINGS.MY_MOD.UI.TOOLTIP_MAGIC,\n    "{magic_value}",\n    tostring(magic_value)\n)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"supporting-special-characters",children:"Supporting Special Characters"}),"\n",(0,l.jsx)(n.p,{children:"For languages with special characters or non-Latin scripts, ensure your text files are saved with UTF-8 encoding. This is essential for proper display of characters in languages like Chinese, Russian, Japanese, and Korean."}),"\n",(0,l.jsx)(n.h2,{id:"fallback-mechanism",children:"Fallback Mechanism"}),"\n",(0,l.jsx)(n.p,{children:"Always implement a fallback mechanism for missing translations:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'function GetLocalizedString(stringTable, key, fallback)\n    if stringTable and stringTable[key] then\n        return stringTable[key]\n    else\n        return fallback or key\n    end\nend\n\n-- Usage\nlocal itemName = GetLocalizedString(STRINGS.MY_MOD.ITEMS.MAGIC_SWORD, "NAME", "Magic Sword")\n'})}),"\n",(0,l.jsx)(n.h2,{id:"handling-language-changes",children:"Handling Language Changes"}),"\n",(0,l.jsx)(n.p,{children:"To handle language changes during gameplay (rare but possible), you can listen for the language change event:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'local function OnLanguageChanged()\n    -- Reload your language files\n    -- Update any visible UI elements\nend\n\nAddPrefabPostInit("world", function(world)\n    world:ListenForEvent("languagechanged", OnLanguageChanged, world)\nend)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"testing-different-languages",children:"Testing Different Languages"}),"\n",(0,l.jsx)(n.p,{children:"During development, you can test different languages by temporarily changing the language detection code:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- For testing purposes only\nlocal test_language = "zh"  -- Test Chinese\nlocal language_file = "scripts/languages/strings_" .. test_language .. ".lua"\nif GLOBAL.kleifileexists(language_file) then\n    modimport(language_file)\nend\n'})}),"\n",(0,l.jsx)(n.p,{children:"Remember to remove this testing code before releasing your mod."}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsx)(n.p,{children:"After implementing basic multilingual support, explore more advanced topics:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/localization/string-tables",children:"String Table Management"})," - For organizing larger translation projects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/localization/font-handling",children:"Font Handling"})," - For languages requiring special fonts"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/localization/best-practices",children:"Localization Best Practices"})," - For making your translations more effective"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/localization/testing-localization",children:"Testing Localized Content"})," - For ensuring quality across languages"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"By following these guidelines, you can make your mod accessible to a global audience and significantly increase its reach and popularity in the Don't Starve Together community."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>r});var i=a(6540);const l={},t=i.createContext(l);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);