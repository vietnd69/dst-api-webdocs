"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[5364],{7966:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"api-vanilla/examples/snippets/animation-snippets","title":"Animation Snippets","description":"This page provides reusable code snippets for working with animations in Don\'t Starve Together mods.","source":"@site/docs/api-vanilla/examples/snippets/animation-snippets.md","sourceDirName":"api-vanilla/examples/snippets","slug":"/api-vanilla/examples/snippets/animation-snippets","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/snippets/animation-snippets","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"animation-snippets","title":"Animation Snippets","sidebar_position":5},"sidebar":"docs","previous":{"title":"Component Snippets","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/snippets/component-snippets"},"next":{"title":"Prefab Snippets","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/snippets/prefab-snippets"}}');var a=e(4848),s=e(8453);const o={id:"animation-snippets",title:"Animation Snippets",sidebar_position:5},r="Animation Snippets",l={},m=[{value:"Basic Animation Usage",id:"basic-animation-usage",level:2},{value:"Setting Up Animations",id:"setting-up-animations",level:3},{value:"Animation Playback Control",id:"animation-playback-control",level:2},{value:"Animation Events and Callbacks",id:"animation-events-and-callbacks",level:2},{value:"Symbol Manipulation",id:"symbol-manipulation",level:2},{value:"Animation Blending and Transforms",id:"animation-blending-and-transforms",level:2},{value:"Custom Animation Effects",id:"custom-animation-effects",level:2},{value:"Working with Multiple Animations",id:"working-with-multiple-animations",level:2},{value:"Animation Integration with Other Systems",id:"animation-integration-with-other-systems",level:2}];function d(n){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"animation-snippets",children:"Animation Snippets"})}),"\n",(0,a.jsx)(t.p,{children:"This page provides reusable code snippets for working with animations in Don't Starve Together mods."}),"\n",(0,a.jsx)(t.h2,{id:"basic-animation-usage",children:"Basic Animation Usage"}),"\n",(0,a.jsx)(t.h3,{id:"setting-up-animations",children:"Setting Up Animations"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Basic animation setup\nfunction SetupAnimations(inst)\n    -- Set animation bank and build\n    inst.AnimState:SetBank("spear")\n    inst.AnimState:SetBuild("spear")\n    \n    -- Play default animation\n    inst.AnimState:PlayAnimation("idle")\nend\n\n-- Example usage in a prefab\nlocal function fn()\n    local inst = CreateEntity()\n    \n    -- Add required components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Setup animations\n    SetupAnimations(inst)\n    \n    return inst\nend\n'})}),"\n",(0,a.jsx)(t.h2,{id:"animation-playback-control",children:"Animation Playback Control"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Play a single animation once\ninst.AnimState:PlayAnimation("attack")\n\n-- Play an animation and loop it\ninst.AnimState:PlayAnimation("idle_loop", true)\n\n-- Queue an animation to play after the current one finishes\ninst.AnimState:PushAnimation("idle", true) -- true for looping\n\n-- Get current animation name\nlocal current_anim = inst.AnimState:GetCurrentAnimationName()\n\n-- Check if animation is finished\nlocal is_done = inst.AnimState:AnimDone()\n\n-- Set animation playback rate (1 is normal speed)\ninst.AnimState:SetTime(0) -- Reset to beginning\ninst.AnimState:SetRate(2) -- Play at 2x speed\n'})}),"\n",(0,a.jsx)(t.h2,{id:"animation-events-and-callbacks",children:"Animation Events and Callbacks"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Using timeline events in a state graph\nState {\n    name = "attack",\n    tags = {"attack", "busy"},\n    \n    onenter = function(inst)\n        inst.AnimState:PlayAnimation("attack")\n    end,\n    \n    timeline = {\n        -- At frame 10, play a sound\n        TimeEvent(10*FRAMES, function(inst)\n            inst.SoundEmitter:PlaySound("dontstarve/wilson/attack_weapon")\n        end),\n        \n        -- At frame 15, apply damage\n        TimeEvent(15*FRAMES, function(inst)\n            inst.components.combat:DoAttack()\n        end),\n        \n        -- At frame 25, spawn an effect\n        TimeEvent(25*FRAMES, function(inst)\n            local fx = SpawnPrefab("impact")\n            fx.Transform:SetPosition(inst.Transform:GetWorldPosition())\n        end),\n    },\n    \n    events = {\n        EventHandler("animover", function(inst)\n            inst.sg:GoToState("idle")\n        end),\n    },\n}\n\n-- Listening for animation-related events outside of a state graph\ninst:ListenForEvent("animover", function(inst)\n    print("Animation finished: " .. inst.AnimState:GetCurrentAnimationName())\nend)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"symbol-manipulation",children:"Symbol Manipulation"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Override a specific symbol with another build\'s symbol\ninst.AnimState:OverrideSymbol("swap_object", "spear", "swap_spear")\n\n-- Hide and show specific symbols\ninst.AnimState:Hide("ARM_normal")\ninst.AnimState:Show("ARM_carry")\n\n-- Clear symbol overrides\ninst.AnimState:ClearOverrideSymbol("swap_object")\n\n-- Add and remove symbol modifiers\ninst.AnimState:AddSymbolModifier("symbol_name", "MODIFIERNAME")\ninst.AnimState:RemoveSymbolModifier("symbol_name", "MODIFIERNAME")\n'})}),"\n",(0,a.jsx)(t.h2,{id:"animation-blending-and-transforms",children:"Animation Blending and Transforms"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Set blend mode for transparency\ninst.AnimState:SetBloomEffectHandle("shaders/anim.ksh")\n\n-- Set layer for rendering order (higher numbers render on top)\ninst.AnimState:SetLayer(LAYER.BACKGROUND)\ninst.AnimState:SetSortOrder(3)\n\n-- Set facing direction (4 or 8 direction mode)\ninst.AnimState:SetFinalOffset(1) -- Z-offset for rendering\ninst.AnimState:SetOrientation(ANIM_ORIENTATION.OnGround)\ninst.AnimState:SetFacing(FACING_RIGHT)\n\n-- Scale and position adjustments\ninst.AnimState:SetScale(1.2, 1.2, 1.2)\ninst.AnimState:SetRotation(45) -- Degrees\n'})}),"\n",(0,a.jsx)(t.h2,{id:"custom-animation-effects",children:"Custom Animation Effects"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:"-- Add overlay effect (like wetness)\nfunction ApplyWetEffect(inst)\n    inst.AnimState:SetAddColour(0, 0, 0.2, 0)\n    inst.AnimState:SetHaunted(false)\nend\n\n-- Add color tint\nfunction ApplyTint(inst, r, g, b, a)\n    inst.AnimState:SetMultColour(r, g, b, a)\nend\n\n-- Make entity flash\nfunction FlashEntity(inst, duration)\n    inst.AnimState:SetAddColour(0.2, 0.2, 0.2, 0)\n    \n    inst:DoTaskInTime(duration, function()\n        inst.AnimState:SetAddColour(0, 0, 0, 0)\n    end)\nend\n\n-- Fade entity in\nfunction FadeIn(inst, duration)\n    inst.AnimState:SetMultColour(1, 1, 1, 0)\n    \n    local start_time = GetTime()\n    local task = inst:DoPeriodicTask(FRAMES, function()\n        local t = math.min(1, (GetTime() - start_time) / duration)\n        inst.AnimState:SetMultColour(1, 1, 1, t)\n        \n        if t >= 1 then\n            if task ~= nil then\n                task:Cancel()\n                task = nil\n            end\n        end\n    end)\nend\n"})}),"\n",(0,a.jsx)(t.h2,{id:"working-with-multiple-animations",children:"Working with Multiple Animations"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Switch between different animation sets\nfunction SwitchAnimSet(inst, bank, build)\n    inst.AnimState:SetBank(bank)\n    inst.AnimState:SetBuild(build)\n    inst.AnimState:PlayAnimation("idle")\nend\n\n-- Swap between character animations with items\nfunction SetupCharacterAnimations(inst)\n    -- Base animations\n    inst.AnimState:SetBank("wilson")\n    inst.AnimState:SetBuild("wilson")\n    \n    -- Add animations for holding items\n    inst.components.inventory:SetEquippedItem("onequip", function(inst, data)\n        local item = data.item\n        if item and item.components.equippable then\n            if item.components.equippable.equipslot == EQUIPSLOTS.HANDS then\n                -- Override hand animation\n                inst.AnimState:OverrideSymbol("swap_object", \n                    item.components.equippable.swapbuild or item.prefab, \n                    item.components.equippable.swapsymbol or "swap_object")\n                inst.AnimState:Show("ARM_carry")\n                inst.AnimState:Hide("ARM_normal")\n            end\n        end\n    end)\n    \n    -- Remove item animations\n    inst:ListenForEvent("unequip", function(inst, data)\n        local item = data.item\n        if item and item.components.equippable then\n            if item.components.equippable.equipslot == EQUIPSLOTS.HANDS then\n                -- Restore normal hand animation\n                inst.AnimState:ClearOverrideSymbol("swap_object")\n                inst.AnimState:Hide("ARM_carry")\n                inst.AnimState:Show("ARM_normal")\n            end\n        end\n    end)\nend\n'})}),"\n",(0,a.jsx)(t.h2,{id:"animation-integration-with-other-systems",children:"Animation Integration with Other Systems"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Animation-driven sound effects\nfunction SetupAnimationSounds(inst)\n    -- Connect animation frames to sound effects\n    local function PlayFootstep()\n        -- Play different sounds based on ground type\n        local ground = TheWorld.Map:GetTileAtPoint(inst.Transform:GetWorldPosition())\n        if ground == GROUND.ROCKY then\n            inst.SoundEmitter:PlaySound("dontstarve/movement/run_rock")\n        elseif ground == GROUND.MARSH then\n            inst.SoundEmitter:PlaySound("dontstarve/movement/run_marsh")\n        else\n            inst.SoundEmitter:PlaySound("dontstarve/movement/run_dirt")\n        end\n    end\n    \n    -- Add to state graph\n    local states = {\n        State{\n            name = "run",\n            tags = {"moving", "running"},\n            \n            onenter = function(inst)\n                inst.AnimState:PlayAnimation("run_loop", true)\n            end,\n            \n            timeline = {\n                TimeEvent(7*FRAMES, PlayFootstep),\n                TimeEvent(15*FRAMES, PlayFootstep),\n            },\n        }\n    }\n    \n    return states\nend\n\n-- Animation-driven particle effects\nfunction SpawnFootstepFX(inst)\n    -- Spawn particles at feet position\n    local x, y, z = inst.Transform:GetWorldPosition()\n    local fx = SpawnPrefab("footstep")\n    fx.Transform:SetPosition(x, 0, z)\n    \n    -- Set particle appearance based on ground\n    local ground = TheWorld.Map:GetTileAtPoint(x, 0, z)\n    if ground == GROUND.DESERT_DIRT then\n        fx.AnimState:SetBank("footstep_desert")\n        fx.AnimState:SetBuild("footstep_desert")\n    else\n        fx.AnimState:SetBank("footstep")\n        fx.AnimState:SetBuild("footstep")\n    end\n    \n    fx.AnimState:PlayAnimation("idle")\n    fx:ListenForEvent("animover", fx.Remove)\nend\n'})}),"\n",(0,a.jsx)(t.p,{children:"These snippets demonstrate common animation techniques used in Don't Starve Together modding. Adapt them to your specific needs when creating custom entities, characters, or effects."})]})}function p(n={}){const{wrapper:t}={...(0,s.R)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>o,x:()=>r});var i=e(6540);const a={},s=i.createContext(a);function o(n){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function r(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),i.createElement(s.Provider,{value:t},n.children)}}}]);