"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[59677],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},80917:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"game-scripts/core-systems/development-tools/debugging/inspect","title":"Inspect","description":"Library for creating human-readable representations of Lua tables and values","source":"@site/docs/game-scripts/core-systems/development-tools/debugging/inspect.md","sourceDirName":"game-scripts/core-systems/development-tools/debugging","slug":"/game-scripts/core-systems/development-tools/debugging/inspect","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/inspect","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"inspect","title":"Inspect","description":"Library for creating human-readable representations of Lua tables and values","sidebar_position":8,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Debug Tools","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugtools"},"next":{"title":"Stack Trace","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/stacktrace"}}');var i=t(74848),r=t(28453);const l={id:"inspect",title:"Inspect",description:"Library for creating human-readable representations of Lua tables and values",sidebar_position:8,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Inspect",o={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Functions",id:"functions",level:2},{value:"inspect(value, depth)",id:"inspect-function",level:3},{value:"Module Properties",id:"module-properties",level:2},{value:"inspect.__VERSION",id:"inspect__version",level:3},{value:"Features",id:"features",level:2},{value:"Smart String Quoting",id:"smart-string-quoting",level:3},{value:"Circular Reference Detection",id:"circular-reference-detection",level:3},{value:"Array vs Dictionary Distinction",id:"array-vs-dictionary-distinction",level:3},{value:"Metatable Support",id:"metatable-support",level:3},{value:"Type-Specific Formatting",id:"type-specific-formatting",level:3},{value:"Internal Functions",id:"internal-functions",level:2},{value:"smartQuote(str)",id:"smartquotestr",level:3},{value:"isIdentifier(str)",id:"isidentifierstr",level:3},{value:"isArrayKey(k, length)",id:"isarraykeyk-length",level:3},{value:"sortKeys(a, b)",id:"sortkeysa-b",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Debugging Tables",id:"debugging-tables",level:3},{value:"Configuration Inspection",id:"configuration-inspection",level:3},{value:"Component State Debugging",id:"component-state-debugging",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Related Modules",id:"related-modules",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"inspect",children:"Inspect"})}),"\n",(0,i.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Build Version"}),(0,i.jsx)(n.th,{children:"Change Date"}),(0,i.jsx)(n.th,{children:"Change Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"676042"}),(0,i.jsx)(n.td,{children:"2025-06-21"}),(0,i.jsx)(n.td,{children:"stable"}),(0,i.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"inspect"})," module provides functionality for creating human-readable string representations of Lua tables and other data types. It is particularly useful for debugging and development purposes, offering pretty-printed output with proper indentation and handling of complex data structures."]}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local inspect = require("inspect")\n\nlocal data = {\n    name = "Wilson",\n    health = 150,\n    items = {"axe", "torch", "berries"},\n    position = {x = 100, y = 50}\n}\n\nprint(inspect(data))\n-- Output:\n-- {\n--   health = 150,\n--   items = { "axe", "torch", "berries" },\n--   name = "Wilson",\n--   position = {\n--     x = 100,\n--     y = 50\n--   }\n-- }\n'})}),"\n",(0,i.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(n.h3,{id:"inspect-function",children:"inspect(value, depth)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nCreates a human-readable string representation of any Lua value, with special formatting for tables."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"value"})," (any): The value to inspect and convert to string representation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"depth"})," (number, optional): Maximum depth to traverse when inspecting nested tables. If not specified, inspects all levels"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"(string): Human-readable string representation of the value"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Simple value inspection\nprint(inspect("Hello World"))  -- "Hello World"\nprint(inspect(42))             -- 42\nprint(inspect(true))           -- true\nprint(inspect(nil))            -- nil\n\n-- Table inspection with depth limit\nlocal nested = {\n    level1 = {\n        level2 = {\n            level3 = {\n                data = "deep"\n            }\n        }\n    }\n}\n\nprint(inspect(nested, 2))\n-- Output stops at level 2, showing {...} for deeper levels\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stable since initial implementation"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"module-properties",children:"Module Properties"}),"\n",(0,i.jsx)(n.h3,{id:"inspect__version",children:"inspect.__VERSION"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Value:"})," ",(0,i.jsx)(n.code,{children:'"1.2.0"'})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," ",(0,i.jsx)(n.code,{children:"stable"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Version identifier for the inspect module."]}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(n.h3,{id:"smart-string-quoting",children:"Smart String Quoting"}),"\n",(0,i.jsx)(n.p,{children:"The module intelligently chooses between single and double quotes for strings based on their content:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"print(inspect('String with \"quotes\"'))  -- 'String with \"quotes\"'\nprint(inspect(\"String with 'apostrophes'\"))  -- \"String with 'apostrophes'\"\n"})}),"\n",(0,i.jsx)(n.h3,{id:"circular-reference-detection",children:"Circular Reference Detection"}),"\n",(0,i.jsx)(n.p,{children:"Handles circular references by assigning unique IDs to tables and referencing them:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local a = {}\nlocal b = {ref_to_a = a}\na.ref_to_b = b\n\nprint(inspect(a))\n-- Output includes table IDs like <table 1> to handle circular references\n"})}),"\n",(0,i.jsx)(n.h3,{id:"array-vs-dictionary-distinction",children:"Array vs Dictionary Distinction"}),"\n",(0,i.jsx)(n.p,{children:"Differentiates between array-like tables and dictionary tables in output formatting:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Array-like table\nlocal array = {"first", "second", "third"}\nprint(inspect(array))\n-- { "first", "second", "third" }\n\n-- Dictionary table\nlocal dict = {key1 = "value1", key2 = "value2"}\nprint(inspect(dict))\n-- {\n--   key1 = "value1",\n--   key2 = "value2"\n-- }\n'})}),"\n",(0,i.jsx)(n.h3,{id:"metatable-support",children:"Metatable Support"}),"\n",(0,i.jsx)(n.p,{children:"Displays metatable information when present:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local t = {data = "example"}\nsetmetatable(t, {__tostring = function() return "custom string" end})\n\nprint(inspect(t))\n-- Shows both table content and metatable information\n'})}),"\n",(0,i.jsx)(n.h3,{id:"type-specific-formatting",children:"Type-Specific Formatting"}),"\n",(0,i.jsx)(n.p,{children:"Handles different Lua types appropriately:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Strings"}),": Properly quoted with escape sequence handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Numbers"}),": Direct representation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Booleans"}),": ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Nil"}),": ",(0,i.jsx)(n.code,{children:"nil"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tables"}),": Pretty-printed with indentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Functions"}),": ",(0,i.jsx)(n.code,{children:"<function ID>"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Userdata"}),": ",(0,i.jsx)(n.code,{children:"<userdata ID>"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Threads"}),": ",(0,i.jsx)(n.code,{children:"<thread ID>"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"internal-functions",children:"Internal Functions"}),"\n",(0,i.jsx)(n.p,{children:"The module includes several internal utility functions:"}),"\n",(0,i.jsx)(n.h3,{id:"smartquotestr",children:"smartQuote(str)"}),"\n",(0,i.jsx)(n.p,{children:"Intelligently chooses quote style for strings based on content."}),"\n",(0,i.jsx)(n.h3,{id:"isidentifierstr",children:"isIdentifier(str)"}),"\n",(0,i.jsx)(n.p,{children:"Determines if a string can be used as a table key without brackets."}),"\n",(0,i.jsx)(n.h3,{id:"isarraykeyk-length",children:"isArrayKey(k, length)"}),"\n",(0,i.jsx)(n.p,{children:"Checks if a key represents an array index."}),"\n",(0,i.jsx)(n.h3,{id:"sortkeysa-b",children:"sortKeys(a, b)"}),"\n",(0,i.jsx)(n.p,{children:"Comparison function for sorting table keys by type and value."}),"\n",(0,i.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"debugging-tables",children:"Debugging Tables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Debug player data\nlocal player_data = {\n    name = "Wilson",\n    health = {current = 75, max = 150},\n    inventory = {"log", "stone", "gold"}\n}\n\nprint("Player data:", inspect(player_data))\n'})}),"\n",(0,i.jsx)(n.h3,{id:"configuration-inspection",children:"Configuration Inspection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Inspect game configuration\nlocal config = GetModConfigData()\nprint("Current config:", inspect(config, 3))  -- Limit depth to 3 levels\n'})}),"\n",(0,i.jsx)(n.h3,{id:"component-state-debugging",children:"Component State Debugging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Debug component state\nif inst.components.health then\n    print("Health component:", inspect(inst.components.health))\nend\n'})}),"\n",(0,i.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The inspect function creates a complete string representation in memory"}),"\n",(0,i.jsxs)(n.li,{children:["For very large or deeply nested tables, consider using the ",(0,i.jsx)(n.code,{children:"depth"})," parameter to limit traversal"]}),"\n",(0,i.jsx)(n.li,{children:"Circular reference detection adds overhead but prevents infinite loops"}),"\n",(0,i.jsx)(n.li,{children:"String concatenation is optimized using table-based buffering"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugtools",children:"Debug Tools"}),": Comprehensive debugging utilities that may use inspect"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugprint",children:"Debug Print"}),": Printing utilities for development"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debughelpers",children:"Debug Helpers"}),": Additional debugging assistance functions"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.lua.org/manual/5.4/manual.html#2.1",children:"Lua Manual - Tables"}),": Official Lua documentation on tables"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"http://www.lua.org/pil/2.5.html",children:"Programming in Lua - Tables"}),": Detailed guide on Lua table usage"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);