"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[6023],{6975:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api-vanilla/node-types/prefab","title":"Prefab","description":"Prefabs are blueprints for creating entities, with predefined components and properties.","source":"@site/docs/api-vanilla/node-types/prefab.md","sourceDirName":"api-vanilla/node-types","slug":"/api-vanilla/node-types/prefab","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/prefab","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"prefab","title":"Prefab","sidebar_position":4},"sidebar":"docs","previous":{"title":"Component","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/component"},"next":{"title":"Brain","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/brain"}}');var i=s(4848),r=s(8453);const a={id:"prefab",title:"Prefab",sidebar_position:4},l="Prefab",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Prefab Structure",id:"prefab-structure",level:2},{value:"Key Parts of a Prefab",id:"key-parts-of-a-prefab",level:2},{value:"Prefab Registration",id:"prefab-registration",level:2},{value:"Spawning Prefabs",id:"spawning-prefabs",level:2},{value:"Prefab Variants",id:"prefab-variants",level:2},{value:"Prefab Assets",id:"prefab-assets",level:2},{value:"Master Simulation",id:"master-simulation",level:2},{value:"Related Systems",id:"related-systems",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"prefab",children:"Prefab"})}),"\n",(0,i.jsx)(n.p,{children:"Prefabs are blueprints for creating entities, with predefined components and properties."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Prefabs serve as templates for creating entities in the game. They define what components an entity should have, what its initial properties should be, and how it should behave. Prefabs ensure consistency when creating multiple instances of the same type of entity."}),"\n",(0,i.jsx)(n.h2,{id:"prefab-structure",children:"Prefab Structure"}),"\n",(0,i.jsx)(n.p,{children:"A typical prefab definition looks like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/myitem.zip"),\n}\n\nlocal function fn()\n    local inst = CreateEntity()\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    inst:AddTag("myitem")\n    \n    inst.AnimState:SetBank("myitem")\n    inst.AnimState:SetBuild("myitem")\n    inst.AnimState:PlayAnimation("idle")\n    \n    inst.entity:SetPristine()\n    \n    if not TheWorld.ismastersim then\n        return inst\n    end\n    \n    inst:AddComponent("inventoryitem")\n    inst:AddComponent("inspectable")\n    \n    inst.components.inventoryitem.imagename = "myitem"\n    inst.components.inventoryitem.atlasname = "images/inventoryimages/myitem.xml"\n    \n    return inst\nend\n\nreturn Prefab("myitem", fn, assets)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"key-parts-of-a-prefab",children:"Key Parts of a Prefab"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Assets"}),": Resources needed by the prefab (animations, sounds, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prefab Function"}),": Function that constructs the entity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Client/Server Separation"}),": Using ",(0,i.jsx)(n.code,{children:"TheWorld.ismastersim"})," to separate client and server code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component Setup"}),": Adding and configuring components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Animation Setup"}),": Setting up the visual appearance"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prefab-registration",children:"Prefab Registration"}),"\n",(0,i.jsx)(n.p,{children:"Prefabs are registered with the game engine:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'return Prefab("prefabname", fn, assets, prefabs)\n'})}),"\n",(0,i.jsx)(n.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prefabname"}),": Unique identifier for the prefab"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fn"}),": Function that creates and configures the entity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"assets"}),": List of assets needed by the prefab"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prefabs"}),": List of other prefabs that this prefab depends on"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"spawning-prefabs",children:"Spawning Prefabs"}),"\n",(0,i.jsx)(n.p,{children:"Prefabs are spawned into the world with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Spawn at a specific position\nlocal inst = SpawnPrefab("myitem")\ninst.Transform:SetPosition(x, y, z)\n\n-- Spawn as a dropped item\ninst = player.components.inventory:DropItem(inst)\n\n-- Spawn and give to player\nplayer.components.inventory:GiveItem(inst)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"prefab-variants",children:"Prefab Variants"}),"\n",(0,i.jsx)(n.p,{children:"You can create variants of prefabs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Base prefab with shared functionality\nlocal function basefn()\n    -- Common setup\nend\n\n-- Specific variant\nlocal function redfn()\n    local inst = basefn()\n    -- Red-specific setup\n    return inst\nend\n\n-- Another variant\nlocal function bluefn()\n    local inst = basefn()\n    -- Blue-specific setup\n    return inst\nend\n\nreturn Prefab("myitem", basefn, assets),\n       Prefab("myitem_red", redfn, assets),\n       Prefab("myitem_blue", bluefn, assets)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"prefab-assets",children:"Prefab Assets"}),"\n",(0,i.jsx)(n.p,{children:"Assets are resources needed by the prefab:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/myitem.zip"),          -- Animation\n    Asset("SOUND", "sound/myitem.fsb"),        -- Sound\n    Asset("IMAGE", "images/myitem.tex"),       -- Texture\n    Asset("ATLAS", "images/myitem.xml"),       -- Atlas\n    Asset("SHADER", "shaders/myshader.ksh"),   -- Shader\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"master-simulation",children:"Master Simulation"}),"\n",(0,i.jsx)(n.p,{children:"Prefabs handle client/server separation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"inst.entity:SetPristine()\n\nif not TheWorld.ismastersim then\n    return inst\nend\n\n-- Server-only code here\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"SetPristine()"})," call marks the entity as ready for network replication, and the ",(0,i.jsx)(n.code,{children:"ismastersim"})," check ensures server-specific code only runs on the server."]}),"\n",(0,i.jsx)(n.h2,{id:"related-systems",children:"Related Systems"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Entity system"}),"\n",(0,i.jsx)(n.li,{children:"Component system"}),"\n",(0,i.jsx)(n.li,{children:"Asset loading system"}),"\n",(0,i.jsx)(n.li,{children:"Spawning system"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);