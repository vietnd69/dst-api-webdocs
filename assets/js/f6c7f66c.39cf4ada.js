"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[68680],{6559:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/development-tools/utilities/generickv","title":"Generic Key-Value Store","description":"Wrapper for TheInventory synchronization providing persistent key-value storage","source":"@site/docs/game-scripts/core-systems/development-tools/utilities/generickv.md","sourceDirName":"game-scripts/core-systems/development-tools/utilities","slug":"/game-scripts/core-systems/development-tools/utilities/generickv","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/utilities/generickv","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"generickv","title":"Generic Key-Value Store","description":"Wrapper for TheInventory synchronization providing persistent key-value storage","sidebar_position":4,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Fix Character Strings","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/utilities/fix-character-strings"},"next":{"title":"Known Errors","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/utilities/knownerrors"}}');var r=s(74848),l=s(28453);const t={id:"generickv",title:"Generic Key-Value Store",description:"Wrapper for TheInventory synchronization providing persistent key-value storage",sidebar_position:4,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Generic Key-Value Store",o={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Class: GenericKV",id:"class-generickv",level:2},{value:"Constructor",id:"constructor",level:3},{value:"GenericKV()",id:"constructor",level:4},{value:"Methods",id:"methods",level:2},{value:"inst(key)",id:"get-kv",level:3},{value:"inst(key, value)",id:"set-kv",level:3},{value:"inst(force_save)",id:"save",level:3},{value:"inst()",id:"load",level:3},{value:"inst()",id:"apply-online-profile-data",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"TheInventory Integration",id:"theinventory-integration",level:3},{value:"Network Integration",id:"network-integration",level:3},{value:"Data Format",id:"data-format",level:2},{value:"Persistent Storage Format",id:"persistent-storage-format",level:3},{value:"Memory Structure",id:"memory-structure",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Basic Key-Value Operations",id:"basic-key-value-operations",level:3},{value:"Online Profile Synchronization",id:"online-profile-synchronization",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Limitations and Warnings",id:"limitations-and-warnings",level:2},{value:"Mod Usage Warning",id:"mod-usage-warning",level:3},{value:"Value Type Restriction",id:"value-type-restriction",level:3},{value:"Save State Requirements",id:"save-state-requirements",level:3},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"generic-key-value-store",children:"Generic Key-Value Store"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"generickv.lua"})," module provides a ",(0,r.jsx)(n.code,{children:"GenericKV"})," class that acts as a wrapper for TheInventory synchronization steps. It offers persistent key-value storage functionality with automatic saving and loading capabilities."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"Important Note"}),": This module is designed for internal game use and TheInventory synchronization. Mods should use other saving methods as this storage system is not safe for mod data."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Create a new GenericKV instance\nlocal kv_store = GenericKV()\n\n-- Load existing data\nkv_store:Load()\n\n-- Set a value\nkv_store:SetKV("player_setting", "value")\n\n-- Get a value\nlocal setting = kv_store:GetKV("player_setting")\n\n-- Apply online profile data\nkv_store:ApplyOnlineProfileData()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"class-generickv",children:"Class: GenericKV"}),"\n",(0,r.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.h4,{id:"constructor",children:"GenericKV()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates a new GenericKV instance with empty key-value storage."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["(GenericKV): New instance with initialized empty ",(0,r.jsx)(n.code,{children:"kvs"})," table"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kvs"})," (table): Internal key-value storage table"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"save_enabled"})," (boolean): Whether saving is enabled"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dirty"})," (boolean): Whether data has been modified"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"synced"})," (boolean): Whether data is synced with online profile"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"loaded"})," (boolean): Whether data has been loaded from disk"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(n.h3,{id:"get-kv",children:["inst",":GetKV","(key)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRetrieves a value from the key-value store."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"})," (string): The key to look up"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(string/nil): The stored value or nil if key doesn't exist"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nlocal value = kv:GetKV("my_setting")\nif value then\n    print("Setting value:", value)\nelse\n    print("Setting not found")\nend\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"set-kv",children:["inst",":SetKV","(key, value)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSets a key-value pair in the store. Only works when save is enabled and value is different from current value."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"})," (string): The key to set"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," (string): The value to store (must be a string)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if the value was successfully set, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nkv.save_enabled = true  -- Enable saving\n\nlocal success = kv:SetKV("user_preference", "dark_mode")\nif success then\n    print("Value set successfully")\nelse\n    print("Failed to set value")\nend\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Includes automatic TheInventory synchronization on non-dedicated servers"}),"\n",(0,r.jsx)(n.li,{children:"Triggers automatic save when save_enabled is true"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"save",children:["inst",":Save","(force_save)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSaves the key-value data to persistent storage using JSON encoding."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"force_save"})," (boolean): Whether to force save regardless of dirty state"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nkv.save_enabled = true\nkv:SetKV("setting", "value")\nkv:Save(true)  -- Force save\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Technical Details:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"TheSim:SetPersistentString()"}),' with filename "generickv"']}),"\n",(0,r.jsxs)(n.li,{children:["Encodes data as JSON: ",(0,r.jsx)(n.code,{children:"{kvs = self.kvs}"})]}),"\n",(0,r.jsx)(n.li,{children:"Clears dirty flag after successful save"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"load",children:["inst",":Load","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nLoads key-value data from persistent storage. Uses asynchronous loading with callback."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local kv = GenericKV()\nkv:Load()\n-- Data will be available after the async callback completes\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Technical Details:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"TheSim:GetPersistentString()"}),' with filename "generickv"']}),"\n",(0,r.jsx)(n.li,{children:"Handles JSON decoding with error checking"}),"\n",(0,r.jsxs)(n.li,{children:["Sets ",(0,r.jsx)(n.code,{children:"loaded"})," flag to true on successful load"]}),"\n",(0,r.jsx)(n.li,{children:"Prints error message if loading or parsing fails"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"apply-online-profile-data",children:["inst",":ApplyOnlineProfileData","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSynchronizes local data with online profile data from TheInventory system."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if synchronization was successful, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nif kv:ApplyOnlineProfileData() then\n    print("Successfully synced with online profile")\nelse\n    print("Sync not available or already completed")\nend\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Synchronization Conditions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Must not already be synced (",(0,r.jsx)(n.code,{children:"self.synced"})," is false)"]}),"\n",(0,r.jsx)(n.li,{children:"Must have offline skin support OR be in online mode"}),"\n",(0,r.jsx)(n.li,{children:"Must have downloaded inventory data"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Technical Details:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"TheInventory:GetLocalGenericKV()"})," to get online data"]}),"\n",(0,r.jsxs)(n.li,{children:["Sets ",(0,r.jsx)(n.code,{children:"synced"})," flag to true after successful sync"]}),"\n",(0,r.jsx)(n.li,{children:"Automatically saves to disk if no local save data exists"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,r.jsx)(n.h3,{id:"theinventory-integration",children:"TheInventory Integration"}),"\n",(0,r.jsx)(n.p,{children:"The GenericKV system integrates with several game systems:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Check inventory support\nif TheInventory:HasSupportForOfflineSkins() then\n    -- Can sync offline\nend\n\nif TheInventory:HasDownloadedInventory() then\n    -- Online data is available\nend\n\n-- Set values in TheInventory (non-dedicated servers only)\nif not TheNet:IsDedicated() then\n    TheInventory:SetGenericKVValue(key, value)\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-integration",children:"Network Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Check if running on dedicated server\nif TheNet:IsDedicated() then\n    -- Skip TheInventory updates\nend\n\n-- Check online mode\nif TheNet:IsOnlineMode() then\n    -- Can use online features\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"data-format",children:"Data Format"}),"\n",(0,r.jsx)(n.h3,{id:"persistent-storage-format",children:"Persistent Storage Format"}),"\n",(0,r.jsx)(n.p,{children:"Data is stored as JSON in the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "kvs": {\n    "key1": "value1",\n    "key2": "value2"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"memory-structure",children:"Memory Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Internal kvs table structure\nself.kvs = {\n    ["setting_name"] = "setting_value",\n    ["user_preference"] = "preference_value",\n    ["cached_data"] = "cached_value"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"basic-key-value-operations",children:"Basic Key-Value Operations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nkv.save_enabled = true\nkv:Load()\n\n-- Set multiple values\nkv:SetKV("theme", "dark")\nkv:SetKV("language", "en")\nkv:SetKV("volume", "0.8")\n\n-- Read values with defaults\nlocal theme = kv:GetKV("theme") or "light"\nlocal language = kv:GetKV("language") or "en"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"online-profile-synchronization",children:"Online Profile Synchronization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nkv:Load()\n\n-- Try to sync with online profile\nif kv:ApplyOnlineProfileData() then\n    print("Using online profile data")\nelse\n    print("Using local data")\nend\n\n-- Now safe to read/write values\nkv.save_enabled = true\nkv:SetKV("last_sync", tostring(os.time()))\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local kv = GenericKV()\nkv:Load()\n\n-- Wait for load to complete before using\n-- Note: Load is asynchronous, so you may need to wait\n\nlocal function try_set_value()\n    if kv.loaded then\n        kv.save_enabled = true\n        local success = kv:SetKV("test_key", "test_value")\n        if not success then\n            print("Failed to set value - save not enabled or same value")\n        end\n    else\n        print("Data not loaded yet")\n    end\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"limitations-and-warnings",children:"Limitations and Warnings"}),"\n",(0,r.jsx)(n.h3,{id:"mod-usage-warning",children:"Mod Usage Warning"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"Critical"}),": Do not use GenericKV for mod data storage. This system is designed for TheInventory synchronization and is not safe for mod use."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"value-type-restriction",children:"Value Type Restriction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Only strings are allowed as values\nkv:SetKV("valid", "string_value")  -- \u2713 Valid\n\n-- These will cause assertion errors:\n-- kv:SetKV("invalid", 123)        -- \u2717 Number\n-- kv:SetKV("invalid", {})         -- \u2717 Table\n-- kv:SetKV("invalid", true)       -- \u2717 Boolean\n'})}),"\n",(0,r.jsx)(n.h3,{id:"save-state-requirements",children:"Save State Requirements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- save_enabled must be true for SetKV to work\nlocal kv = GenericKV()\nkv:SetKV("test", "value")  -- Returns false - save not enabled\n\nkv.save_enabled = true\nkv:SetKV("test", "value")  -- Returns true - will save\n'})}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./json.md",children:"JSON"}),": JSON encoding/decoding functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../systems/inventory.md",children:"TheInventory"}),": Inventory synchronization system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../systems/persistence.md",children:"Persistent Storage"}),": Game save/load systems"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);