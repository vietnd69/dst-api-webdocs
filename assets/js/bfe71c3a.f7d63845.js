"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[91103],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},44858:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"game-scripts/core-systems/character-systems/customization/skin-set-info","title":"Skin Set Info","description":"Coordinated skin set definitions for emotes and themed item collections in Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/character-systems/customization/skin_set_info.md","sourceDirName":"game-scripts/core-systems/character-systems/customization","slug":"/game-scripts/core-systems/character-systems/customization/skin-set-info","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-set-info","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"skin-set-info","title":"Skin Set Info","description":"Coordinated skin set definitions for emotes and themed item collections in Don\'t Starve Together","sidebar_position":6,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Skin Gifts","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-gifts"},"next":{"title":"Skins Definitions Data","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skins-defs-data"}}');var t=s(74848),r=s(28453);const l={id:"skin-set-info",title:"Skin Set Info",description:"Coordinated skin set definitions for emotes and themed item collections in Don't Starve Together",sidebar_position:6,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Skin Set Info",o={},c=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Emote-Based Skin Sets",id:"emote-based-skin-sets",level:2},{value:"emote_carol",id:"emote_carol",level:3},{value:"emote_fistshake",id:"emote_fistshake",level:3},{value:"emote_sleepy",id:"emote_sleepy",level:3},{value:"emote_yawn",id:"emote_yawn",level:3},{value:"emote_tiphat",id:"emote_tiphat",level:3},{value:"Item-Based Skin Sets",id:"item-based-skin-sets",level:2},{value:"Ugly Sweater Collections",id:"ugly-sweater-collections",level:3},{value:"Skin Set Components",id:"skin-set-components",level:2},{value:"Character Skin Components",id:"character-skin-components",level:3},{value:"Item Skin Components",id:"item-skin-components",level:3},{value:"Functions",id:"functions",level:2},{value:"Skin Set Utilities",id:"skin-set-utilities",level:3},{value:"Theme Analysis",id:"theme-analysis",level:3},{value:"Theme Statistics",id:"theme-statistics",level:2},{value:"emote_carol Coverage",id:"emote_carol-coverage",level:3},{value:"emote_fistshake Coverage",id:"emote_fistshake-coverage",level:3},{value:"Pajama Set Collections",id:"pajama-set-collections",level:3},{value:"emote_tiphat Coverage",id:"emote_tiphat-coverage",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"Emote Integration",id:"emote-integration",level:3},{value:"Themed Promotions",id:"themed-promotions",level:3},{value:"Auto-Generation",id:"auto-generation",level:2},{value:"Related Modules",id:"related-modules",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"skin-set-info",children:"Skin Set Info"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"skin_set_info.lua"})," file defines coordinated skin set collections for emotes and themed item groups in Don't Starve Together. This file is automatically generated by the ",(0,t.jsx)(n.code,{children:"export_accountitems.lua"})," script and provides curated combinations of skins that work together thematically, ensuring visual consistency when players use special emotes or equip themed item sets."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Access skin set information\nlocal skin_set_info = require("skin_set_info")\n\n-- Get all skin sets for a specific emote\nlocal function get_emote_skin_sets(emote_name)\n    return skin_set_info[emote_name] or {}\nend\n\n-- Check if character has a skin in specific set\nlocal function character_in_skin_set(character, skin_set)\n    for _, skin_item in ipairs(skin_set) do\n        if string.find(skin_item, character) then\n            return true\n        end\n    end\n    return false\nend\n\n-- Example: Get all carol emote skin sets\nlocal carol_sets = get_emote_skin_sets("emote_carol")\n-- Returns arrays of coordinated ice/yule themed skins for each character\n'})}),"\n",(0,t.jsx)(n.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,t.jsx)(n.p,{children:"The file returns a table where each key represents an emote or themed collection, and each value is an array of skin set arrays:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    ["emote_name"] = {\n        { "skin1", "skin2", "skin3" },  -- First coordinated set\n        { "skin4", "skin5" },           -- Second coordinated set\n        -- ... more sets\n    },\n    ["item_collection"] = {\n        { "item_skin1", "matching_item2" }, -- Themed item collection\n        -- ... more collections\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"emote-based-skin-sets",children:"Emote-Based Skin Sets"}),"\n",(0,t.jsx)(n.h3,{id:"emote_carol",children:"emote_carol"}),"\n",(0,t.jsx)(n.p,{children:"Holiday-themed skin sets for caroling emote, featuring ice and yule themes:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ice Theme Sets"})," (Winter/Frost themed):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    "webber_ice", "body_webber_ice", "legs_webber_ice", "feet_webber_ice"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Yule Theme Sets"})," (Holiday/Christmas themed):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    "wathgrithr_yule", "body_wathgrithr_yule", "feet_wathgrithr_yule", "hand_wathgrithr_yule"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Supported Characters"}),": All main characters with both ice and yule variants"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Wilson, Willow, Wolfgang, Wendy, WX-78, Wickerbottom"}),"\n",(0,t.jsx)(n.li,{children:"Woodie, Wes, Waxwell, Wathgrithr, Webber, Winona"}),"\n",(0,t.jsx)(n.li,{children:"Walter, Warly, Wormwood, Wortox, Wurt, Wanda"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"emote_fistshake",children:"emote_fistshake"}),"\n",(0,t.jsx)(n.p,{children:"Gladiator-themed skin sets for fist shake emote:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    "wilson_gladiator", "body_wilson_gladiator", "hand_wilson_gladiator", \n    "legs_wilson_gladiator", "feet_wilson_gladiator"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Theme"}),": Ancient Roman gladiator aesthetic with coordinated armor pieces"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Supported Characters"}),": 12 characters with complete gladiator outfits"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Full body coverage: Wilson, Willow, Wolfgang, WX-78, Woodie, Waxwell, Wathgrithr, Winona"}),"\n",(0,t.jsx)(n.li,{children:"Partial coverage: Wendy, Wickerbottom, Wes, Webber"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"emote_sleepy",children:"emote_sleepy"}),"\n",(0,t.jsx)(n.p,{children:"Pajama and bedroll coordinated sets for sleepy emote:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    "body_pj_blue_agean", "legs_pj_blue_agean", "bedroll_furry_quilt_blue_frost"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Theme Categories"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blue Frost"}),": ",(0,t.jsx)(n.code,{children:"blue_agean"})," pajamas + ",(0,t.jsx)(n.code,{children:"blue_frost"})," quilt bedroll"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Red Bird"}),": ",(0,t.jsx)(n.code,{children:"red_redbird"})," pajamas + ",(0,t.jsx)(n.code,{children:"red_redbird"})," quilt bedroll"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Grey"}),": ",(0,t.jsx)(n.code,{children:"grey"})," pajamas + ",(0,t.jsx)(n.code,{children:"grey"})," quilt bedroll"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"emote_yawn",children:"emote_yawn"}),"\n",(0,t.jsx)(n.p,{children:"Alternative pajama sets for yawn emote:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    "body_pj_purple_mauve", "legs_pj_purple_mauve", "bedroll_furry_quilt_white_ivory"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Theme Categories"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purple Mauve"}),": Purple pajamas + white ivory quilt"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Green Hunters"}),": Green pajamas + matching green quilt"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Orange Honey"}),": Orange pajamas + matching orange quilt"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"emote_tiphat",children:"emote_tiphat"}),"\n",(0,t.jsx)(n.p,{children:"Western-themed skin sets for tip hat emote:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    "wanda_western", "body_wanda_western", "hand_wanda_western", "legs_wanda_western"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Theme"}),": Wild West/Cowboy aesthetic",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Supported Characters"}),": Wanda, Wathgrithr, Wes with western outfits"]}),"\n",(0,t.jsx)(n.h2,{id:"item-based-skin-sets",children:"Item-Based Skin Sets"}),"\n",(0,t.jsx)(n.h3,{id:"ugly-sweater-collections",children:"Ugly Sweater Collections"}),"\n",(0,t.jsx)(n.p,{children:"Special winter hat combinations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'body_ugly_winterhat_black_davys = {\n    { "winterhat_black_davys" }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Available Variants"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Black Davy's"}),": ",(0,t.jsx)(n.code,{children:"winterhat_black_davys"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pink Hibiscus"}),": ",(0,t.jsx)(n.code,{children:"winterhat_pink_hibiscus"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These represent limited seasonal items with coordinated appearance themes."}),"\n",(0,t.jsx)(n.h2,{id:"skin-set-components",children:"Skin Set Components"}),"\n",(0,t.jsx)(n.h3,{id:"character-skin-components",children:"Character Skin Components"}),"\n",(0,t.jsx)(n.p,{children:"Each character skin set typically includes:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Component"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Example"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Base Character"}),(0,t.jsx)(n.td,{children:"Core character appearance"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"wilson_gladiator"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Body Costume"}),(0,t.jsx)(n.td,{children:"Main clothing/outfit"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"body_wilson_gladiator"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Hand Accessories"}),(0,t.jsx)(n.td,{children:"Gloves, bracers, rings"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"hand_wilson_gladiator"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Leg Pieces"}),(0,t.jsx)(n.td,{children:"Pants, armor, legwear"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"legs_wilson_gladiator"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Feet Accessories"}),(0,t.jsx)(n.td,{children:"Shoes, boots, sandals"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"feet_wilson_gladiator"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Special Items"}),(0,t.jsx)(n.td,{children:"Character-specific accessories"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"walterhat_ice"})})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"item-skin-components",children:"Item Skin Components"}),"\n",(0,t.jsx)(n.p,{children:"Themed item collections include:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Component"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Example"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Clothing Items"}),(0,t.jsx)(n.td,{children:"Pajamas, formal wear"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"body_pj_blue_agean"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Furniture Items"}),(0,t.jsx)(n.td,{children:"Beds, decorative items"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bedroll_furry_quilt_blue_frost"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Accessories"}),(0,t.jsx)(n.td,{children:"Hats, special items"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"winterhat_black_davys"})})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"skin-set-utilities",children:"Skin Set Utilities"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Get all characters in an emote\'s skin sets\nlocal function get_emote_characters(emote_name)\n    local characters = {}\n    local sets = skin_set_info[emote_name] or {}\n    \n    for _, skin_set in ipairs(sets) do\n        for _, skin_item in ipairs(skin_set) do\n            -- Extract character name from skin item\n            local character = string.match(skin_item, "^([^_]+)_")\n            if character and not characters[character] then\n                characters[character] = true\n            end\n        end\n    end\n    \n    return characters\nend\n\n-- Find matching skin set for character and theme\nlocal function find_character_skin_set(character, theme, emote_name)\n    local sets = skin_set_info[emote_name] or {}\n    \n    for _, skin_set in ipairs(sets) do\n        local base_skin = character .. "_" .. theme\n        for _, skin_item in ipairs(skin_set) do\n            if skin_item == base_skin then\n                return skin_set\n            end\n        end\n    end\n    return nil\nend\n\n-- Validate skin set completeness\nlocal function validate_skin_set(skin_set)\n    local has_base = false\n    local has_body = false\n    \n    for _, skin_item in ipairs(skin_set) do\n        if not string.find(skin_item, "_") then\n            has_base = true\n        elseif string.find(skin_item, "^body_") then\n            has_body = true\n        end\n    end\n    \n    return has_base and has_body\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"theme-analysis",children:"Theme Analysis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Extract themes from skin sets\nlocal function get_available_themes(emote_name)\n    local themes = {}\n    local sets = skin_set_info[emote_name] or {}\n    \n    for _, skin_set in ipairs(sets) do\n        for _, skin_item in ipairs(skin_set) do\n            local theme = string.match(skin_item, "_([^_]+)$")\n            if theme and not themes[theme] then\n                themes[theme] = true\n            end\n        end\n    end\n    \n    return themes\nend\n\n-- Count skin sets by theme\nlocal function count_sets_by_theme(emote_name)\n    local theme_counts = {}\n    local sets = skin_set_info[emote_name] or {}\n    \n    for _, skin_set in ipairs(sets) do\n        local theme = nil\n        for _, skin_item in ipairs(skin_set) do\n            theme = string.match(skin_item, "_([^_]+)$")\n            if theme then break end\n        end\n        \n        if theme then\n            theme_counts[theme] = (theme_counts[theme] or 0) + 1\n        end\n    end\n    \n    return theme_counts\nend\n'})}),"\n",(0,t.jsx)(n.h2,{id:"theme-statistics",children:"Theme Statistics"}),"\n",(0,t.jsx)(n.h3,{id:"emote_carol-coverage",children:"emote_carol Coverage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total Sets"}),": 32 coordinated character outfits"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ice Theme"}),": 16 character sets (winter aesthetic)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Yule Theme"}),": 16 character sets (holiday aesthetic)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Character Coverage"}),": All main DST characters included"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"emote_fistshake-coverage",children:"emote_fistshake Coverage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total Sets"}),": 12 gladiator-themed character outfits"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Theme"}),": Ancient Roman gladiator aesthetic"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Completeness"}),": Mix of full and partial costume sets"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pajama-set-collections",children:"Pajama Set Collections"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"emote_sleepy"}),": 3 coordinated pajama + bedroll combinations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"emote_yawn"}),": 3 additional pajama + bedroll combinations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total"}),": 6 different color/style variations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"emote_tiphat-coverage",children:"emote_tiphat Coverage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total Sets"}),": 3 western-themed character outfits"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Characters"}),": Wanda, Wathgrithr, Wes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Theme"}),": Wild West/Cowboy aesthetic"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,t.jsx)(n.p,{children:"This system integrates with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Emote System"}),": Triggers coordinated skin displays during emotes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Character Customization"}),": Provides themed outfit suggestions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UI System"}),": Groups related skins in customization menus"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Gift System"}),": Bundles coordinated items in promotional packages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event System"}),": Activates seasonal and thematic skin collections"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"emote-integration",children:"Emote Integration"}),"\n",(0,t.jsx)(n.p,{children:"When players perform specific emotes, the game can:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Check Active Skins"}),": Verify which character skins are currently equipped"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Find Matching Sets"}),": Locate coordinated skin sets for the emote"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apply Temporary Effects"}),": Enhance emote visual effects with themed skins"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Show Recommendations"}),": Suggest completing skin sets to players"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"themed-promotions",children:"Themed Promotions"}),"\n",(0,t.jsx)(n.p,{children:"Skin sets enable promotional strategies:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Bundle Sales"}),": Package coordinated items together"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Seasonal Events"}),": Activate holiday-themed collections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Achievement Rewards"}),": Grant complete themed sets as rewards"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Social Features"}),": Show coordinated group appearances"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"auto-generation",children:"Auto-Generation"}),"\n",(0,t.jsx)(n.p,{children:"This file is automatically generated and should not be manually edited:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Source"}),": ",(0,t.jsx)(n.code,{children:"export_accountitems.lua"})," analyzes item relationships"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Curation Process"}),": Algorithms identify thematically coherent skin combinations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validation"}),": Ensures all referenced skins exist and are properly themed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Update Trigger"}),": New emotes, seasonal events, or themed content releases"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-affinity-info",children:(0,t.jsx)(n.code,{children:"skin_affinity_info"})}),": Character-specific skin associations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-gifts",children:(0,t.jsx)(n.code,{children:"skin_gifts"})}),": Gift system integration for skin items"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/skin-assets",children:(0,t.jsx)(n.code,{children:"skin_assets"})}),": Asset loading for visual resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./emotes.md",children:(0,t.jsx)(n.code,{children:"emotes"})}),": Emote system and animation triggers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./playerprofile.md",children:(0,t.jsx)(n.code,{children:"playerprofile"})}),": Player customization and preferences"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);