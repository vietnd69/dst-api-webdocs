"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[43240],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},34113:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"game-scripts/core-systems/system-core/engine/main","title":"Main Entry Point","description":"Core game initialization script containing platform detection, system setup, and asset loading","source":"@site/docs/game-scripts/core-systems/system-core/engine/main.md","sourceDirName":"game-scripts/core-systems/system-core/engine","slug":"/game-scripts/core-systems/system-core/engine/main","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/main","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"main","title":"Main Entry Point","description":"Core game initialization script containing platform detection, system setup, and asset loading","sidebar_position":1,"last_updated":"2025-06-25T00:00:00.000Z","build_version":676312,"change_status":"modified"},"sidebar":"docs","previous":{"title":"Engine System Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/"},"next":{"title":"Main Functions","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/mainfunctions"}}');var r=s(74848),l=s(28453);const t={id:"main",title:"Main Entry Point",description:"Core game initialization script containing platform detection, system setup, and asset loading",sidebar_position:1,last_updated:new Date("2025-06-25T00:00:00.000Z"),build_version:676312,change_status:"modified"},d="Main Entry Point",a={},o=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Platform Detection Functions",id:"platform-detection-functions",level:2},{value:"IsConsole()",id:"is-console",level:3},{value:"IsNotConsole()",id:"is-not-console",level:3},{value:"IsSteam()",id:"is-steam",level:3},{value:"IsWin32()",id:"is-win32",level:3},{value:"IsLinux()",id:"is-linux",level:3},{value:"IsRail()",id:"is-rail",level:3},{value:"IsSteamDeck()",id:"is-steam-deck",level:3},{value:"ValidateLineNumber(num)",id:"validate-line-number",level:3},{value:"Game Configuration Constants",id:"game-configuration-constants",level:2},{value:"MAIN",id:"main",level:3},{value:"ENCODE_SAVES",id:"encode_saves",level:3},{value:"CHEATS_ENABLED",id:"cheats_enabled",level:3},{value:"DEBUG_MENU_ENABLED",id:"debug_menu_enabled",level:3},{value:"METRICS_ENABLED",id:"metrics_enabled",level:3},{value:"Network Configuration",id:"network-configuration",level:2},{value:"DEFAULT_JOIN_IP",id:"default_join_ip",level:3},{value:"DISABLE_MOD_WARNING",id:"disable_mod_warning",level:3},{value:"DEFAULT_SERVER_SAVE_FILE",id:"default_server_save_file",level:3},{value:"Global Instances",id:"global-instances",level:2},{value:"TheGlobalInstance",id:"theglobalinstance",level:3},{value:"TheCamera",id:"thecamera",level:3},{value:"ShadowManager",id:"shadowmanager",level:3},{value:"PostProcessor",id:"postprocessor",level:3},{value:"FontManager",id:"fontmanager",level:3},{value:"Asset Loading",id:"asset-loading",level:2},{value:"Package Path Configuration",id:"package-path-configuration",level:3},{value:"Asset Resolution",id:"asset-resolution",level:3},{value:"System Initialization",id:"system-initialization",level:2},{value:"Startup Sequence",id:"startup-sequence",level:2},{value:"ModSafeStartup()",id:"modsafestartup",level:3},{value:"GlobalInit()",id:"globalinit",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"main-entry-point",children:"Main Entry Point"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676312"}),(0,r.jsx)(n.td,{children:"2025-06-25"}),(0,r.jsx)(n.td,{children:"modified"}),(0,r.jsx)(n.td,{children:"Added ValidateLineNumber function"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Previous version"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"main.lua"})," script serves as the primary entry point for Don't Starve Together. It handles platform detection, game configuration, asset loading, and initialization of core game systems. This script sets up the fundamental environment required for the game to run across different platforms."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- The main script is automatically executed at game startup\n-- Platform detection example:\nif IsSteam() then\n    print("Running on Steam platform")\nelseif IsConsole() then\n    print("Running on console platform")\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"platform-detection-functions",children:"Platform Detection Functions"}),"\n",(0,r.jsx)(n.h3,{id:"is-console",children:"IsConsole()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDetermines if the game is running on a console platform (PS4, Xbox One, or Switch)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if running on console platform"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'if IsConsole() then\n    -- Console-specific logic\n    print("Console platform detected")\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"is-not-console",children:"IsNotConsole()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDetermines if the game is NOT running on a console platform."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if not running on console platform"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"if IsNotConsole() then\n    -- PC/Mobile-specific logic\n    EnableAdvancedSettings()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"is-steam",children:"IsSteam()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the game is running on any Steam platform (Windows, Linux, or macOS Steam)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if running on Steam"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"if IsSteam() then\n    -- Enable Steam Workshop integration\n    LoadSteamWorkshopMods()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"is-win32",children:"IsWin32()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDetermines if the game is running on Windows (Steam or Rail)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if running on Windows"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"is-linux",children:"IsLinux()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the game is running on Linux Steam."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if running on Linux"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"is-rail",children:"IsRail()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDetermines if the game is running on the Rail platform (WeGame)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if running on Rail platform"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"is-steam-deck",children:"IsSteamDeck()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the game is running on Steam Deck."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if running on Steam Deck"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"validate-line-number",children:"ValidateLineNumber(num)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"added in 676312"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Source:"})," ",(0,r.jsx)(n.a,{href:"mdc:dst-api-webdocs/dst-scripts/main.lua",children:"dst-scripts/main.lua"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nValidates line numbers for debugging purposes. This function is called by the simulation system to ensure proper line number tracking."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"num"})," (number): Line number to validate"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Called internally by simulation system\nValidateLineNumber(42)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Added in build 676312: New debugging utility function"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"game-configuration-constants",children:"Game Configuration Constants"}),"\n",(0,r.jsx)(n.h3,{id:"main",children:"MAIN"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"1"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Identifies this as the main game instance."]}),"\n",(0,r.jsx)(n.h3,{id:"encode_saves",children:"ENCODE_SAVES"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:'BRANCH ~= "dev"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Determines whether save files should be encoded based on the game branch."]}),"\n",(0,r.jsx)(n.h3,{id:"cheats_enabled",children:"CHEATS_ENABLED"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:'CONFIGURATION ~= "PRODUCTION"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Enables cheat functionality in non-production builds."]}),"\n",(0,r.jsx)(n.h3,{id:"debug_menu_enabled",children:"DEBUG_MENU_ENABLED"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Controls availability of debug menu based on branch and platform."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"if DEBUG_MENU_ENABLED then\n    ShowDebugMenu()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"metrics_enabled",children:"METRICS_ENABLED"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Enables metrics collection for analytics."]}),"\n",(0,r.jsx)(n.h2,{id:"network-configuration",children:"Network Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"default_join_ip",children:"DEFAULT_JOIN_IP"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:'"127.0.0.1"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Default IP address for local server connections."]}),"\n",(0,r.jsx)(n.h3,{id:"disable_mod_warning",children:"DISABLE_MOD_WARNING"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"false"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Controls whether mod warning dialogs are shown."]}),"\n",(0,r.jsx)(n.h3,{id:"default_server_save_file",children:"DEFAULT_SERVER_SAVE_FILE"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:'"/server_save"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Default filename for server save files."]}),"\n",(0,r.jsx)(n.h2,{id:"global-instances",children:"Global Instances"}),"\n",(0,r.jsx)(n.h3,{id:"theglobalinstance",children:"TheGlobalInstance"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nThe main global entity that manages core game systems and components."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Non-networked entity"}),"\n",(0,r.jsx)(n.li,{children:"Cannot sleep"}),"\n",(0,r.jsx)(n.li,{children:"Does not persist"}),"\n",(0,r.jsx)(n.li,{children:'Tagged as "CLASSIFIED"'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"thecamera",children:"TheCamera"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nGlobal camera instance using FollowCamera system."]}),"\n",(0,r.jsx)(n.h3,{id:"shadowmanager",children:"ShadowManager"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nManages shadow rendering and textures."]}),"\n",(0,r.jsx)(n.h3,{id:"postprocessor",children:"PostProcessor"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nHandles post-processing effects and shaders."]}),"\n",(0,r.jsx)(n.h3,{id:"fontmanager",children:"FontManager"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nManages font loading and rendering."]}),"\n",(0,r.jsx)(n.h2,{id:"asset-loading",children:"Asset Loading"}),"\n",(0,r.jsx)(n.h3,{id:"package-path-configuration",children:"Package Path Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The script configures Lua package paths for mod and script loading:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'package.path = "scripts\\\\?.lua;scriptlibs\\\\?.lua"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"asset-resolution",children:"Asset Resolution"}),"\n",(0,r.jsx)(n.p,{children:"The custom loader handles asset resolution for mods and base game files, ensuring proper file loading across different directory structures."}),"\n",(0,r.jsx)(n.h2,{id:"system-initialization",children:"System Initialization"}),"\n",(0,r.jsx)(n.p,{children:"The main script initializes critical game systems in order:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Core Libraries:"})," Math, utilities, configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Localization:"})," Language and string systems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Game Systems:"})," Prefabs, recipes, networking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rendering:"})," Fonts, physics, graphics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mod Support:"})," Mod loading and management"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"startup-sequence",children:"Startup Sequence"}),"\n",(0,r.jsx)(n.h3,{id:"modsafestartup",children:"ModSafeStartup()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nHandles safe mod loading and game system initialization."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Process:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Clear filesystem aliases"}),"\n",(0,r.jsx)(n.li,{children:"Load mods with error handling"}),"\n",(0,r.jsx)(n.li,{children:"Apply translations"}),"\n",(0,r.jsx)(n.li,{children:"Register prefabs"}),"\n",(0,r.jsx)(n.li,{children:"Initialize global systems"}),"\n",(0,r.jsx)(n.li,{children:"Set up rendering pipeline"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"globalinit",children:"GlobalInit()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nOne-time initialization for global game systems."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Process:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Load global prefabs"}),"\n",(0,r.jsx)(n.li,{children:"Initialize fonts"}),"\n",(0,r.jsx)(n.li,{children:"Send hardware statistics"}),"\n",(0,r.jsx)(n.li,{children:"Set up networking flags"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"The script includes comprehensive error handling for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"File loading failures"}),"\n",(0,r.jsx)(n.li,{children:"Mod conflicts"}),"\n",(0,r.jsx)(n.li,{children:"Asset resolution issues"}),"\n",(0,r.jsx)(n.li,{children:"System initialization problems"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/mainfunctions",children:"MainFunctions"}),": Core game functions and utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./prefabs.md",children:"Prefabs"}),": Prefab registration and management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./modindex.md",children:"ModIndex"}),": Mod loading and management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./networking.md",children:"Networking"}),": Network system initialization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./fonthelper.md",children:"FontHelper"}),": Font loading and management"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);