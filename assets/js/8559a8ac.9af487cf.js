"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[98907],{13010:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"game-scripts/core-systems/mod-support/core/mods","title":"Mods System","description":"Core mod loading and management system for Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/mod-support/core/mods.md","sourceDirName":"game-scripts/core-systems/mod-support/core","slug":"/game-scripts/core-systems/mod-support/core/mods","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/mods","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"mods","title":"Mods System","description":"Core mod loading and management system for Don\'t Starve Together","sidebar_position":1,"last_updated":"2025-06-25T00:00:00.000Z","build_version":676312,"change_status":"modified in build 676312"},"sidebar":"docs","previous":{"title":"Mod Support Core Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/"},"next":{"title":"Mod Index","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modindex"}}');var r=s(74848),d=s(28453);const l={id:"mods",title:"Mods System",description:"Core mod loading and management system for Don't Starve Together",sidebar_position:1,last_updated:new Date("2025-06-25T00:00:00.000Z"),build_version:676312,change_status:"modified in build 676312"},o="Mods System",a={},t=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Recent Changes",id:"recent-changes",level:2},{value:"Build 676312 Mod Loading Improvements",id:"build-676312-mod-loading-improvements",level:3},{value:"Priority Parsing Enhancement",id:"priority-parsing-enhancement",level:4},{value:"Mod Name Sorting Stability",id:"mod-name-sorting-stability",level:4},{value:"Usage Example",id:"usage-example",level:2},{value:"Constants",id:"constants",level:2},{value:"MOD_API_VERSION",id:"mod-api-version",level:3},{value:"Release IDs",id:"release-ids",level:3},{value:"Avatar Locations",id:"avatar-locations",level:3},{value:"Core Functions",id:"core-functions",level:2},{value:"AreServerModsEnabled()",id:"are-server-mods-enabled",level:3},{value:"AreAnyModsEnabled()",id:"are-any-mods-enabled",level:3},{value:"AreAnyClientModsEnabled()",id:"are-any-client-mods-enabled",level:3},{value:"AreClientModsDisabled()",id:"are-client-mods-disabled",level:3},{value:"GetEnabledModNamesDetailed()",id:"get-enabled-mod-names-detailed",level:3},{value:"GetModVersion(mod_name, mod_info_use)",id:"get-mod-version",level:3},{value:"GetEnabledModsModInfoDetails()",id:"get-enabled-mods-modinfo-details",level:3},{value:"GetEnabledServerModsConfigData()",id:"get-enabled-server-mods-config-data",level:3},{value:"Mod Loading System",id:"mod-loading-system",level:2},{value:"ModWrangler Class",id:"modwrangler-class",level:3},{value:"Mod Discovery",id:"mod-discovery",level:4},{value:"Environment Creation",id:"environment-creation",level:4},{value:"Loading Sequence",id:"loading-sequence",level:4},{value:"Prefab Registration",id:"prefab-registration",level:4},{value:"Error Handling",id:"error-handling",level:2},{value:"Bad Mod Detection",id:"bad-mod-detection",level:3},{value:"Crash Recovery",id:"crash-recovery",level:3},{value:"Mod Environment",id:"mod-environment",level:2},{value:"Safe Function Execution",id:"safe-function-execution",level:3},{value:"API Access Control",id:"api-access-control",level:3},{value:"Release ID System",id:"release-id-system",level:2},{value:"CurrentRelease.GreaterOrEqualTo(release_id)",id:"currentreleasegreaterorequaltorelease_id",level:3},{value:"AddModReleaseID(name)",id:"addmodreleaseidname",level:3},{value:"Version Checking",id:"version-checking",level:2},{value:"Version Compatibility",id:"version-compatibility",level:3},{value:"Update Detection",id:"update-detection",level:3},{value:"Integration",id:"integration",level:2},{value:"Platform Support",id:"platform-support",level:2},{value:"Steam Workshop",id:"steam-workshop",level:3},{value:"Standalone Mods",id:"standalone-mods",level:3},{value:"Configuration Management",id:"configuration-management",level:2},{value:"Mod Settings",id:"mod-settings",level:3},{value:"Override System",id:"override-system",level:3},{value:"Related Modules",id:"related-modules",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mods-system",children:"Mods System"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676312"}),(0,r.jsx)(n.td,{children:"2025-06-25"}),(0,r.jsx)(n.td,{children:"modified"}),(0,r.jsx)(n.td,{children:"Improved mod priority parsing and sorting stability"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Previous version"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"mods"})," module provides the core mod loading and management system for Don't Starve Together. It handles mod discovery, environment creation, loading sequences, and integration with the game's prefab and asset systems."]}),"\n",(0,r.jsx)(n.h2,{id:"recent-changes",children:"Recent Changes"}),"\n",(0,r.jsx)(n.h3,{id:"build-676312-mod-loading-improvements",children:"Build 676312 Mod Loading Improvements"}),"\n",(0,r.jsx)(n.p,{children:"The mod loading system was enhanced in build 676312 with better error handling for mod priority values:"}),"\n",(0,r.jsx)(n.h4,{id:"priority-parsing-enhancement",children:"Priority Parsing Enhancement"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Previous implementation (could fail on invalid strings)\nreturn tonumber(priority)\n\n-- Current implementation (676312 - provides fallback)\nreturn tonumber(priority) or 0\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Improvement:"})," The priority parsing now provides a fallback value of ",(0,r.jsx)(n.code,{children:"0"})," when ",(0,r.jsx)(n.code,{children:"tonumber()"})," fails to parse a string priority, preventing mod loading failures due to invalid priority specifications."]}),"\n",(0,r.jsx)(n.h4,{id:"mod-name-sorting-stability",children:"Mod Name Sorting Stability"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Enhanced name handling in mod sorting\nlocal bname = b.modinfo.name\nif type(bname) ~= "string" then\n    bname = b.modname\nend\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Improvement:"})," The mod sorting algorithm now has more robust handling of mod name types, ensuring stable sorting behavior even when mod info contains unexpected data types."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Check if any mods are enabled\nif AreAnyModsEnabled() then\n    print("Mods are active")\nend\n\n-- Get enabled mod details\nlocal enabled_mods = GetEnabledModNamesDetailed()\nfor i, mod_details in ipairs(enabled_mods) do\n    print("Enabled mod:", mod_details)\nend\n\n-- Get mod version\nlocal version = GetModVersion("mymod")\nprint("Mod version:", version)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,r.jsx)(n.h3,{id:"mod-api-version",children:"MOD_API_VERSION"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"10"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," The current mod API version supported by the game. Mods must specify this API version in their modinfo.lua to ensure compatibility."]}),"\n",(0,r.jsx)(n.h3,{id:"release-ids",children:"Release IDs"}),"\n",(0,r.jsx)(n.p,{children:"The system maintains a list of release IDs for mod compatibility:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Recent release IDs (partial list)\n"R35_SANITYTROUBLES"\n"R36_ST_WENDWALTWORT"\n"R37_LUNAR_CAGE"\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Release IDs allow modders to test for specific game features and ensure compatibility across different game versions."]}),"\n",(0,r.jsx)(n.h3,{id:"avatar-locations",children:"Avatar Locations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'MOD_AVATAR_LOCATIONS = { Default = "images/avatars/" }\nMOD_CRAFTING_AVATAR_LOCATIONS = { Default = "images/crafting_menu_avatars/" }\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Default paths for mod avatar and crafting menu icon assets."]}),"\n",(0,r.jsx)(n.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,r.jsx)(n.h3,{id:"are-server-mods-enabled",children:"AreServerModsEnabled()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if any server-side mods are currently enabled."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if server mods are enabled, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'if AreServerModsEnabled() then\n    print("Server has mods enabled")\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"are-any-mods-enabled",children:"AreAnyModsEnabled()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if any mods (server or client) are currently enabled."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if any mods are enabled, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"are-any-client-mods-enabled",children:"AreAnyClientModsEnabled()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if any client-only mods are currently enabled."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if client mods are enabled, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"are-client-mods-disabled",children:"AreClientModsDisabled()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if client mods have been explicitly disabled."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if client mods are disabled, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"get-enabled-mod-names-detailed",children:"GetEnabledModNamesDetailed()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns detailed information about all enabled mods, including names, versions, and API versions. Used primarily for error reporting and callstack analysis."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(table): Array of detailed mod information strings"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local mod_details = GetEnabledModNamesDetailed()\nfor i, details in ipairs(mod_details) do\n    print("Mod details:", details)\n    -- Output example: "workshop-12345:Better Farming version: 2.1 api_version: 10"\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"get-mod-version",children:"GetModVersion(mod_name, mod_info_use)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRetrieves the version string for a specified mod."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mod_name"})," (string): The mod identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mod_info_use"}),' (string): Optional parameter for updating mod info ("update_mod_info")']}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(string): The mod version string, or empty string if not found"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local version = GetModVersion("workshop-12345")\nif version ~= "" then\n    print("Mod version:", version)\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"get-enabled-mods-modinfo-details",children:"GetEnabledModsModInfoDetails()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns structured mod information for all enabled server mods, including compatibility flags and version information."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(table): Array of mod information tables"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local mods_info = GetEnabledModsModInfoDetails()\nfor i, mod_info in ipairs(mods_info) do\n    print("Mod:", mod_info.name)\n    print("Display name:", mod_info.info_name)\n    print("Version:", mod_info.version)\n    print("All clients require:", mod_info.all_clients_require_mod)\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"get-enabled-server-mods-config-data",children:"GetEnabledServerModsConfigData()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns encoded configuration data for all enabled server mods that require client synchronization."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(string): Encoded configuration data"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local config_data = GetEnabledServerModsConfigData()\n-- This data is typically sent to clients for mod synchronization\n"})}),"\n",(0,r.jsx)(n.h2,{id:"mod-loading-system",children:"Mod Loading System"}),"\n",(0,r.jsx)(n.h3,{id:"modwrangler-class",children:"ModWrangler Class"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ModWrangler"})," class handles the core mod loading functionality:"]}),"\n",(0,r.jsx)(n.h4,{id:"mod-discovery",children:"Mod Discovery"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scans mod directories for valid mod files"}),"\n",(0,r.jsx)(n.li,{children:"Validates mod structure and dependencies"}),"\n",(0,r.jsx)(n.li,{children:"Builds mod loading order based on dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"environment-creation",children:"Environment Creation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creates isolated execution environments for each mod"}),"\n",(0,r.jsx)(n.li,{children:"Provides safe access to game APIs"}),"\n",(0,r.jsx)(n.li,{children:"Handles mod-specific global variables"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"loading-sequence",children:"Loading Sequence"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Loads mods in dependency order"}),"\n",(0,r.jsx)(n.li,{children:"Handles mod initialization callbacks"}),"\n",(0,r.jsx)(n.li,{children:"Manages error recovery and bad mod detection"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prefab-registration",children:"Prefab Registration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Registers mod-defined prefabs with the game"}),"\n",(0,r.jsx)(n.li,{children:"Handles asset loading for mod prefabs"}),"\n",(0,r.jsx)(n.li,{children:"Manages prefab overrides and modifications"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"bad-mod-detection",children:"Bad Mod Detection"}),"\n",(0,r.jsx)(n.p,{children:"The system automatically detects and handles problematic mods:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Example of mod error handling\nlocal status, error = xpcall(mod_function, debug.traceback)\nif not status then\n    ModManager:RemoveBadMod(modname, error)\n    ModManager:DisplayBadMods()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"crash-recovery",children:"Crash Recovery"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Detects crashes during mod loading"}),"\n",(0,r.jsx)(n.li,{children:"Automatically disables problematic mods"}),"\n",(0,r.jsx)(n.li,{children:"Provides recovery mechanisms for broken mod states"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"mod-environment",children:"Mod Environment"}),"\n",(0,r.jsx)(n.h3,{id:"safe-function-execution",children:"Safe Function Execution"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local runmodfn = function(fn, mod, modtype)\n    return function(...)\n        if fn then\n            local status, r = xpcall(function() \n                return fn(unpack(arg)) \n            end, debug.traceback)\n            if not status then\n                -- Handle mod error\n                ModManager:RemoveBadMod(mod.modname, r)\n            end\n        end\n    end\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"api-access-control",children:"API Access Control"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Controlled access to game functions"}),"\n",(0,r.jsx)(n.li,{children:"Prevention of unsafe operations"}),"\n",(0,r.jsx)(n.li,{children:"Sandboxed execution environment"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"release-id-system",children:"Release ID System"}),"\n",(0,r.jsx)(n.h3,{id:"currentreleasegreaterorequaltorelease_id",children:"CurrentRelease.GreaterOrEqualTo(release_id)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the current game version supports a specific release ID."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"release_id"})," (string): The release ID to check"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if the current version supports the release, false otherwise"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'if CurrentRelease.GreaterOrEqualTo("R35_SANITYTROUBLES") then\n    -- Use features from the Sanity Troubles update\n    print("Sanity Troubles features available")\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"addmodreleaseidname",children:"AddModReleaseID(name)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nAdds a new release ID to the system for mod compatibility testing."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): The release ID name"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddModReleaseID("R37_LUNAR_CAGE")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"version-checking",children:"Version Checking"}),"\n",(0,r.jsx)(n.h3,{id:"version-compatibility",children:"Version Compatibility"}),"\n",(0,r.jsx)(n.p,{children:"The system checks mod compatibility based on:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"API version requirements"}),"\n",(0,r.jsx)(n.li,{children:"Game version compatibility"}),"\n",(0,r.jsx)(n.li,{children:"Release ID support"}),"\n",(0,r.jsx)(n.li,{children:"Platform-specific features"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"update-detection",children:"Update Detection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compares mod versions with installed versions"}),"\n",(0,r.jsx)(n.li,{children:"Handles version upgrade scenarios"}),"\n",(0,r.jsx)(n.li,{children:"Manages backward compatibility"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,r.jsx)(n.p,{children:"The mod system integrates with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Asset Loading"}),": Mod-specific assets and textures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prefab System"}),": Custom entities and items"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Networking"}),": Server-client mod synchronization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"UI System"}),": Mod configuration interfaces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Save System"}),": Mod data persistence"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"platform-support",children:"Platform Support"}),"\n",(0,r.jsx)(n.h3,{id:"steam-workshop",children:"Steam Workshop"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatic mod downloading and updates"}),"\n",(0,r.jsx)(n.li,{children:"Workshop mod ID resolution"}),"\n",(0,r.jsx)(n.li,{children:"Subscription management"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"standalone-mods",children:"Standalone Mods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Local mod installation"}),"\n",(0,r.jsx)(n.li,{children:"Manual mod management"}),"\n",(0,r.jsx)(n.li,{children:"Development mod support"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,r.jsx)(n.h3,{id:"mod-settings",children:"Mod Settings"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Per-mod configuration options"}),"\n",(0,r.jsx)(n.li,{children:"Server-client setting synchronization"}),"\n",(0,r.jsx)(n.li,{children:"Runtime configuration changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"override-system",children:"Override System"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Server-side mod overrides"}),"\n",(0,r.jsx)(n.li,{children:"Configuration validation"}),"\n",(0,r.jsx)(n.li,{children:"Default value management"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modindex",children:"Mod Index"}),": Mod registry and information management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modutil",children:"Mod Utilities"}),": Development utilities and helpers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modcompatability",children:"Mod Compatibility"}),": Version upgrade handling"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const r={},d=i.createContext(r);function l(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);