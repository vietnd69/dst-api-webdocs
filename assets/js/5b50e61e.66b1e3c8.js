"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[82714],{8867:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/core/entityreplica","title":"Entity Replica System","description":"Network component replication system for client-server synchronization in Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/fundamentals/core/entityreplica.md","sourceDirName":"game-scripts/core-systems/fundamentals/core","slug":"/game-scripts/core-systems/fundamentals/core/entityreplica","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityreplica","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"entityreplica","title":"Entity Replica System","description":"Network component replication system for client-server synchronization in Don\'t Starve Together","sidebar_position":5,"last_updated":"2025-01-27T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Class","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/class"},"next":{"title":"EntityScript","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscript"}}');var l=i(74848),s=i(28453);const a={id:"entityreplica",title:"Entity Replica System",description:"Network component replication system for client-server synchronization in Don't Starve Together",sidebar_position:5,last_updated:new Date("2025-01-27T00:00:00.000Z"),build_version:676042,change_status:"stable"},c="Entity Replica System",r={},o=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Replicatable Components",id:"replicatable-components",level:2},{value:"REPLICATABLE_COMPONENTS",id:"replicatable-components",level:3},{value:"Core Functions",id:"core-functions",level:2},{value:"inst(name, cmp)",id:"validate-replica-component",level:3},{value:"inst(name)",id:"replicate-component",level:3},{value:"inst(name)",id:"unreplicate-component",level:3},{value:"inst(name)",id:"prereplicate-component",level:3},{value:"inst()",id:"replicate-entity",level:3},{value:"inst(classified, name)",id:"try-attach-classified",level:3},{value:"Mod Support",id:"mod-support",level:2},{value:"AddReplicableComponent(name)",id:"add-replicable-component",level:3},{value:"Tag System",id:"tag-system",level:2},{value:"Replication Tags",id:"replication-tags",level:3},{value:"Network Synchronization",id:"network-synchronization",level:2},{value:"Automatic Replication",id:"automatic-replication",level:3},{value:"Manual Replication Control",id:"manual-replication-control",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Safe Replica Access",id:"safe-replica-access",level:3},{value:"Event-Driven Updates",id:"event-driven-updates",level:3},{value:"Component Validation",id:"component-validation",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Memory Management",id:"memory-management",level:3},{value:"Network Efficiency",id:"network-efficiency",level:3},{value:"Debugging",id:"debugging",level:2},{value:"Replica State Inspection",id:"replica-state-inspection",level:3},{value:"Common Issues",id:"common-issues",level:3},{value:"Events",id:"events",level:2},{value:"&quot;replication_complete&quot;",id:"replication_complete",level:3},{value:"Related Modules",id:"related-modules",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"entity-replica-system",children:"Entity Replica System"})}),"\n",(0,l.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Build Version"}),(0,l.jsx)(n.th,{children:"Change Date"}),(0,l.jsx)(n.th,{children:"Change Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"676042"}),(0,l.jsx)(n.td,{children:"2025-01-27"}),(0,l.jsx)(n.td,{children:"stable"}),(0,l.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"The Entity Replica system extends EntityScript with network functionality that enables component data synchronization between server (master simulation) and clients. This system provides controlled access to server-side component data on clients while maintaining authoritative server-side game logic and security."}),"\n",(0,l.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- On server: Component automatically creates replica when added\ninst:AddComponent("health")\ninst:AddComponent("inventory")\n\n-- On client: Access replica data\nlocal health_replica = inst.replica.health\nif health_replica then\n    local current_health = health_replica:GetCurrent()\n    local max_health = health_replica:GetMax()\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"replicatable-components",children:"Replicatable Components"}),"\n",(0,l.jsx)(n.h3,{id:"replicatable-components",children:"REPLICATABLE_COMPONENTS"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"table"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"})," Table defining which components can be replicated to clients."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Available Components:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"builder"}),": Building and crafting capabilities"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"combat"}),": Combat stats and targeting"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"container"}),": Container contents and state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"constructionsite"}),": Construction progress"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"equippable"}),": Equipment slot and restrictions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"fishingrod"}),": Fishing rod state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"follower"}),": Following behavior and target"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"health"}),": Health values and state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"hunger"}),": Hunger values and rates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"inventory"}),": Inventory contents and state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"inventoryitem"}),": Item properties and state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"moisture"}),": Wetness and drying"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"named"}),": Custom entity names"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"oceanfishingrod"}),": Ocean fishing rod state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rider"}),": Mount/riding state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"sanity"}),": Sanity values and rates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"sheltered"}),": Shelter protection state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"stackable"}),": Stack size and limits"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"writeable"}),": Text content for signs/books"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,l.jsxs)(n.h3,{id:"validate-replica-component",children:["inst",":ValidateReplicaComponent","(name, cmp)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nValidates that a replica component is accessible and the entity has the appropriate replication tag."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," (string): Name of the replica component"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"cmp"})," (Component): The replica component instance"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"(Component or nil): The component if valid, nil otherwise"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'local health_replica = inst.replica.health\nlocal validated = inst:ValidateReplicaComponent("health", health_replica)\nif validated then\n    print("Health replica is valid")\nend\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Available since initial implementation"}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"replicate-component",children:["inst",":ReplicateComponent","(name)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSets up replication for a component, creating the client-side replica and managing replication tags."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," (string): Name of the component to replicate"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Automatically called when adding components\ninst:AddComponent("health") -- Calls ReplicateComponent internally\n\n-- Manual replication (rarely needed)\ninst:ReplicateComponent("health")\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Implementation Details:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Checks if component is in REPLICATABLE_COMPONENTS table"}),"\n",(0,l.jsx)(n.li,{children:'Adds "_componentname" tag on server'}),"\n",(0,l.jsx)(n.li,{children:"Loads and creates replica component instance"}),"\n",(0,l.jsx)(n.li,{children:"Handles tag state management for unreplication"}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"unreplicate-component",children:["inst",":UnreplicateComponent","(name)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nRemoves replication for a component, typically called when components are removed."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," (string): Name of the component to stop replicating"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Automatically called when removing components\ninst:RemoveComponent("health") -- Calls UnreplicateComponent internally\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Implementation Details:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Removes "_componentname" tag'}),"\n",(0,l.jsx)(n.li,{children:'Adds "__componentname" tag to mark as unreplicated'}),"\n",(0,l.jsx)(n.li,{children:"Only executes on master simulation"}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"prereplicate-component",children:["inst",":PrereplicateComponent","(name)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSets up component for replication and immediately marks it as unreplicated. Used for initialization sequences."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," (string): Name of the component to prereplicate"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Used during entity initialization\ninst:PrereplicateComponent("health")\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"replicate-entity",children:["inst",":ReplicateEntity","()"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nReplicates all eligible components for an entity. Called on clients after initial tag deserialization."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Automatically called during entity network setup\n-- Manually trigger full replication (rarely needed)\ninst:ReplicateEntity()\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Implementation Details:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Iterates through all REPLICATABLE_COMPONENTS"}),"\n",(0,l.jsx)(n.li,{children:'Checks for "_componentname" or "__componentname" tags'}),"\n",(0,l.jsx)(n.li,{children:"Calls ReplicateComponent for each eligible component"}),"\n",(0,l.jsx)(n.li,{children:"Triggers OnEntityReplicated callback if defined"}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"try-attach-classified",children:["inst",":TryAttachClassifiedToReplicaComponent","(classified, name)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nAttempts to attach a classified data object to a replica component for additional data synchronization."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"classified"})," (object): Classified data object to attach"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," (string): Name of the replica component"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"(boolean): True if attachment was successful"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Attach player-specific classified data\nlocal success = inst:TryAttachClassifiedToReplicaComponent(player_classified, "health")\nif success then\n    print("Classified data attached to health replica")\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"mod-support",children:"Mod Support"}),"\n",(0,l.jsx)(n.h3,{id:"add-replicable-component",children:"AddReplicableComponent(name)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nAllows mods to register new components as replicatable."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," (string): Name of the component to make replicatable"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- In mod code: Make custom component replicatable\nAddReplicableComponent("mycustomcomponent")\n\n-- Now the component can be replicated\ninst:AddComponent("mycustomcomponent")\n-- Replica will be available as inst.replica.mycustomcomponent\n'})}),"\n",(0,l.jsx)(n.h2,{id:"tag-system",children:"Tag System"}),"\n",(0,l.jsx)(n.h3,{id:"replication-tags",children:"Replication Tags"}),"\n",(0,l.jsx)(n.p,{children:"The replica system uses specific tags to manage replication state:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Tag Pattern"}),(0,l.jsx)(n.th,{children:"Purpose"}),(0,l.jsx)(n.th,{children:"When Added"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"_componentname"})}),(0,l.jsx)(n.td,{children:"Component is actively replicated"}),(0,l.jsx)(n.td,{children:"During ReplicateComponent"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"__componentname"})}),(0,l.jsx)(n.td,{children:"Component was unreplicated"}),(0,l.jsx)(n.td,{children:"During UnreplicateComponent"})]})]})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Check replication status via tags\nif inst:HasTag("_health") then\n    print("Health component is replicated")\nend\n\nif inst:HasTag("__health") then\n    print("Health component was unreplicated")\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"network-synchronization",children:"Network Synchronization"}),"\n",(0,l.jsx)(n.h3,{id:"automatic-replication",children:"Automatic Replication"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Server: Adding component automatically sets up replication\nlocal inst = CreateEntity()\ninst:AddComponent("health")\n-- Health replica will be available on clients\n\n-- Client: Access replicated data\ninst:ListenForEvent("healthdelta", function(inst, data)\n    local replica = inst.replica.health\n    if replica then\n        UpdateHealthUI(replica:GetPercent())\n    end\nend)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"manual-replication-control",children:"Manual Replication Control"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Advanced: Manual replication management\nfunction SetupCustomReplication(inst)\n    -- Prereplicate for initialization\n    inst:PrereplicateComponent("inventory")\n    \n    -- Later enable full replication\n    inst:ReplicateComponent("inventory")\n    \n    -- Custom callback after replication\n    inst.OnEntityReplicated = function(inst)\n        print("Entity fully replicated")\n        inst:PushEvent("replication_complete")\n    end\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,l.jsx)(n.h3,{id:"safe-replica-access",children:"Safe Replica Access"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Always check replica existence\nlocal function GetHealthPercent(inst)\n    local health_replica = inst.replica.health\n    return health_replica and health_replica:GetPercent() or 0\nend\n\n-- Use with UI updates\nlocal function UpdateHealthBar(inst)\n    local health_replica = inst.replica.health\n    if health_replica then\n        local percent = health_replica:GetPercent()\n        self.health_bar:SetPercent(percent)\n    end\nend\n"})}),"\n",(0,l.jsx)(n.h3,{id:"event-driven-updates",children:"Event-Driven Updates"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Listen for replica changes\ninst:ListenForEvent("inventorydirty", function(inst)\n    local inventory_replica = inst.replica.inventory\n    if inventory_replica then\n        RefreshInventoryDisplay()\n    end\nend)\n\n-- Batch UI updates\nlocal pending_updates = {}\ninst:ListenForEvent("healthdelta", function(inst)\n    pending_updates.health = true\nend)\n\n-- Update UI once per frame\nlocal function OnUpdate()\n    if pending_updates.health then\n        UpdateHealthDisplay()\n        pending_updates.health = nil\n    end\nend\n'})}),"\n",(0,l.jsx)(n.h3,{id:"component-validation",children:"Component Validation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Robust component checking\nlocal function HasValidReplica(inst, component_name)\n    local replica = inst.replica[component_name]\n    return replica and inst:ValidateReplicaComponent(component_name, replica)\nend\n\n-- Usage\nif HasValidReplica(inst, "inventory") then\n    local active_item = inst.replica.inventory:GetActiveItem()\nend\n'})}),"\n",(0,l.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,l.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Replica components are automatically cleaned up when entities are removed"}),"\n",(0,l.jsx)(n.li,{children:"Proxy objects are cached to reduce allocation overhead"}),"\n",(0,l.jsx)(n.li,{children:"Tag-based validation minimizes unnecessary component access"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"network-efficiency",children:"Network Efficiency"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Only changed data is synchronized between server and clients"}),"\n",(0,l.jsx)(n.li,{children:"Batch updates reduce network message overhead"}),"\n",(0,l.jsx)(n.li,{children:"Client prediction reduces perceived input lag"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,l.jsx)(n.h3,{id:"replica-state-inspection",children:"Replica State Inspection"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Check replica availability\nlocal function DebugReplicaState(inst)\n    print("=== Replica Debug for", inst, "===")\n    \n    for name, _ in pairs(REPLICATABLE_COMPONENTS) do\n        local has_tag = inst:HasTag("_"..name)\n        local has_unreplicated_tag = inst:HasTag("__"..name)\n        local replica = inst.replica[name]\n        \n        print(string.format("%s: tag=%s, unreplicated=%s, replica=%s",\n            name, tostring(has_tag), tostring(has_unreplicated_tag), tostring(replica ~= nil)))\n    end\nend\n'})}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Replica is nil:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Component may not be replicatable"}),"\n",(0,l.jsx)(n.li,{children:"Entity may not be fully initialized"}),"\n",(0,l.jsx)(n.li,{children:"Check for proper component addition on server"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Stale replica data:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Network lag may cause temporary desync"}),"\n",(0,l.jsx)(n.li,{children:"Use events for immediate UI updates"}),"\n",(0,l.jsx)(n.li,{children:"Consider client-side prediction where appropriate"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,l.jsx)(n.h3,{id:"replication_complete",children:'"replication_complete"'}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nCustom event that can be triggered after entity replication is complete."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'inst:ListenForEvent("replication_complete", function(inst)\n    print("All replica components are ready")\n    InitializeUI(inst)\nend)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscript",children:"EntityScript"}),": Core entity functionality and component system"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscriptproxy",children:"EntityScript Proxy"}),": Proxy system for entity wrapping"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/",children:"Components Overview"}),": Individual component functionality"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./networking.md",children:"Networking"}),": Network synchronization details"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(96540);const l={},s=t.createContext(l);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);