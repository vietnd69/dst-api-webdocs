"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[1767],{5648:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api-vanilla/data-types/data-types-overview","title":"Data Types Overview","description":"Don\'t Starve Together uses a variety of data types for representing and manipulating game data. These data types can be classified into several categories:","source":"@site/docs/api-vanilla/data-types/index.md","sourceDirName":"api-vanilla/data-types","slug":"/api/data-types","permalink":"/dst-api-webdocs/docs/api/data-types","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"data-types-overview","title":"Data Types Overview","sidebar_position":1,"last_updated":"2023-07-06T00:00:00.000Z","slug":"/api/data-types"},"sidebar":"docs","previous":{"title":"Data Types","permalink":"/dst-api-webdocs/docs/category/data-types"},"next":{"title":"Vector3","permalink":"/dst-api-webdocs/docs/api-vanilla/data-types/vector3"}}');var a=s(4848),i=s(8453);const r={id:"data-types-overview",title:"Data Types Overview",sidebar_position:1,last_updated:new Date("2023-07-06T00:00:00.000Z"),slug:"/api/data-types"},l="Data Types Overview",c={},d=[{value:"Basic Types",id:"basic-types",level:2},{value:"DST-Specific Types",id:"dst-specific-types",level:2},{value:"Object References",id:"object-references",level:2}];function o(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"data-types-overview",children:"Data Types Overview"})}),"\n",(0,a.jsx)(t.p,{children:"Don't Starve Together uses a variety of data types for representing and manipulating game data. These data types can be classified into several categories:"}),"\n",(0,a.jsx)(t.h2,{id:"basic-types",children:"Basic Types"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Number"}),": Lua's numerical type, used for integers and floating-point values"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"String"}),": Text data, often used for identifiers, names, and messages"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Boolean"}),": Logical true/false values"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Function"}),": Callable code blocks that can accept arguments and return values"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"nil"}),": Represents the absence of a value"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"dst-specific-types",children:"DST-Specific Types"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"/docs/api-vanilla/data-types/vector",children:"Vector"})}),": Represents 2D or 3D positions, directions, and velocities"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"/docs/api-vanilla/data-types/colour",children:"Colour"})}),": Represents RGBA color values with components ranging from 0 to 1"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"/docs/api-vanilla/data-types/netvar",children:"Network Variables"})}),": Special variables used to synchronize data between server and client"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"/docs/api-vanilla/data-types/luatable",children:"Lua Table"})}),": The core data structure in Lua, used extensively throughout the DST API"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"object-references",children:"Object References"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Entity"}),": References to game entities like players, creatures, and items"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Component"}),": References to entity components that define behavior and properties"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Instance"}),": Generic references to instantiated game objects"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Understanding these data types is essential for effectively working with the DST API and creating mods that interact with the game world."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(6540);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);