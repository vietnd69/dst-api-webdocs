"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[7408],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var a=t(6540);const o={},s=a.createContext(o);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},9068:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"api-vanilla/getting-started/api-update-example","title":"API Update Example - Waterlogged Update","description":"Last Update: 2023-07-06","source":"@site/docs/api-vanilla/getting-started/api-update-example.md","sourceDirName":"api-vanilla/getting-started","slug":"/api/update-example","permalink":"/dst-api-webdocs/docs/api/update-example","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"api-update-example","title":"API Update Example - Waterlogged Update","sidebar_position":7,"last_updated":"2023-07-06T00:00:00.000Z","slug":"/api/update-example"}}');var o=t(4848),s=t(8453);const i={id:"api-update-example",title:"API Update Example - Waterlogged Update",sidebar_position:7,last_updated:new Date("2023-07-06T00:00:00.000Z"),slug:"/api/update-example"},r="API Update Example: Waterlogged Update",d={},l=[{value:"Game Update: Waterlogged Update (March 2022)",id:"game-update-waterlogged-update-march-2022",level:2},{value:"New Features",id:"new-features",level:3},{value:"Boat Customization API",id:"boat-customization-api",level:4},{value:"Waterlogging Component",id:"waterlogging-component",level:4},{value:"Changed APIs",id:"changed-apis",level:3},{value:"Boat Component",id:"boat-component",level:4},{value:"Deprecated APIs",id:"deprecated-apis",level:3},{value:"Anchor Item Component",id:"anchor-item-component",level:4},{value:"Removed APIs",id:"removed-apis",level:3},{value:"Fish Prefab",id:"fish-prefab",level:4},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Known Issues",id:"known-issues",level:2},{value:"Community Feedback",id:"community-feedback",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Last Update: 2023-07-06"})}),"\n",(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"api-update-example-waterlogged-update",children:"API Update Example: Waterlogged Update"})}),"\n",(0,o.jsx)(n.p,{children:"This document demonstrates how to document API changes using a real-world example from the Waterlogged Update (released in March 2022). This update introduced significant changes to the boat system and added new water-related features."}),"\n",(0,o.jsx)(n.h2,{id:"game-update-waterlogged-update-march-2022",children:"Game Update: Waterlogged Update (March 2022)"}),"\n",(0,o.jsx)(n.p,{children:"The Waterlogged Update focused on enhancing the water and boat mechanics in Don't Starve Together. It introduced new boat types, water-related components, and improved the API for creating custom boats and water content."}),"\n",(0,o.jsx)(n.h3,{id:"new-features",children:"New Features"}),"\n",(0,o.jsx)(n.h4,{id:"boat-customization-api",children:"Boat Customization API"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": The update introduced a comprehensive API for creating custom boat types with different properties, allowing mods to define new boat prefabs with unique characteristics."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"API Reference"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"-- New boat component\nBoatCustomization = Class(function(self, inst)\n    self.inst = inst\n    self.decor_items = {}\n    self.decor_slots = {}\n    self.item_data = {}\nend)\n\n-- Key methods\nfunction BoatCustomization:AddDecorSlot(slotname, pos, test_fn, accept_fn)\n    -- Implementation details\nend\n\nfunction BoatCustomization:AddDecorType(prefab, build, symbol, slot_type)\n    -- Implementation details\nend\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Usage Example"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Creating a custom boat with decoration slots\nlocal function MakeCustomBoat()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it a boat\n    inst:AddComponent("boat")\n    \n    -- Add customization\n    inst:AddComponent("boatcustomization")\n    inst.components.boatcustomization:AddDecorSlot(\n        "mast", \n        Vector3(0, 0, 0), \n        function(item) return item:HasTag("boat_mast") end,\n        function(item, boat) -- Accept function\n            -- Custom logic when item is placed\n        end\n    )\n    \n    return inst\nend\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The boat customization system is designed to be extensible for mods"}),"\n",(0,o.jsx)(n.li,{children:'Custom boats must include the base "boat" component'}),"\n",(0,o.jsx)(n.li,{children:"Decoration slots can have custom validation and acceptance logic"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"waterlogging-component",children:"Waterlogging Component"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": A new component that tracks how waterlogged an entity is, affecting its performance and potentially causing it to sink."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"API Reference"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"Waterloggable = Class(function(self, inst)\n    self.inst = inst\n    self.waterlog = 0\n    self.max_waterlog = 100\n    self.waterlog_rate = 1\n    self.sink_threshold = 0.75\nend)\n\nfunction Waterloggable:SetWaterlogRate(rate)\n    self.waterlog_rate = rate\nend\n\nfunction Waterloggable:SetMaxWaterlog(max)\n    self.max_waterlog = max\nend\n\nfunction Waterloggable:GetWaterlogPercent()\n    return self.waterlog / self.max_waterlog\nend\n\nfunction Waterloggable:IsWaterlogged()\n    return self.waterlog >= self.max_waterlog * self.sink_threshold\nend\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Usage Example"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Make an entity waterloggable\ninst:AddComponent("waterloggable")\ninst.components.waterloggable:SetMaxWaterlog(150)\ninst.components.waterloggable:SetWaterlogRate(0.5)\n\n-- Check waterlog status\nif inst.components.waterloggable:IsWaterlogged() then\n    -- Entity is critically waterlogged\nend\n\n-- Listen for waterlog events\ninst:ListenForEvent("waterlog_change", function(inst, data)\n    local percent = data.percent\n    -- React to waterlog changes\nend)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"changed-apis",children:"Changed APIs"}),"\n",(0,o.jsx)(n.h4,{id:"boat-component",children:"Boat Component"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Previous Behavior"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- Old boat component had limited configuration\ninst:AddComponent("boat")\ninst.components.boat.max_health = 200\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"New Behavior"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- New boat component has expanded configuration options\ninst:AddComponent("boat")\ninst.components.boat:SetMaxHealth(200)\ninst.components.boat:SetBurnTime(30)\ninst.components.boat:SetWaterlogAmount(5)\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Migration Guide"}),":"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Replace direct property assignments with the new setter methods"}),"\n",(0,o.jsx)(n.li,{children:"Update any code that reads properties directly to use getter methods"}),"\n",(0,o.jsx)(n.li,{children:"Add waterlogging configuration if needed"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Compatibility Notes"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Direct property access is still supported but deprecated"}),"\n",(0,o.jsx)(n.li,{children:"Older boat prefabs will continue to work but won't benefit from new features"}),"\n",(0,o.jsx)(n.li,{children:"Custom boat mods should update to use the new API for full compatibility"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"deprecated-apis",children:"Deprecated APIs"}),"\n",(0,o.jsx)(n.h4,{id:"anchor-item-component",children:"Anchor Item Component"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Deprecated Function/Component"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- The deprecated component\ninst:AddComponent("anchor_item")\ninst.components.anchor_item.boat_max_velocity = 0\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Recommended Alternative"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- The recommended replacement\ninst:AddComponent("boatanchor")\ninst.components.boatanchor:SetMaxVelocity(0)\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Reason for Deprecation"}),":\nThe ",(0,o.jsx)(n.code,{children:"anchor_item"})," component was replaced with the more comprehensive ",(0,o.jsx)(n.code,{children:"boatanchor"})," component that provides better integration with the new boat system and supports additional features."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Timeline"}),":\nThe ",(0,o.jsx)(n.code,{children:"anchor_item"})," component will be removed in a future update. Mods should transition to the new ",(0,o.jsx)(n.code,{children:"boatanchor"})," component as soon as possible."]}),"\n",(0,o.jsx)(n.h3,{id:"removed-apis",children:"Removed APIs"}),"\n",(0,o.jsx)(n.h4,{id:"fish-prefab",children:"Fish Prefab"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Removed API"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- The prefab that no longer exists\n-- local fish = SpawnPrefab("fish")\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Replacement"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'-- The replacement prefabs\nlocal fish = SpawnPrefab("oceanfish_small_1")\n-- or other specific fish types\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Migration Steps"}),":"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:'Identify all instances where the "fish" prefab is spawned'}),"\n",(0,o.jsx)(n.li,{children:"Replace with appropriate oceanfish prefabs based on the context"}),"\n",(0,o.jsx)(n.li,{children:"Update any code that relies on specific properties of the old fish prefab"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://forums.kleientertainment.com/forums/topic/136860-dont-starve-together-waterlogged-update/",children:"Official Waterlogged Update Announcement"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://store.steampowered.com/news/app/322330/view/3111417945997598275",children:"Waterlogged Update on Steam"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://forums.kleientertainment.com/forums/topic/137125-modding-guide-custom-boats/",children:"Boat Modding Guide"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"known-issues",children:"Known Issues"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Some older boat mods may experience issues with the new waterlogging system"}),"\n",(0,o.jsx)(n.li,{children:"Custom boat decorations might need adjustments to work with the new decoration slots"}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"boatcustomization"})," component has some edge cases when multiple mods modify the same boat type"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"community-feedback",children:"Community Feedback"}),"\n",(0,o.jsxs)(n.p,{children:["If you encounter issues with the new boat APIs or have suggestions for improvements, please share your feedback on the ",(0,o.jsx)(n.a,{href:"https://forums.kleientertainment.com/forums/forum/79-dont-starve-together-beta-modding/",children:"Klei Forums"})," or the ",(0,o.jsx)(n.a,{href:"https://discord.gg/dst",children:"DST Modding Discord"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);