"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[32971],{28453:(e,n,d)=>{d.d(n,{R:()=>c,x:()=>t});var i=d(96540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},52509:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>x,frontMatter:()=>c,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/achievements/achievements","title":"Achievements","description":"Achievement definitions and platform integration for Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/game-mechanics/achievements/achievements.md","sourceDirName":"game-scripts/core-systems/game-mechanics/achievements","slug":"/game-scripts/core-systems/game-mechanics/achievements/","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"achievements","title":"Achievements","description":"Achievement definitions and platform integration for Don\'t Starve Together","sidebar_position":1,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var s=d(74848),r=d(28453);const c={id:"achievements",title:"Achievements",description:"Achievement definitions and platform integration for Don't Starve Together",sidebar_position:1,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},t="Achievements",l={},h=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Functions",id:"functions",level:2},{value:"ACHIEVEMENT(id, name)",id:"achievement",level:3},{value:"Data Structures",id:"data-structures",level:2},{value:"Achievement Definition",id:"achievement-definition",level:3},{value:"Achievements Table",id:"achievements-table",level:3},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Platform ID Generation",id:"platform-id-generation",level:3},{value:"Module Structure",id:"module-structure",level:3},{value:"Access Patterns",id:"access-patterns",level:3},{value:"Adding New Achievements",id:"adding-new-achievements",level:3},{value:"Related Modules",id:"related-modules",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"achievements",children:"Achievements"})}),"\n",(0,s.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Build Version"}),(0,s.jsx)(n.th,{children:"Change Date"}),(0,s.jsx)(n.th,{children:"Change Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"676042"}),(0,s.jsx)(n.td,{children:"2025-06-21"}),(0,s.jsx)(n.td,{children:"stable"}),(0,s.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"achievements.lua"})," module defines all available achievements in Don't Starve Together and provides platform-specific identifiers for Steam and PlayStation Network integration. It contains a simple array of achievement definitions used by the game's achievement tracking system."]}),"\n",(0,s.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Access the achievements table\nlocal achievements = require("achievements")\n\n-- Iterate through all achievements\nfor i, achievement in ipairs(achievements) do\n    print("Achievement:", achievement.name)\n    print("Steam ID:", achievement.id.steam)\n    print("PSN ID:", achievement.id.psn)\nend\n\n-- Find specific achievement\nlocal function FindAchievement(name)\n    for _, achievement in ipairs(Achievements) do\n        if achievement.name == name then\n            return achievement\n        end\n    end\n    return nil\nend\n'})}),"\n",(0,s.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(n.h3,{id:"achievement",children:"ACHIEVEMENT(id, name)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Status:"})," ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\nHelper function that creates an achievement definition with platform-specific identifiers."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"})," (string): Numeric ID as string, used for PSN trophy ID"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," (string): Achievement code name used to reference the achievement"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"(table): Achievement definition with name and platform IDs"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local achievement = ACHIEVEMENT("1", "survive_20")\n-- Returns: { \n--     name = "survive_20", \n--     id = { \n--         steam = "1_survive_20", \n--         psn = 1 \n--     } \n-- }\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Current implementation in build 676042"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-structures",children:"Data Structures"}),"\n",(0,s.jsx)(n.h3,{id:"achievement-definition",children:"Achievement Definition"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'{\n    name = "achievement_name",        -- Code name for referencing\n    id = {\n        steam = "id_name",           -- Steam achievement ID format\n        psn = number                 -- PlayStation Network trophy ID\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"achievements-table",children:"Achievements Table"}),"\n",(0,s.jsx)(n.p,{children:"The module exports an array containing all 35 achievement definitions:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Index"}),(0,s.jsx)(n.th,{children:"ID"}),(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Steam ID"}),(0,s.jsx)(n.th,{children:"PSN ID"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"survive_20"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"1_survive_20"})}),(0,s.jsx)(n.td,{children:"1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"survive_35"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"2_survive_35"})}),(0,s.jsx)(n.td,{children:"2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"survive_55"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"3_survive_55"})}),(0,s.jsx)(n.td,{children:"3"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"survive_70"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"4_survive_70"})}),(0,s.jsx)(n.td,{children:"4"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"build_researchlab"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"5_build_researchlab"})}),(0,s.jsx)(n.td,{children:"5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"6"}),(0,s.jsx)(n.td,{children:"6"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"build_researchlab2"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"6_build_researchlab2"})}),(0,s.jsx)(n.td,{children:"6"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"7"}),(0,s.jsx)(n.td,{children:"7"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"build_researchlab3"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"7_build_researchlab3"})}),(0,s.jsx)(n.td,{children:"7"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"8"}),(0,s.jsx)(n.td,{children:"8"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"build_researchlab4"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"8_build_researchlab4"})}),(0,s.jsx)(n.td,{children:"8"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"9"}),(0,s.jsx)(n.td,{children:"9"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"wormhole_used"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"9_wormhole_used"})}),(0,s.jsx)(n.td,{children:"9"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10"}),(0,s.jsx)(n.td,{children:"10"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pigking_trader"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"10_pigking_trader"})}),(0,s.jsx)(n.td,{children:"10"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"11"}),(0,s.jsx)(n.td,{children:"11"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"growfrombutterfly"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"11_growfrombutterfly"})}),(0,s.jsx)(n.td,{children:"11"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"12"}),(0,s.jsx)(n.td,{children:"12"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"honey_harvester"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"12_honey_harvester"})}),(0,s.jsx)(n.td,{children:"12"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"13"}),(0,s.jsx)(n.td,{children:"13"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sewing_kit"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"13_sewing_kit"})}),(0,s.jsx)(n.td,{children:"13"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"14"}),(0,s.jsx)(n.td,{children:"14"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pigman_posse"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"14_pigman_posse"})}),(0,s.jsx)(n.td,{children:"14"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"15"}),(0,s.jsx)(n.td,{children:"15"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"rocky_posse"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"15_rocky_posse"})}),(0,s.jsx)(n.td,{children:"15"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"16"}),(0,s.jsx)(n.td,{children:"16"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"hatch_tallbirdegg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"16_hatch_tallbirdegg"})}),(0,s.jsx)(n.td,{children:"16"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"17"}),(0,s.jsx)(n.td,{children:"17"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pacify_forest"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"17_pacify_forest"})}),(0,s.jsx)(n.td,{children:"17"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"18"}),(0,s.jsx)(n.td,{children:"18"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"cave_entrance_opened"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"18_cave_entrance_opened"})}),(0,s.jsx)(n.td,{children:"18"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"19"}),(0,s.jsx)(n.td,{children:"19"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"survive_earthquake"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"19_survive_earthquake"})}),(0,s.jsx)(n.td,{children:"19"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tentacle_pillar_hole_used"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"20_tentacle_pillar_hole_used"})}),(0,s.jsx)(n.td,{children:"20"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"21"}),(0,s.jsx)(n.td,{children:"21"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"snail_armour_set"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"21_snail_armour_set"})}),(0,s.jsx)(n.td,{children:"21"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"22"}),(0,s.jsx)(n.td,{children:"22"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"join_game"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"22_join_game"})}),(0,s.jsx)(n.td,{children:"22"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"23"}),(0,s.jsx)(n.td,{children:"23"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"host_for_days"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"23_host_for_days"})}),(0,s.jsx)(n.td,{children:"23"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"24"}),(0,s.jsx)(n.td,{children:"24"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"hasrevivedplayer"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"24_hasrevivedplayer"})}),(0,s.jsx)(n.td,{children:"24"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"25"}),(0,s.jsx)(n.td,{children:"25"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"helping_hand"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"25_helping_hand"})}),(0,s.jsx)(n.td,{children:"25"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"26"}),(0,s.jsx)(n.td,{children:"26"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"party_time"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"26_party_time"})}),(0,s.jsx)(n.td,{children:"26"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"27"}),(0,s.jsx)(n.td,{children:"27"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"equip_skin_clothing"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"27_equip_skin_clothing"})}),(0,s.jsx)(n.td,{children:"27"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"28"}),(0,s.jsx)(n.td,{children:"28"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"trade_inn"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"28_trade_inn"})}),(0,s.jsx)(n.td,{children:"28"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"29"}),(0,s.jsx)(n.td,{children:"29"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"deerclops_killed"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"29_deerclops_killed"})}),(0,s.jsx)(n.td,{children:"29"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"30"}),(0,s.jsx)(n.td,{children:"30"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"spiderqueen_killed"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"30_spiderqueen_killed"})}),(0,s.jsx)(n.td,{children:"30"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"31"}),(0,s.jsx)(n.td,{children:"31"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"minotaur_killed"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"31_minotaur_killed"})}),(0,s.jsx)(n.td,{children:"31"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"32"}),(0,s.jsx)(n.td,{children:"32"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"moosegoose_killed"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"32_moosegoose_killed"})}),(0,s.jsx)(n.td,{children:"32"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"33"}),(0,s.jsx)(n.td,{children:"33"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bearger_killed"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"33_bearger_killed"})}),(0,s.jsx)(n.td,{children:"33"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"34"}),(0,s.jsx)(n.td,{children:"34"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dragonfly_killed"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"34_dragonfly_killed"})}),(0,s.jsx)(n.td,{children:"34"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"35"}),(0,s.jsx)(n.td,{children:"35"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"domesticated_beefalo"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"35_domesticated_beefalo"})}),(0,s.jsx)(n.td,{children:"35"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,s.jsx)(n.h3,{id:"platform-id-generation",children:"Platform ID Generation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Steam IDs"}),": Generated as ",(0,s.jsx)(n.code,{children:'"id_name"'})," format (e.g., ",(0,s.jsx)(n.code,{children:'"1_survive_20"'}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PSN IDs"}),": Use the numeric ID directly as integer (e.g., ",(0,s.jsx)(n.code,{children:"1"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sequential Numbering"}),": IDs run from 1 to 35 with no gaps"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"module-structure",children:"Module Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Local helper function\nlocal function ACHIEVEMENT(id, name)\n    return { \n        name = name, \n        id = {\n            steam = tostring(id) .. "_" .. name, \n            psn = id \n        } \n    }\nend\n\n-- Global achievements table\nAchievements = {\n    ACHIEVEMENT("1", "survive_20"),\n    ACHIEVEMENT("2", "survive_35"),\n    -- ... all 35 achievements\n}\n\n-- Module return\nreturn Achievements\n'})}),"\n",(0,s.jsx)(n.h3,{id:"access-patterns",children:"Access Patterns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Access by index\nlocal first_achievement = Achievements[1]  -- survive_20\n\n-- Search by name\nlocal function GetAchievementByName(target_name)\n    for _, achievement in ipairs(Achievements) do\n        if achievement.name == target_name then\n            return achievement\n        end\n    end\n    return nil\nend\n\n-- Get platform-specific ID\nlocal function GetSteamID(achievement_name)\n    local achievement = GetAchievementByName(achievement_name)\n    return achievement and achievement.id.steam or nil\nend\n"})}),"\n",(0,s.jsx)(n.h3,{id:"adding-new-achievements",children:"Adding New Achievements"}),"\n",(0,s.jsx)(n.p,{children:"To add a new achievement, append to the Achievements table:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'Achievements = {\n    -- ... existing achievements ...\n    ACHIEVEMENT("36", "new_achievement_name"),\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use next sequential numeric ID"}),"\n",(0,s.jsx)(n.li,{children:"Use descriptive, lowercase name with underscores"}),"\n",(0,s.jsx)(n.li,{children:"Follow existing naming conventions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/eventachievements",children:"Event Achievements"}),": Dynamic achievement tracking system"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"playerprofile.md",children:"Player Profile"}),": Achievement unlock status tracking"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"networking.md",children:"Networking"}),": Achievement synchronization across clients"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);