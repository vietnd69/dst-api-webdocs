"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[88641],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(96540);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}},36788:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/utilities/simutil","title":"Simulation Utilities","description":"Core utility functions for entity finding, position validation, vision checking, atlas management, and game simulation helpers","source":"@site/docs/game-scripts/core-systems/fundamentals/utilities/simutil.md","sourceDirName":"game-scripts/core-systems/fundamentals/utilities","slug":"/game-scripts/core-systems/fundamentals/utilities/simutil","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/simutil","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"simutil","title":"Simulation Utilities","description":"Core utility functions for entity finding, position validation, vision checking, atlas management, and game simulation helpers","sidebar_position":7,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Performance Utilities","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/perfutil"},"next":{"title":"String Utilities","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/stringutil"}}');var t=i(74848),l=i(28453);const r={id:"simutil",title:"Simulation Utilities",description:"Core utility functions for entity finding, position validation, vision checking, atlas management, and game simulation helpers",sidebar_position:7,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Simulation Utilities",c={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Debug and Deprecated Functions",id:"debug-and-deprecated-functions",level:2},{value:"CalledFrom()",id:"called-from",level:3},{value:"GetWorld()",id:"get-world",level:3},{value:"GetPlayer()",id:"get-player",level:3},{value:"Entity Finding Functions",id:"entity-finding-functions",level:2},{value:"FindEntity(inst, radius, fn, musttags, canttags, mustoneoftags)",id:"find-entity",level:3},{value:"FindClosestEntity(inst, radius, ignoreheight, musttags, canttags, mustoneoftags, fn)",id:"find-closest-entity",level:3},{value:"GetRandomInstWithTag(tag, inst, radius)",id:"get-random-inst-with-tag",level:3},{value:"Player Finding Functions",id:"player-finding-functions",level:2},{value:"FindClosestPlayer(x, y, z, isalive)",id:"find-closest-player",level:3},{value:"FindClosestPlayerInRange(x, y, z, range, isalive)",id:"find-closest-player-in-range",level:3},{value:"FindPlayersInRange(x, y, z, range, isalive)",id:"find-players-in-range",level:3},{value:"IsAnyPlayerInRange(x, y, z, range, isalive)",id:"is-any-player-in-range",level:3},{value:"Position Validation Functions",id:"position-validation-functions",level:2},{value:"FindValidPositionByFan(start_angle, radius, attempts, test_fn)",id:"find-valid-position-by-fan",level:3},{value:"FindWalkableOffset(position, start_angle, radius, attempts, check_los, ignore_walls, customcheckfn, allow_water, allow_boats)",id:"find-walkable-offset",level:3},{value:"FindSwimmableOffset(position, start_angle, radius, attempts, check_los, ignore_walls, customcheckfn, allow_boats)",id:"find-swimmable-offset",level:3},{value:"Pickup System Functions",id:"pickup-system-functions",level:2},{value:"FindPickupableItem(owner, radius, furthestfirst, positionoverride, ignorethese, onlytheseprefabs, allowpickables, worker, extra_filter, inventoryoverride)",id:"find-pickupable-item",level:3},{value:"Vision and Visibility Functions",id:"vision-and-visibility-functions",level:2},{value:"CanEntitySeeInDark(inst)",id:"can-entity-see-in-dark",level:3},{value:"CanEntitySeeInStorm(inst)",id:"can-entity-see-in-storm",level:3},{value:"CanEntitySeePoint(inst, x, y, z)",id:"can-entity-see-point",level:3},{value:"CanEntitySeeTarget(inst, target)",id:"can-entity-see-target",level:3},{value:"Game Mechanic Utilities",id:"game-mechanic-utilities",level:2},{value:"SpringCombatMod(amount, forced)",id:"spring-combat-mod",level:3},{value:"SpringGrowthMod(amount, forced)",id:"spring-growth-mod",level:3},{value:"ErodeAway(inst, erode_time)",id:"erode-away",level:3},{value:"TemporarilyRemovePhysics(obj, time)",id:"temporarily-remove-physics",level:3},{value:"Atlas Management Functions",id:"atlas-management-functions",level:2},{value:"RegisterInventoryItemAtlas(atlas, imagename)",id:"register-inventory-item-atlas",level:3},{value:"GetInventoryItemAtlas(imagename, no_fallback)",id:"get-inventory-item-atlas",level:3},{value:"GetMinimapAtlas(imagename)",id:"get-minimap-atlas",level:3},{value:"GetScrapbookIconAtlas(imagename)",id:"get-scrapbook-icon-atlas",level:3},{value:"UI and Animation Utilities",id:"ui-and-animation-utilities",level:2},{value:"AnimateUIScale(item, total_time, start_scale, end_scale)",id:"animate-ui-scale",level:3},{value:"ShakeAllCameras(mode, duration, speed, scale, source_or_pt, maxDist)",id:"shake-all-cameras",level:3},{value:"Global Map Icon System",id:"global-map-icon-system",level:2},{value:"RegisterGlobalMapIcon(inst)",id:"register-global-map-icon",level:3},{value:"UnregisterGlobalMapIcon(inst)",id:"unregister-global-map-icon",level:3},{value:"Special Events System",id:"special-events-system",level:2},{value:"ApplySpecialEvent(event)",id:"apply-special-event",level:3},{value:"DeclareLimitedCraftingRecipe(recipename)",id:"declare-limited-crafting-recipe",level:3},{value:"Constants and Data Structures",id:"constants-and-data-structures",level:2},{value:"Global Variables",id:"global-variables",level:3},{value:"Search Tags",id:"search-tags",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Entity Search Pattern",id:"entity-search-pattern",level:3},{value:"Position Validation Pattern",id:"position-validation-pattern",level:3},{value:"Atlas Management Pattern",id:"atlas-management-pattern",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"simulation-utilities",children:"Simulation Utilities"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Simulation Utilities"})," module provides essential helper functions for game simulation operations including entity searching, position validation, visibility checking, atlas management, and various game mechanic utilities. This module serves as a foundational layer for many game systems."]}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#debug-and-deprecated-functions",children:"Debug and Deprecated Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#entity-finding-functions",children:"Entity Finding Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#player-finding-functions",children:"Player Finding Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#position-validation-functions",children:"Position Validation Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#pickup-system-functions",children:"Pickup System Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#vision-and-visibility-functions",children:"Vision and Visibility Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#game-mechanic-utilities",children:"Game Mechanic Utilities"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#atlas-management-functions",children:"Atlas Management Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#ui-and-animation-utilities",children:"UI and Animation Utilities"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#global-map-icon-system",children:"Global Map Icon System"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#special-events-system",children:"Special Events System"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"debug-and-deprecated-functions",children:"Debug and Deprecated Functions"}),"\n",(0,t.jsx)(n.h3,{id:"called-from",children:"CalledFrom()"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nReturns formatted information about the calling function for debugging purposes. Uses debug.getinfo() to trace the call stack."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): Formatted string containing source file, line number, and function name"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'function MyFunction()\n    print("Called from: " .. CalledFrom())\n    -- Output: "Called from: @scripts/mymodule.lua:25 in MyFunction"\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"get-world",children:"GetWorld()"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"deprecated"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nDeprecated function that returns TheWorld. Prints a deprecation warning when used."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity): TheWorld instance"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Migration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Old (deprecated)\nlocal world = GetWorld()\n\n-- New (recommended)\nlocal world = TheWorld\n"})}),"\n",(0,t.jsx)(n.h3,{id:"get-player",children:"GetPlayer()"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"deprecated"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nDeprecated function that returns ThePlayer. Prints a deprecation warning when used."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity): ThePlayer instance"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Migration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Old (deprecated)\nlocal player = GetPlayer()\n\n-- New (recommended)\nlocal player = ThePlayer\n"})}),"\n",(0,t.jsx)(n.h2,{id:"entity-finding-functions",children:"Entity Finding Functions"}),"\n",(0,t.jsx)(n.h3,{id:"find-entity",children:"FindEntity(inst, radius, fn, musttags, canttags, mustoneoftags)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFinds the first entity within radius that matches the given criteria and passes an optional filter function."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Center entity for the search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Search radius in world units"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): Optional filter function (entity, inst) \u2192 boolean"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"musttags"})," (table): Tags the entity must have"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"canttags"})," (table): Tags the entity must not have"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mustoneoftags"})," (table): Entity must have at least one of these tags"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity or nil): First matching entity, or nil if none found"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Find nearest campfire within 10 units\nlocal campfire = FindEntity(player, 10, nil, {"campfire"}, {"burnt"})\n\n-- Find workable entity with custom filter\nlocal workable = FindEntity(player, 5, \n    function(item, player) \n        return item.components.workable ~= nil \n    end, \n    {"structure"})\n'})}),"\n",(0,t.jsx)(n.h3,{id:"find-closest-entity",children:"FindClosestEntity(inst, radius, ignoreheight, musttags, canttags, mustoneoftags, fn)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFinds the closest entity within radius that matches criteria. Returns both entity and distance squared."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Center entity for the search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Search radius in world units"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ignoreheight"})," (boolean): Whether to ignore Y-axis for distance calculations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"musttags"})," (table): Tags the entity must have"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"canttags"})," (table): Tags the entity must not have"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mustoneoftags"})," (table): Entity must have at least one of these tags"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): Optional filter function"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity or nil): Closest matching entity"}),"\n",(0,t.jsx)(n.li,{children:"(number or nil): Distance squared to the entity"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local entity, distsq = FindClosestEntity(player, 20, false, {"tree"}, {"burnt"})\nif entity then\n    print("Found tree at distance:", math.sqrt(distsq))\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"get-random-inst-with-tag",children:"GetRandomInstWithTag(tag, inst, radius)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nReturns a random entity with specified tag(s) within radius."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tag"})," (string or table): Tag or table of tags to search for"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Center entity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Search radius"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity or nil): Random matching entity"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Get random flower nearby\nlocal flower = GetRandomInstWithTag("flower", player, 15)\n\n-- Get random entity with multiple tags\nlocal structure = GetRandomInstWithTag({"structure", "workable"}, player, 10)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"player-finding-functions",children:"Player Finding Functions"}),"\n",(0,t.jsx)(n.h3,{id:"find-closest-player",children:"FindClosestPlayer(x, y, z, isalive)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFinds the closest player to the given coordinates, optionally filtering by alive/dead status."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (number): X coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (number): Y coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"z"})," (number): Z coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isalive"})," (boolean or nil): true for alive only, false for dead only, nil for any"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity or nil): Closest player"}),"\n",(0,t.jsx)(n.li,{children:"(number or nil): Distance squared to player"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local player, distsq = FindClosestPlayer(0, 0, 0, true)\nif player then\n    print("Closest living player is", math.sqrt(distsq), "units away")\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"find-closest-player-in-range",children:"FindClosestPlayerInRange(x, y, z, range, isalive)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFinds the closest player within specified range."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (number): X coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (number): Y coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"z"})," (number): Z coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"range"})," (number): Maximum distance to search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isalive"})," (boolean or nil): Alive/dead filter"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity or nil): Closest player within range"}),"\n",(0,t.jsx)(n.li,{children:"(number or nil): Distance squared"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"find-players-in-range",children:"FindPlayersInRange(x, y, z, range, isalive)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nReturns a table of all players within specified range."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (number): X coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (number): Y coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"z"})," (number): Z coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"range"})," (number): Search radius"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isalive"})," (boolean or nil): Alive/dead filter"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(table): Array of player entities"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local players = FindPlayersInRange(x, y, z, 20, true)\nfor _, player in ipairs(players) do\n    print("Found player:", player.name)\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"is-any-player-in-range",children:"IsAnyPlayerInRange(x, y, z, range, isalive)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if any player exists within the specified range without returning the players."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (number): X coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (number): Y coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"z"})," (number): Z coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"range"})," (number): Search radius"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isalive"})," (boolean or nil): Alive/dead filter"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): true if any player is in range"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"position-validation-functions",children:"Position Validation Functions"}),"\n",(0,t.jsx)(n.h3,{id:"find-valid-position-by-fan",children:"FindValidPositionByFan(start_angle, radius, attempts, test_fn)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nSearches for a valid position using a fan pattern around a starting angle. The search fans out from the original direction to find a position that meets the test criteria."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"start_angle"})," (number): Starting angle in radians"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Distance from center to test"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"attempts"})," (number): Number of angles to test (default: 8)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"test_fn"})," (function): Function that takes offset Vector3 and returns boolean"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Vector3 or nil): Valid offset position"}),"\n",(0,t.jsx)(n.li,{children:"(number or nil): Actual angle used"}),"\n",(0,t.jsx)(n.li,{children:"(boolean): Whether the position was deflected from original angle"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local offset, angle, deflected = FindValidPositionByFan(\n    math.random() * TWOPI, \n    5, \n    8, \n    function(offset)\n        local x, z = pos.x + offset.x, pos.z + offset.z\n        return TheWorld.Map:IsAboveGroundAtPoint(x, 0, z)\n    end\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"find-walkable-offset",children:"FindWalkableOffset(position, start_angle, radius, attempts, check_los, ignore_walls, customcheckfn, allow_water, allow_boats)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFinds a walkable position offset from the given position using fan search pattern."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"position"})," (Vector3): Starting position"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"start_angle"})," (number): Starting search angle in radians"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Search radius"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"attempts"})," (number): Number of attempts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"check_los"})," (boolean): Whether to check line of sight"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ignore_walls"})," (boolean): Whether to ignore walls in pathfinding"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customcheckfn"})," (function): Custom validation function"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allow_water"})," (boolean): Whether water tiles are valid"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allow_boats"})," (boolean): Whether boat platforms are valid"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Vector3 or nil): Valid offset position"}),"\n",(0,t.jsx)(n.li,{children:"(number or nil): Angle used"}),"\n",(0,t.jsx)(n.li,{children:"(boolean): Whether deflected"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local offset = FindWalkableOffset(\n    player:GetPosition(), \n    math.random() * TWOPI, \n    8, \n    12, \n    true,  -- check line of sight\n    true,  -- ignore walls\n    nil,   -- no custom check\n    false, -- no water\n    false  -- no boats\n)\nif offset then\n    local spawn_pos = player:GetPosition() + offset\nend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"find-swimmable-offset",children:"FindSwimmableOffset(position, start_angle, radius, attempts, check_los, ignore_walls, customcheckfn, allow_boats)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nSimilar to FindWalkableOffset but specifically for ocean/water positions."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"position"})," (Vector3): Starting position"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"start_angle"})," (number): Starting search angle"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Search radius"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"attempts"})," (number): Number of attempts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"check_los"})," (boolean): Check line of sight"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ignore_walls"})," (boolean): Ignore walls"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customcheckfn"})," (function): Custom validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allow_boats"})," (boolean): Allow boat platforms"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Vector3 or nil): Valid water offset position"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pickup-system-functions",children:"Pickup System Functions"}),"\n",(0,t.jsx)(n.h3,{id:"find-pickupable-item",children:"FindPickupableItem(owner, radius, furthestfirst, positionoverride, ignorethese, onlytheseprefabs, allowpickables, worker, extra_filter, inventoryoverride)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFinds an item that can be picked up and placed in the owner's inventory. Handles both ground items and pickable objects like berries."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"owner"})," (entity): Entity that will pick up the item"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"radius"})," (number): Search radius"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"furthestfirst"})," (boolean): Search furthest items first"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"positionoverride"})," (Vector3): Custom search center position"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ignorethese"})," (table): Items to ignore in search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onlytheseprefabs"})," (table): Limit search to specific prefabs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allowpickables"})," (boolean): Include pickable objects (berries, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"worker"})," (entity): Worker entity for validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"extra_filter"})," (function): Additional filter function"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inventoryoverride"})," (component): Use this inventory instead of owner's"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(entity or nil): Pickupable item found"}),"\n",(0,t.jsx)(n.li,{children:"(boolean): Whether the item is a pickable object"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Find any pickupable item nearby\nlocal item, is_pickable = FindPickupableItem(player, 10)\nif item then\n    if is_pickable then\n        player.components.playeractionpicker:DoAction(ACTIONS.PICK, item)\n    else\n        player.components.playeractionpicker:DoAction(ACTIONS.PICKUP, item)\n    end\nend\n\n-- Find only specific items\nlocal tool = FindPickupableItem(\n    player, \n    15, \n    false, \n    nil, \n    nil, \n    {axe = true, pickaxe = true}  -- only tools\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"vision-and-visibility-functions",children:"Vision and Visibility Functions"}),"\n",(0,t.jsx)(n.h3,{id:"can-entity-see-in-dark",children:"CanEntitySeeInDark(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if an entity can see in the dark through night vision equipment or abilities."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Entity to check"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): true if entity has night vision"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'if CanEntitySeeInDark(player) then\n    -- Player can see in dark areas\n    print("Player has night vision")\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"can-entity-see-in-storm",children:"CanEntitySeeInStorm(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if an entity can see during storms (sandstorms, etc.) through appropriate equipment."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Entity to check"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): true if entity can see in storms"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"can-entity-see-point",children:"CanEntitySeePoint(inst, x, y, z)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nComprehensive visibility check that considers lighting, night vision, storms, and ink effects."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Viewing entity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (number): Target X coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (number): Target Y coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"z"})," (number): Target Z coordinate"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): true if entity can see the point"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local x, y, z = target.Transform:GetWorldPosition()\nif CanEntitySeePoint(player, x, y, z) then\n    -- Player can see the target location\n    player.components.combat:SetTarget(target)\nend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"can-entity-see-target",children:"CanEntitySeeTarget(inst, target)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if an entity can see a specific target entity."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Viewing entity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target"})," (entity): Target entity"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): true if inst can see target"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"game-mechanic-utilities",children:"Game Mechanic Utilities"}),"\n",(0,t.jsx)(n.h3,{id:"spring-combat-mod",children:"SpringCombatMod(amount, forced)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nApplies spring season combat modifier to amplify damage during spring."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"amount"})," (number): Base damage amount"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"forced"})," (boolean): Force spring modifier regardless of season"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(number): Modified damage amount"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local damage = 50\nlocal spring_damage = SpringCombatMod(damage)\n-- During spring: damage * TUNING.SPRING_COMBAT_MOD\n-- Other seasons: original damage\n"})}),"\n",(0,t.jsx)(n.h3,{id:"spring-growth-mod",children:"SpringGrowthMod(amount, forced)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nApplies spring season growth modifier to reduce timer durations during spring."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"amount"})," (number): Base time amount"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"forced"})," (boolean): Force spring modifier regardless of season"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(number): Modified time amount"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"erode-away",children:"ErodeAway(inst, erode_time)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCauses an entity to visually erode away over time before being removed."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Entity to erode"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"erode_time"})," (number): Time in seconds for erosion (default: 1)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Make a structure crumble away\nErodeAway(structure, 2.0)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"temporarily-remove-physics",children:"TemporarilyRemovePhysics(obj, time)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTemporarily removes physics collision from an object, then restores it."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obj"})," (entity): Object to modify"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"time"})," (number): Duration to remove physics"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Allow player to pass through object for 1 second\nTemporarilyRemovePhysics(barrier, 1.0)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"atlas-management-functions",children:"Atlas Management Functions"}),"\n",(0,t.jsx)(n.h3,{id:"register-inventory-item-atlas",children:"RegisterInventoryItemAtlas(atlas, imagename)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRegisters a custom atlas for inventory item images."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"atlas"})," (string): Atlas file path"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"imagename"})," (string): Image name in the atlas"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'RegisterInventoryItemAtlas("images/custom_items.xml", "my_custom_item")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"get-inventory-item-atlas",children:"GetInventoryItemAtlas(imagename, no_fallback)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets the atlas file containing a specific inventory item image."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"imagename"})," (string): Name of the image to find"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"no_fallback"})," (boolean): Don't fall back to default atlas"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string or nil): Atlas file path"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local atlas = GetInventoryItemAtlas("axe")\n-- Returns: "images/inventoryimages1.xml" (or appropriate atlas)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"get-minimap-atlas",children:"GetMinimapAtlas(imagename)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets the atlas file containing a minimap icon image."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"imagename"})," (string): Minimap icon name"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string or nil): Minimap atlas file path"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"get-scrapbook-icon-atlas",children:"GetScrapbookIconAtlas(imagename)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets the atlas file containing a scrapbook icon image."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"imagename"})," (string): Scrapbook icon name"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string or nil): Scrapbook icon atlas file path"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"ui-and-animation-utilities",children:"UI and Animation Utilities"}),"\n",(0,t.jsx)(n.h3,{id:"animate-ui-scale",children:"AnimateUIScale(item, total_time, start_scale, end_scale)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nSmoothly animates the scale of a UI element over time."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"item"})," (widget): UI widget to animate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"total_time"})," (number): Animation duration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"start_scale"})," (number): Starting scale value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"end_scale"})," (number): Ending scale value"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Animate button growing from 0.5 to 1.0 over 0.3 seconds\nAnimateUIScale(button, 0.3, 0.5, 1.0)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"shake-all-cameras",children:"ShakeAllCameras(mode, duration, speed, scale, source_or_pt, maxDist)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTriggers camera shake effect for all players."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mode"})," (constant): Shake mode (CAMERASHAKE.FULL, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"duration"})," (number): Shake duration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"speed"})," (number): Shake frequency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scale"})," (number): Shake intensity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"source_or_pt"})," (entity or Vector3): Shake source for distance calculations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"maxDist"})," (number): Maximum distance for shake effect"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Shake all cameras for explosion effect\nShakeAllCameras(CAMERASHAKE.FULL, 1.0, 0.02, 1.0, explosion_pos, 20)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"global-map-icon-system",children:"Global Map Icon System"}),"\n",(0,t.jsx)(n.h3,{id:"register-global-map-icon",children:"RegisterGlobalMapIcon(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRegisters an entity in the global map icons database for efficient batch operations."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Entity to register"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Register a structure for map icon management\nRegisterGlobalMapIcon(structure)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"unregister-global-map-icon",children:"UnregisterGlobalMapIcon(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRemoves an entity from the global map icons database."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (entity): Entity to unregister"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"special-events-system",children:"Special Events System"}),"\n",(0,t.jsx)(n.h3,{id:"apply-special-event",children:"ApplySpecialEvent(event)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nApplies a special world event that affects technology requirements."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"event"}),' (string): Event name or "default"']}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Apply Halloween event\nApplySpecialEvent(SPECIAL_EVENTS.HALLOWEEN)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"declare-limited-crafting-recipe",children:"DeclareLimitedCraftingRecipe(recipename)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nDeclares a crafting recipe as limited for crafting station management."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"recipename"})," (string): Name of the recipe"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'DeclareLimitedCraftingRecipe("custom_limited_item")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"constants-and-data-structures",children:"Constants and Data Structures"}),"\n",(0,t.jsx)(n.h3,{id:"global-variables",children:"Global Variables"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GlobalMapIconsDB"}),": Database tracking all registered map icons","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"insts"}),": Table mapping entity instances to registration status"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prefabs"}),": Table mapping prefab names to entity collections"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"search-tags",children:"Search Tags"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PICKUP_MUST_ONEOF_TAGS"}),": Tags required for pickup search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PICKUP_CANT_TAGS"}),": Tags that exclude items from pickup"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NO_CHARLIE_TAGS"}),": Tags that prevent Charlie spawning"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"entity-search-pattern",children:"Entity Search Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Standard entity search with validation\nlocal entity = FindEntity(inst, range, \n    function(item) \n        return item.components.workable ~= nil and\n               item.components.workable:CanBeWorked()\n    end, \n    {"structure"}, \n    {"burnt", "INLIMBO"}\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"position-validation-pattern",children:"Position Validation Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Find safe spawn position with custom validation\nlocal offset = FindWalkableOffset(\n    center_pos,\n    math.random() * TWOPI,\n    spawn_radius,\n    12,\n    true,  -- check LOS\n    true,  -- ignore walls\n    function(pos)\n        -- Custom validation\n        return not TheWorld.Map:IsPointNearHole(pos)\n    end\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"atlas-management-pattern",children:"Atlas Management Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Register and use custom atlas\nRegisterInventoryItemAtlas("images/mod_items.xml", "mod_item")\nlocal atlas = GetInventoryItemAtlas("mod_item")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./constants.md",children:(0,t.jsx)(n.strong,{children:"Constants"})}),": Defines constants used in search parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./entityscript.md",children:(0,t.jsx)(n.strong,{children:"EntityScript"})}),": Base entity functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../components/index.md",children:(0,t.jsx)(n.strong,{children:"Components"})}),": Component system used in entity filtering"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./actions.md",children:(0,t.jsx)(n.strong,{children:"Actions"})}),": Action system for pickup interactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./maputil.md",children:(0,t.jsx)(n.strong,{children:"MapUtil"})}),": Map-related utility functions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/mathutil",children:(0,t.jsx)(n.strong,{children:"MathUtil"})}),": Mathematical utilities used in calculations"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);