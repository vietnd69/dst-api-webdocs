"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[9500],{152:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"api-vanilla/components/builder","title":"Builder Component","description":"Last Update: 2023-08-01","source":"@site/docs/api-vanilla/components/builder.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/builder","permalink":"/dst-api-webdocs/docs/api-vanilla/components/builder","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":21,"frontMatter":{"id":"builder","title":"Builder Component","sidebar_position":21,"last_updated":"2023-08-01T00:00:00.000Z","version":624447},"sidebar":"docs","previous":{"title":"Perishable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/perishable"},"next":{"title":"Container","permalink":"/dst-api-webdocs/docs/api-vanilla/components/container"}}');var r=i(4848),s=i(8453);const t={id:"builder",title:"Builder Component",sidebar_position:21,last_updated:new Date("2023-08-01T00:00:00.000Z"),version:624447},d="Builder Component",c={},o=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Recipe Management",id:"recipe-management",level:3},{value:"Building",id:"building",level:3},{value:"Tech Levels",id:"tech-levels",level:3},{value:"Skill Tree Integration",id:"skill-tree-integration",level:3},{value:"Tech Trees",id:"tech-trees",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2},{value:"Example: Setting Up a Builder with Tech Levels",id:"example-setting-up-a-builder-with-tech-levels",level:2},{value:"Builder Skills vs Builder Tags",id:"builder-skills-vs-builder-tags",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Last Update: 2023-08-01"})}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"builder-component",children:"Builder Component"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"API Version: 624447"})}),"\n",(0,r.jsx)(n.p,{children:"The Builder component allows entities to craft and construct items and structures. It manages recipes, ingredients, technology levels, and crafting buffs."}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Add a builder component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("builder")\n\n-- Configure the builder component\nlocal builder = entity.components.builder\nbuilder:GiveAllRecipes() -- For testing, gives all recipes\nbuilder:UnlockRecipe("campfire") -- Unlock specific recipe\n'})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"recipes"})}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"List of known recipe names"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"freebuildmode"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Whether building requires ingredients"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ingredientmod"})}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Modifier for ingredient requirements"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"techlevels"})}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"Current tech levels the builder has access to"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bonus_tech_level"})}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"Extra tech levels from buffs or equipment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"buffered_builds"})}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"Builds queued for crafting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"current_prototyper"})}),(0,r.jsx)(n.td,{children:"Entity"}),(0,r.jsx)(n.td,{children:"Current workstation being used"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"builder_skills"})}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"Skills from character's skill tree that enable recipes (added in API 624447)"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,r.jsx)(n.h3,{id:"recipe-management",children:"Recipe Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Learn recipes\nbuilder:UnlockRecipe("spear") -- Learn a specific recipe\nbuilder:GiveAllRecipes() -- Learn all recipes\nbuilder:AddRecipe("firepit") -- Add a single recipe\n\n-- Check recipes\nlocal knows_recipe = builder:KnowsRecipe("axe")\nlocal can_build = builder:CanBuild("hammer")\nlocal tech_level = builder:GetTechLevel(TECH.SCIENCE_ONE)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"building",children:"Building"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Build an item\nbuilder:MakeRecipe("backpack", nil, nil, nil, nil, nil, 1)\n\n-- Get ingredient requirements\nlocal ingredients = builder:GetIngredients("tent")\n\n-- Count available ingredients\nlocal can_build, missing = builder:CanBuild("birdcage")\nif not can_build then\n    for i, v in ipairs(missing) do\n        print("Missing: " .. v.type .. " x" .. v.amount)\n    end\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tech-levels",children:"Tech Levels"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Set tech levels\nbuilder:SetTechLevel(TECH.SCIENCE_ONE, 1)\nbuilder:SetTechLevel(TECH.MAGIC_TWO, 1)\n\n-- Add temporary tech boost from equipment\nbuilder:AddBonus(TECH.SCIENCE_ONE, 1, "sciencemachine")\n\n-- Remove tech boost\nbuilder:RemoveBonus("sciencemachine")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"skill-tree-integration",children:"Skill Tree Integration"}),"\n",(0,r.jsx)(n.p,{children:"As of API version 624447, builder tags for skill trees have been replaced with builder skills:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Add a builder skill from a character\'s skill tree\nbuilder:AddBuilderSkill("woodcutter_harvester")\n\n-- Remove a builder skill\nbuilder:RemoveBuilderSkill("woodcutter_harvester")\n\n-- Check if builder has a specific skill\nlocal has_skill = builder:HasBuilderSkill("woodcutter_harvester")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"tech-trees",children:"Tech Trees"}),"\n",(0,r.jsx)(n.p,{children:"The builder component organizes recipes by tech trees:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.NONE"})," - Basic recipes available to everyone"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.SCIENCE_ONE"})," - Science Machine level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.SCIENCE_TWO"})," - Alchemy Engine level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.MAGIC_TWO"})," - Prestihatitator level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.MAGIC_THREE"})," - Shadow Manipulator level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.ANCIENT_TWO"})," - Ancient Pseudoscience Station level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TECH.CELESTIAL_ONE"})," - Celestial Altar level"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,r.jsx)(n.p,{children:"The Builder component often works with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Inventory"})," - For managing ingredients"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Sanity"})," - Some crafting can affect sanity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ActionHandler"})," - For triggering building actions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Prototyper"})," - For workstations that enhance crafting abilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Skilltreeupdater"})," - For skills that unlock recipes (added in API 624447)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/inventory",children:"Inventory Component"})," - For storing crafting ingredients"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Prototyper Component"})," - For workstations that provide tech levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/recipes/crafting",children:"Recipes"})," - For crafting recipe definitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/sanity",children:"Sanity Component"})," - For sanity effects from crafting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/container",children:"Container Component"})," - For storing crafted items"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-setting-up-a-builder-with-tech-levels",children:"Example: Setting Up a Builder with Tech Levels"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local function SetupBuilder(inst)\n    inst:AddComponent("builder")\n    \n    local builder = inst.components.builder\n    \n    -- Give basic tech level\n    builder:SetTechLevel(TECH.SCIENCE_ONE, 1)\n    \n    -- Unlock basic survival recipes\n    builder:UnlockRecipe("axe")\n    builder:UnlockRecipe("pickaxe")\n    builder:UnlockRecipe("campfire")\n    builder:UnlockRecipe("firepit")\n    builder:UnlockRecipe("spear")\n    \n    -- Add callback when near prototypers\n    inst:ListenForEvent("techtreechange", function(inst, data)\n        -- Do something when tech level changes\n        print("Tech tree changed: " .. data.level)\n    end)\n    \n    return builder\nend\n\n-- Example of using a prototyper (Science Machine)\nlocal function OnActivatePrototyper(inst, doer)\n    if doer.components.builder ~= nil then\n        doer.components.builder:AddBonus(TECH.SCIENCE_ONE, 1, inst)\n    end\nend\n\nlocal function OnDeactivatePrototyper(inst, doer)\n    if doer.components.builder ~= nil then\n        doer.components.builder:RemoveBonus(inst)\n    end\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"builder-skills-vs-builder-tags",children:"Builder Skills vs Builder Tags"}),"\n",(0,r.jsx)(n.p,{children:"Prior to API version 624447, character skill trees used builder tags to unlock recipes. As of 624447, these have been replaced with builder skills, which integrate directly with the skill tree system. If you were using builder tags related to skill trees in your mods, you'll need to update to the new builder skills system."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var l=i(6540);const r={},s=l.createContext(r);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);