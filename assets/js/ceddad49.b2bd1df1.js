"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[79669],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(96540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}},61808:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-monkey","title":"Global Variable Overrides (Monkey)","description":"Mod testing configuration with enabled warnings and mod support","source":"@site/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides_monkey.md","sourceDirName":"game-scripts/core-systems/game-configuration/settings","slug":"/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-monkey","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-monkey","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"globalvariableoverrides-monkey","title":"Global Variable Overrides (Monkey)","description":"Mod testing configuration with enabled warnings and mod support","sidebar_position":7,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Global Variable Overrides (Clean)","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-clean"},"next":{"title":"Global Variable Overrides (PAX Server)","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-pax-server"}}');var r=i(74848),l=i(28453);const t={id:"globalvariableoverrides-monkey",title:"Global Variable Overrides (Monkey)",description:"Mod testing configuration with enabled warnings and mod support",sidebar_position:7,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},o="Global Variable Overrides (Monkey)",a={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Configuration Variables",id:"configuration-variables",level:2},{value:"DISABLE_MOD_WARNING",id:"disable_mod_warning",level:3},{value:"MODS_ENABLED",id:"mods_enabled",level:3},{value:"Usage Example",id:"usage-example",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Mod Testing Environment",id:"mod-testing-environment",level:3},{value:"Development Testing",id:"development-testing",level:4},{value:"Mod Development Workflow",id:"mod-development-workflow",level:4},{value:"Variable Impact",id:"variable-impact",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"Primary Applications",id:"primary-applications",level:3},{value:"Testing Scenarios",id:"testing-scenarios",level:3},{value:"Single Mod Testing",id:"single-mod-testing",level:4},{value:"Multi-Mod Compatibility",id:"multi-mod-compatibility",level:4},{value:"Performance Analysis",id:"performance-analysis",level:4},{value:"Configuration Management",id:"configuration-management",level:2},{value:"When to Use Monkey Overrides",id:"when-to-use-monkey-overrides",level:3},{value:"Environment Setup",id:"environment-setup",level:3},{value:"Development Environment",id:"development-environment",level:4},{value:"Testing Protocols",id:"testing-protocols",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"Development Workflow",id:"development-workflow",level:3},{value:"Warning Management",id:"warning-management",level:3},{value:"Suppressed Warnings",id:"suppressed-warnings",level:4},{value:"Still Visible Issues",id:"still-visible-issues",level:4},{value:"Related Configuration Files",id:"related-configuration-files",level:2},{value:"Integration with Mod System",id:"integration-with-mod-system",level:2},{value:"Mod Loading Process",id:"mod-loading-process",level:3},{value:"Development Tools Integration",id:"development-tools-integration",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"global-variable-overrides-monkey",children:"Global Variable Overrides (Monkey)"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"globalvariableoverrides_monkey.lua"})," file configures global variables specifically for mod testing environments. It enables mod functionality while disabling mod warnings, creating an optimal environment for mod development and testing."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-variables",children:"Configuration Variables"}),"\n",(0,r.jsx)(n.h3,{id:"disable_mod_warning",children:"DISABLE_MOD_WARNING"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Disables warning messages that would normally appear when mods are loaded or active. This creates a cleaner testing environment by suppressing non-critical mod-related warnings."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Purpose:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reduces console noise during mod testing"}),"\n",(0,r.jsx)(n.li,{children:"Allows focus on actual mod functionality rather than warnings"}),"\n",(0,r.jsx)(n.li,{children:"Prevents warning spam in development environments"}),"\n",(0,r.jsx)(n.li,{children:"Improves readability of debug output"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mods_enabled",children:"MODS_ENABLED"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Value:"})," ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Explicitly enables mod support in the game environment. This ensures that the mod loading system is active and mods can be properly loaded and executed."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Purpose:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Activates the mod loading framework"}),"\n",(0,r.jsx)(n.li,{children:"Allows custom mod content to be loaded"}),"\n",(0,r.jsx)(n.li,{children:"Enables mod API functionality"}),"\n",(0,r.jsx)(n.li,{children:"Supports mod development workflow"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Content of globalvariableoverrides_monkey.lua\nDISABLE_MOD_WARNING = true\nMODS_ENABLED = true\n"})}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.h3,{id:"mod-testing-environment",children:"Mod Testing Environment"}),"\n",(0,r.jsx)(n.p,{children:"This configuration creates an environment optimized for:"}),"\n",(0,r.jsx)(n.h4,{id:"development-testing",children:"Development Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clean Output"}),": No warning noise cluttering debug messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full Mod Support"}),": Complete access to mod APIs and functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rapid Iteration"}),": Quick testing cycles without warning interruptions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Debug Focus"}),": Clear visibility of actual mod issues vs system warnings"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mod-development-workflow",children:"Mod Development Workflow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Example of how these settings affect mod loading\nif MODS_ENABLED then\n    -- Mod loading system is active\n    -- Custom mod content can be loaded\n    -- Mod APIs are available\nend\n\nif DISABLE_MOD_WARNING then\n    -- Warning suppression is active\n    -- Clean console output for debugging\n    -- Focus on functional issues\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"variable-impact",children:"Variable Impact"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Effect"}),(0,r.jsx)(n.th,{children:"Development Benefit"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DISABLE_MOD_WARNING"})}),(0,r.jsx)(n.td,{children:"Suppresses mod warnings"}),(0,r.jsx)(n.td,{children:"Cleaner debug output"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MODS_ENABLED"})}),(0,r.jsx)(n.td,{children:"Activates mod system"}),(0,r.jsx)(n.td,{children:"Full mod functionality access"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsx)(n.h3,{id:"primary-applications",children:"Primary Applications"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mod Development"}),": Testing custom mods during development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration Testing"}),": Verifying mod compatibility with game systems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Testing"}),": Measuring mod impact on game performance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quality Assurance"}),": Testing mod functionality before release"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing-scenarios",children:"Testing Scenarios"}),"\n",(0,r.jsx)(n.h4,{id:"single-mod-testing",children:"Single Mod Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Enable mod system for isolated mod testing\n-- Disable warnings to focus on functionality\n-- Ideal for: New mod development, bug fixing\n"})}),"\n",(0,r.jsx)(n.h4,{id:"multi-mod-compatibility",children:"Multi-Mod Compatibility"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Test multiple mods together\n-- Suppress warnings to identify real conflicts\n-- Ideal for: Compatibility testing, integration verification\n"})}),"\n",(0,r.jsx)(n.h4,{id:"performance-analysis",children:"Performance Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Measure mod performance impact\n-- Clean output for accurate profiling\n-- Ideal for: Optimization, resource usage analysis\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,r.jsx)(n.h3,{id:"when-to-use-monkey-overrides",children:"When to Use Monkey Overrides"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Active Mod Development"}),": Currently developing or testing mods"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mod Compatibility Testing"}),": Verifying mods work together"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-Release Testing"}),": Final testing before mod publication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Debug Sessions"}),": Troubleshooting mod-related issues"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,r.jsx)(n.h4,{id:"development-environment",children:"Development Environment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Copy monkey overrides for mod development\ncp globalvariableoverrides_monkey.lua globalvariableoverrides.lua\n\n# Verify configuration\ngrep -E "(DISABLE_MOD_WARNING|MODS_ENABLED)" globalvariableoverrides.lua\n'})}),"\n",(0,r.jsx)(n.h4,{id:"testing-protocols",children:"Testing Protocols"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Baseline Test"}),": Test with clean overrides first"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mod Test"}),": Switch to monkey overrides for mod testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Comparison"}),": Compare results between configurations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Record any behavior differences"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start Clean"}),": Begin testing with clean overrides"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enable Mods"}),": Switch to monkey overrides for mod testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor Output"}),": Watch for actual issues vs suppressed warnings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Document Issues"}),": Note any problems found during testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clean Deployment"}),": Remove test overrides for production"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"warning-management",children:"Warning Management"}),"\n",(0,r.jsx)(n.h4,{id:"suppressed-warnings",children:"Suppressed Warnings"}),"\n",(0,r.jsxs)(n.p,{children:["With ",(0,r.jsx)(n.code,{children:"DISABLE_MOD_WARNING = true"}),", these warnings are suppressed:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mod loading notifications"}),"\n",(0,r.jsx)(n.li,{children:"Non-critical mod compatibility messages"}),"\n",(0,r.jsx)(n.li,{children:"Development environment warnings"}),"\n",(0,r.jsx)(n.li,{children:"Deprecated mod API usage notices"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"still-visible-issues",children:"Still Visible Issues"}),"\n",(0,r.jsx)(n.p,{children:"Critical issues that still appear:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mod loading failures"}),"\n",(0,r.jsx)(n.li,{children:"Syntax errors in mod code"}),"\n",(0,r.jsx)(n.li,{children:"Critical compatibility problems"}),"\n",(0,r.jsx)(n.li,{children:"Game-breaking mod conflicts"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-configuration-files",children:"Related Configuration Files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides",children:"Base Overrides"}),": Template with no active overrides"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-clean",children:"Clean Overrides"}),": Empty configuration file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-configuration/settings/globalvariableoverrides-pax-server",children:"PAX Server Overrides"}),": Server event configuration"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-mod-system",children:"Integration with Mod System"}),"\n",(0,r.jsx)(n.h3,{id:"mod-loading-process",children:"Mod Loading Process"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- How monkey overrides affect mod loading\nif MODS_ENABLED then\n    -- 1. Mod directory scanning enabled\n    -- 2. Mod metadata parsing active\n    -- 3. Mod content loading allowed\n    -- 4. Mod API registration enabled\n    \n    if DISABLE_MOD_WARNING then\n        -- 5. Warning suppression active\n        -- 6. Clean output for debugging\n    end\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"development-tools-integration",children:"Development Tools Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mod Manager"}),": Works with enabled mod system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Debug Console"}),": Cleaner output with suppressed warnings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Profiler"}),": Accurate measurements without warning overhead"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automated Testing"}),": Consistent environment for mod testing"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);