"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[29164],{28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>c});var t=n(96540);const i={},r=t.createContext(i);function d(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(r.Provider,{value:s},e.children)}},96088:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"game-scripts/core-systems/core-systems-overview","title":"Core Systems Overview","description":"Overview of all core systems in the DST API","source":"@site/docs/game-scripts/core-systems/index.md","sourceDirName":"game-scripts/core-systems","slug":"/game-scripts/core-systems/","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"core-systems-overview","title":"Core Systems Overview","description":"Overview of all core systems in the DST API","sidebar_position":0,"last_updated":"2025-06-25T00:00:00.000Z","build_version":676312,"change_status":"modified","category_type":"main-index","system_scope":"all core systems"},"sidebar":"docs","previous":{"title":"Core Systems","permalink":"/dst-api-webdocs/docs/category/core-systems"},"next":{"title":"Character Systems Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/"}}');var i=n(74848),r=n(28453);const d={id:"core-systems-overview",title:"Core Systems Overview",description:"Overview of all core systems in the DST API",sidebar_position:0,last_updated:new Date("2025-06-25T00:00:00.000Z"),build_version:676312,change_status:"modified",category_type:"main-index",system_scope:"all core systems"},c="Core Systems Overview",l={},o=[{value:"Build Information",id:"build-information",level:2},{value:"Core Systems Architecture",id:"core-systems-architecture",level:2},{value:"System Categories",id:"system-categories",level:3},{value:"Game Foundation",id:"game-foundation",level:4},{value:"Player Experience",id:"player-experience",level:4},{value:"Content Management",id:"content-management",level:4},{value:"Development Support",id:"development-support",level:4},{value:"System Categories",id:"system-categories-1",level:2},{value:"Character Systems",id:"character-systems",level:3},{value:"Data Management",id:"data-management",level:3},{value:"Development Tools",id:"development-tools",level:3},{value:"Fundamentals",id:"fundamentals",level:3},{value:"Game Configuration",id:"game-configuration",level:3},{value:"Game Mechanics",id:"game-mechanics",level:3},{value:"Localization Content",id:"localization-content",level:3},{value:"Mod Support",id:"mod-support",level:3},{value:"Networking Communication",id:"networking-communication",level:3},{value:"System Core",id:"system-core",level:3},{value:"User Interface",id:"user-interface",level:3},{value:"World Systems",id:"world-systems",level:3},{value:"System Integration Patterns",id:"system-integration-patterns",level:2},{value:"Data Flow Architecture",id:"data-flow-architecture",level:3},{value:"Common Integration Points",id:"common-integration-points",level:3},{value:"Recent Global Changes",id:"recent-global-changes",level:2},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"System Dependencies",id:"system-dependencies",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Function Integration Patterns",id:"function-integration-patterns",level:2},{value:"Core Function Categories",id:"core-function-categories",level:3},{value:"System Initialization Functions",id:"system-initialization-functions",level:4},{value:"Cross-System Communication Functions",id:"cross-system-communication-functions",level:4},{value:"Component Management Functions",id:"component-management-functions",level:4},{value:"Function Integration Guidelines",id:"function-integration-guidelines",level:3},{value:"Dependency Management",id:"dependency-management",level:4},{value:"Cross-System Function Calls",id:"cross-system-function-calls",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common System Issues",id:"common-system-issues",level:3},{value:"Debugging Workflow",id:"debugging-workflow",level:3},{value:"Function Debugging",id:"function-debugging",level:3},{value:"Contributing to Core Systems",id:"contributing-to-core-systems",level:2},{value:"Adding New Systems",id:"adding-new-systems",level:3},{value:"Function Development Standards",id:"function-development-standards",level:3},{value:"Modifying Existing Systems",id:"modifying-existing-systems",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"core-systems-overview",children:"Core Systems Overview"})}),"\n",(0,i.jsx)(s.h2,{id:"build-information",children:"Build Information"}),"\n",(0,i.jsxs)(s.p,{children:["Current documentation based on build version: ",(0,i.jsx)(s.strong,{children:"676312"}),"\nLast updated: ",(0,i.jsx)(s.strong,{children:"2025-06-25"})]}),"\n",(0,i.jsx)(s.h2,{id:"core-systems-architecture",children:"Core Systems Architecture"}),"\n",(0,i.jsx)(s.p,{children:"The DST API is organized into several interconnected core systems that provide the foundation for all game functionality. These systems work together to create the complete Don't Starve Together experience."}),"\n",(0,i.jsx)(s.h3,{id:"system-categories",children:"System Categories"}),"\n",(0,i.jsx)(s.p,{children:"The core systems are organized into these major categories:"}),"\n",(0,i.jsx)(s.h4,{id:"game-foundation",children:"Game Foundation"}),"\n",(0,i.jsx)(s.p,{children:"Systems that provide the basic building blocks for all game functionality."}),"\n",(0,i.jsx)(s.h4,{id:"player-experience",children:"Player Experience"}),"\n",(0,i.jsx)(s.p,{children:"Systems that directly impact how players interact with the game world."}),"\n",(0,i.jsx)(s.h4,{id:"content-management",children:"Content Management"}),"\n",(0,i.jsx)(s.p,{children:"Systems that handle game assets, data, and content organization."}),"\n",(0,i.jsx)(s.h4,{id:"development-support",children:"Development Support"}),"\n",(0,i.jsx)(s.p,{children:"Systems that assist with development, debugging, and maintenance."}),"\n",(0,i.jsx)(s.h2,{id:"system-categories-1",children:"System Categories"}),"\n",(0,i.jsx)(s.h3,{id:"character-systems",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/",children:"Character Systems"})}),"\n",(0,i.jsx)(s.p,{children:"Manages all aspects of character behavior, customization, and progression."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/core/",children:"Core Character Systems"})}),(0,i.jsx)(s.td,{children:"Base character functionality"}),(0,i.jsx)(s.td,{children:"Character utilities, player deaths"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/customization/",children:"Customization"})}),(0,i.jsx)(s.td,{children:"Character appearance and clothing"}),(0,i.jsx)(s.td,{children:"Beefalo clothing, player clothing"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/emotes/",children:"Emotes"})}),(0,i.jsx)(s.td,{children:"Character expressions"}),(0,i.jsx)(s.td,{children:"Emote items, emoji items"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/progression/",children:"Progression"})}),(0,i.jsx)(s.td,{children:"Character advancement"}),(0,i.jsx)(s.td,{children:"Skill trees, progression constants"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/speech/",children:"Speech"})}),(0,i.jsx)(s.td,{children:"Character dialogue"}),(0,i.jsx)(s.td,{children:"Character-specific speech patterns, Rift 5 updates"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"data-management",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/",children:"Data Management"})}),"\n",(0,i.jsx)(s.p,{children:"Handles all data persistence, assets, and file operations."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/assets/",children:"Assets"})}),(0,i.jsx)(s.td,{children:"Asset loading and management"}),(0,i.jsx)(s.td,{children:"JSON handling, KLUMP files"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/saves/",children:"Saves"})}),(0,i.jsx)(s.td,{children:"Save file operations"}),(0,i.jsx)(s.td,{children:"Save file upgrades, save indexing"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/data-management/utilities/",children:"Utilities"})}),(0,i.jsx)(s.td,{children:"Data processing utilities"}),(0,i.jsx)(s.td,{children:"Platform post-load, scheduler"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"development-tools",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/",children:"Development Tools"})}),"\n",(0,i.jsx)(s.p,{children:"Provides debugging, profiling, and development utilities."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/console/",children:"Console"})}),(0,i.jsx)(s.td,{children:"Console commands and reload"}),(0,i.jsx)(s.td,{children:"Console commands, hot reload"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/",children:"Debugging"})}),(0,i.jsx)(s.td,{children:"Debug utilities and helpers"}),(0,i.jsx)(s.td,{children:"Debug commands, debug keys"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/profiling/",children:"Profiling"})}),(0,i.jsx)(s.td,{children:"Performance analysis"}),(0,i.jsx)(s.td,{children:"Profiler, memory analysis"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/utilities/",children:"Utilities"})}),(0,i.jsx)(s.td,{children:"Development utilities"}),(0,i.jsx)(s.td,{children:"Dumper, string fixes"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"fundamentals",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/",children:"Fundamentals"})}),"\n",(0,i.jsx)(s.p,{children:"Core building blocks that other systems depend on."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/",children:"Actions"})}),(0,i.jsx)(s.td,{children:"Player and entity actions"}),(0,i.jsx)(s.td,{children:"Action system, buffered actions"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/ai-systems/",children:"AI Systems"})}),(0,i.jsx)(s.td,{children:"Artificial intelligence"}),(0,i.jsx)(s.td,{children:"Behavior trees, brains"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/",children:"Core"})}),(0,i.jsx)(s.td,{children:"Base classes and entities"}),(0,i.jsx)(s.td,{children:"Entity script, class system"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/utilities/",children:"Utilities"})}),(0,i.jsx)(s.td,{children:"Shared utility functions"}),(0,i.jsx)(s.td,{children:"Common utilities"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"game-configuration",children:(0,i.jsx)(s.a,{href:"./game-confinguration/index.md",children:"Game Configuration"})}),"\n",(0,i.jsx)(s.p,{children:"System configuration and game mode management."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"./game-confinguration/modes/index.md",children:"Modes"})}),(0,i.jsx)(s.td,{children:"Game mode definitions"}),(0,i.jsx)(s.td,{children:"Mode settings, configurations"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"./game-confinguration/settings/index.md",children:"Settings"})}),(0,i.jsx)(s.td,{children:"Game settings and options"}),(0,i.jsx)(s.td,{children:"World settings, player preferences"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"./game-confinguration/stats/index.md",children:"Stats"})}),(0,i.jsx)(s.td,{children:"Statistics tracking"}),(0,i.jsx)(s.td,{children:"Performance stats, gameplay metrics"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"game-mechanics",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/",children:"Game Mechanics"})}),"\n",(0,i.jsx)(s.p,{children:"Implements specific gameplay features and systems."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/achievements/",children:"Achievements"})}),(0,i.jsx)(s.td,{children:"Achievement system"}),(0,i.jsx)(s.td,{children:"Achievement tracking"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/containers/",children:"Containers"})}),(0,i.jsx)(s.td,{children:"Container functionality"}),(0,i.jsx)(s.td,{children:"Container widgets"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/cooking/",children:"Cooking"})}),(0,i.jsx)(s.td,{children:"Cooking and recipes"}),(0,i.jsx)(s.td,{children:"Recipe system"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/",children:"Crafting"})}),(0,i.jsx)(s.td,{children:"Crafting system"}),(0,i.jsx)(s.td,{children:"Recipe management"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/special-events/",children:"Special Events"})}),(0,i.jsx)(s.td,{children:"Time-limited events"}),(0,i.jsx)(s.td,{children:"Event systems"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"localization-content",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/",children:"Localization Content"})}),"\n",(0,i.jsx)(s.p,{children:"Multi-language support and content localization."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/content/",children:"Content"})}),(0,i.jsx)(s.td,{children:"Localized game content"}),(0,i.jsx)(s.td,{children:"Text content, dialogue"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/strings/",children:"Strings"})}),(0,i.jsx)(s.td,{children:"String management"}),(0,i.jsx)(s.td,{children:"String resources, formatting"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/localization-content/translation/",children:"Translation"})}),(0,i.jsx)(s.td,{children:"Translation systems"}),(0,i.jsx)(s.td,{children:"Language switching, locale handling"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"mod-support",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/",children:"Mod Support"})}),"\n",(0,i.jsx)(s.p,{children:"Modding framework and integration systems."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/",children:"Core"})}),(0,i.jsx)(s.td,{children:"Base modding functionality"}),(0,i.jsx)(s.td,{children:"Mod loader, API hooks"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/dlc/",children:"DLC"})}),(0,i.jsx)(s.td,{children:"DLC integration"}),(0,i.jsx)(s.td,{children:"DLC content, compatibility"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"networking-communication",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/",children:"Networking Communication"})}),"\n",(0,i.jsx)(s.p,{children:"Multiplayer networking and communication systems."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/",children:"Chat Commands"})}),(0,i.jsx)(s.td,{children:"In-game chat system"}),(0,i.jsx)(s.td,{children:"Chat processing, commands"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/multiplayer/",children:"Multiplayer"})}),(0,i.jsx)(s.td,{children:"Multiplayer coordination"}),(0,i.jsx)(s.td,{children:"Player synchronization"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/networking/",children:"Networking"})}),(0,i.jsx)(s.td,{children:"Network protocols"}),(0,i.jsx)(s.td,{children:"Data transmission, connection handling"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"system-core",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/",children:"System Core"})}),"\n",(0,i.jsx)(s.p,{children:"Low-level engine integration and core functionality."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Engine Integration"}),(0,i.jsx)(s.td,{children:"Core engine bindings"}),(0,i.jsx)(s.td,{children:"Engine interface, system calls"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Performance Core"}),(0,i.jsx)(s.td,{children:"Performance optimization"}),(0,i.jsx)(s.td,{children:"Memory management, optimization"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"user-interface",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/",children:"User Interface"})}),"\n",(0,i.jsx)(s.p,{children:"User interface systems and widgets."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Widgets"}),(0,i.jsx)(s.td,{children:"UI component library"}),(0,i.jsx)(s.td,{children:"Interactive elements, displays"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Screens"}),(0,i.jsx)(s.td,{children:"Screen management"}),(0,i.jsx)(s.td,{children:"Menu systems, overlays"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Layouts"}),(0,i.jsx)(s.td,{children:"UI layout systems"}),(0,i.jsx)(s.td,{children:"Positioning, responsive design"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Controls"}),(0,i.jsx)(s.td,{children:"Input handling"}),(0,i.jsx)(s.td,{children:"User input, control mapping"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"world-systems",children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/world-systems/",children:"World Systems"})}),"\n",(0,i.jsx)(s.p,{children:"World generation and environmental systems."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System"}),(0,i.jsx)(s.th,{children:"Purpose"}),(0,i.jsx)(s.th,{children:"Key Components"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Generation"}),(0,i.jsx)(s.td,{children:"World creation"}),(0,i.jsx)(s.td,{children:"Terrain, biomes, structures"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Environment"}),(0,i.jsx)(s.td,{children:"Environmental effects"}),(0,i.jsx)(s.td,{children:"Weather, seasons, time"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Physics"}),(0,i.jsx)(s.td,{children:"World physics"}),(0,i.jsx)(s.td,{children:"Collision, movement, interactions"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Persistence"}),(0,i.jsx)(s.td,{children:"World state management"}),(0,i.jsx)(s.td,{children:"World saving, loading"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"system-integration-patterns",children:"System Integration Patterns"}),"\n",(0,i.jsx)(s.h3,{id:"data-flow-architecture",children:"Data Flow Architecture"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"User Input \u2192 Actions \u2192 Core Systems \u2192 Game State \u2192 World Updates\n     \u2193           \u2193           \u2193           \u2193           \u2193\nNetworking \u2192 Character \u2192 Fundamentals \u2192 Data Mgmt \u2192 UI Updates\n"})}),"\n",(0,i.jsx)(s.h3,{id:"common-integration-points",children:"Common Integration Points"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Entity System"}),": All systems interact through the core entity framework"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Event System"}),": Systems communicate via global and local events"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Component System"}),": Modular functionality through component attachment"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Save System"}),": State persistence across all game systems"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"recent-global-changes",children:"Recent Global Changes"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Build"}),(0,i.jsx)(s.th,{children:"Date"}),(0,i.jsx)(s.th,{children:"Category"}),(0,i.jsx)(s.th,{children:"Change Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676312"}),(0,i.jsx)(s.td,{children:"2025-06-25"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"./game-confinguration/index.md",children:"Game Configuration"})}),(0,i.jsx)(s.td,{children:"modified"}),(0,i.jsx)(s.td,{children:"Enhanced error recovery in console settings and cookbook data"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676312"}),(0,i.jsx)(s.td,{children:"2025-06-25"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/",children:"User Interface"})}),(0,i.jsx)(s.td,{children:"modified"}),(0,i.jsx)(s.td,{children:"Added validation line numbers in frontend and input systems"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676312"}),(0,i.jsx)(s.td,{children:"2025-06-25"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"./game-confinguration/index.md",children:"Game Configuration"})}),(0,i.jsx)(s.td,{children:"modified"}),(0,i.jsx)(s.td,{children:"Simplified tile conversion logic in game logic"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676312"}),(0,i.jsx)(s.td,{children:"2025-06-25"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"./game-confinguration/index.md",children:"Game Configuration"})}),(0,i.jsx)(s.td,{children:"modified"}),(0,i.jsx)(s.td,{children:"Added waxed berrybush variants to item blacklist"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676312"}),(0,i.jsx)(s.td,{children:"2025-06-25"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/character-systems/",children:"Character Systems"})}),(0,i.jsx)(s.td,{children:"modified"}),(0,i.jsx)(s.td,{children:"Added Rift 5 speech lines across multiple characters"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"676042"}),(0,i.jsx)(s.td,{children:"2025-01-21"}),(0,i.jsx)(s.td,{children:"Multiple"}),(0,i.jsx)(s.td,{children:"stability"}),(0,i.jsx)(s.td,{children:"General stability improvements"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"development-guidelines",children:"Development Guidelines"}),"\n",(0,i.jsx)(s.h3,{id:"system-dependencies",children:"System Dependencies"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Core Dependencies"}),": Fundamentals must be initialized first"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Layer Dependencies"}),": Higher-level systems depend on lower-level infrastructure"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Optional Dependencies"}),": Some systems provide enhanced functionality when available"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Memory Management"}),": Each system has specific memory usage patterns"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Update Frequency"}),": Systems update at different frequencies based on need"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Resource Sharing"}),": Systems share common resources efficiently"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Always initialize fundamentals before other systems"}),"\n",(0,i.jsx)(s.li,{children:"Use the event system for loose coupling between systems"}),"\n",(0,i.jsx)(s.li,{children:"Follow the component pattern for modular functionality"}),"\n",(0,i.jsx)(s.li,{children:"Maintain clear separation of concerns between system categories"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"function-integration-patterns",children:"Function Integration Patterns"}),"\n",(0,i.jsx)(s.h3,{id:"core-function-categories",children:"Core Function Categories"}),"\n",(0,i.jsx)(s.h4,{id:"system-initialization-functions",children:"System Initialization Functions"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- System startup pattern\nfunction InitializeCoreSystem(systemName, config)\n    local system = CreateSystem(systemName)\n    system:LoadConfiguration(config)\n    system:InitializeComponents()\n    system:RegisterEventHandlers()\n    return system\nend\n"})}),"\n",(0,i.jsx)(s.h4,{id:"cross-system-communication-functions",children:"Cross-System Communication Functions"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Event-based communication\nfunction BroadcastSystemEvent(eventName, data)\n    for _, system in pairs(GetActiveSystems()) do\n        if system:HandlesEvent(eventName) then\n            system:ProcessEvent(eventName, data)\n        end\n    end\nend\n"})}),"\n",(0,i.jsx)(s.h4,{id:"component-management-functions",children:"Component Management Functions"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"-- Component lifecycle management\nfunction AttachSystemComponent(entity, componentType, data)\n    local component = CreateComponent(componentType, data)\n    entity:AddComponent(component)\n    RegisterComponentWithSystem(component, componentType)\n    return component\nend\n"})}),"\n",(0,i.jsx)(s.h3,{id:"function-integration-guidelines",children:"Function Integration Guidelines"}),"\n",(0,i.jsx)(s.h4,{id:"dependency-management",children:"Dependency Management"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Function Registration"}),": All core functions must be registered with dependency system"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Initialization Order"}),": Functions dependent on other systems initialize after dependencies"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Error Handling"}),": Functions implement consistent error handling patterns"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Performance Monitoring"}),": Critical functions include performance tracking"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"cross-system-function-calls",children:"Cross-System Function Calls"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'-- Safe cross-system function invocation\nfunction CallSystemFunction(systemName, functionName, ...)\n    local system = GetSystem(systemName)\n    if system and system[functionName] then\n        return system[functionName](system, ...)\n    else\n        LogError("Function not available: " .. systemName .. "." .. functionName)\n        return nil\n    end\nend\n'})}),"\n",(0,i.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(s.h3,{id:"common-system-issues",children:"Common System Issues"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Issue"}),(0,i.jsx)(s.th,{children:"Affected Systems"}),(0,i.jsx)(s.th,{children:"Solution"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Initialization order"}),(0,i.jsx)(s.td,{children:"Fundamentals, All"}),(0,i.jsx)(s.td,{children:"Ensure core systems load first"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Memory leaks"}),(0,i.jsx)(s.td,{children:"Data Management"}),(0,i.jsx)(s.td,{children:"Follow proper cleanup procedures"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Performance drops"}),(0,i.jsx)(s.td,{children:"All"}),(0,i.jsx)(s.td,{children:"Check profiling tools"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Function conflicts"}),(0,i.jsx)(s.td,{children:"Cross-system"}),(0,i.jsx)(s.td,{children:"Use namespace isolation"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"debugging-workflow",children:"Debugging Workflow"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Identify which system category contains the issue"}),"\n",(0,i.jsx)(s.li,{children:"Use development tools to isolate the problem"}),"\n",(0,i.jsx)(s.li,{children:"Check system-specific documentation for solutions"}),"\n",(0,i.jsx)(s.li,{children:"Follow integration guidelines for cross-system issues"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"function-debugging",children:"Function Debugging"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:'-- Debug function execution\nfunction DebugFunctionCall(systemName, functionName, ...)\n    local startTime = GetTime()\n    local result = CallSystemFunction(systemName, functionName, ...)\n    local endTime = GetTime()\n    \n    LogDebug(string.format("Function %s.%s executed in %.2fms", \n        systemName, functionName, (endTime - startTime) * 1000))\n    \n    return result\nend\n'})}),"\n",(0,i.jsx)(s.h2,{id:"contributing-to-core-systems",children:"Contributing to Core Systems"}),"\n",(0,i.jsx)(s.h3,{id:"adding-new-systems",children:"Adding New Systems"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Determine appropriate category placement"}),"\n",(0,i.jsx)(s.li,{children:"Follow established architectural patterns"}),"\n",(0,i.jsx)(s.li,{children:"Document integration points clearly"}),"\n",(0,i.jsx)(s.li,{children:"Provide comprehensive testing"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"function-development-standards",children:"Function Development Standards"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Naming Conventions"}),": Use clear, descriptive function names"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Parameter Validation"}),": Validate all input parameters"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Return Values"}),": Provide consistent return value patterns"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Documentation"}),": Include comprehensive function documentation"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"modifying-existing-systems",children:"Modifying Existing Systems"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Understand current dependencies"}),"\n",(0,i.jsx)(s.li,{children:"Maintain backward compatibility"}),"\n",(0,i.jsx)(s.li,{children:"Update related documentation"}),"\n",(0,i.jsx)(s.li,{children:"Test integration impacts"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/components/",children:"Component Documentation"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/prefabs/",children:"Prefab Documentation"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/stategraphs/",children:"Stategraph Documentation"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/dst-api-webdocs/docs/game-scripts/brains/",children:"Brain Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);