"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[24595],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var s=i(96540);const t={},c=s.createContext(t);function d(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(c.Provider,{value:n},e.children)}},49931:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/actions/actions","title":"Actions","description":"Player interaction and action system for Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/fundamentals/actions/actions.md","sourceDirName":"game-scripts/core-systems/fundamentals/actions","slug":"/game-scripts/core-systems/fundamentals/actions/","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"actions","title":"Actions","description":"Player interaction and action system for Don\'t Starve Together","sidebar_position":1,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Actions Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/"},"next":{"title":"Buffered Action System","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/bufferedaction"}}');var t=i(74848),c=i(28453);const d={id:"actions",title:"Actions",description:"Player interaction and action system for Don't Starve Together",sidebar_position:1,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},r="Actions",l={},o=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Classes/Components",id:"classescomponents",level:2},{value:"Action",id:"action",level:3},{value:"Constructor",id:"constructor",level:4},{value:"Properties",id:"properties",level:4},{value:"Functions",id:"functions",level:2},{value:"MakeRangeCheckFn(range)",id:"make-range-check-fn",level:3},{value:"PhysicsPaddedRangeCheck(doer, target)",id:"physics-padded-range-check",level:3},{value:"Constants",id:"constants",level:2},{value:"HIGH_ACTION_PRIORITY",id:"high_action_priority",level:3},{value:"DefaultRangeCheck",id:"defaultrangecheck",level:3},{value:"Core Actions",id:"core-actions",level:2},{value:"Basic Interactions",id:"basic-interactions",level:3},{value:"Tool Actions",id:"tool-actions",level:3},{value:"Fire and Light",id:"fire-and-light",level:3},{value:"Ocean Actions",id:"ocean-actions",level:3},{value:"High Priority Actions",id:"high-priority-actions",level:3},{value:"Action Execution Functions",id:"action-execution-functions",level:2},{value:"Example Action Functions",id:"example-action-functions",level:3},{value:"Range Check Functions",id:"range-check-functions",level:2},{value:"Custom Range Checks",id:"custom-range-checks",level:3},{value:"Extra Distance Functions",id:"extra-distance-functions",level:2},{value:"ExtraDeployDist(doer, dest, bufferedaction)",id:"extradeploydistdoer-dest-bufferedaction",level:3},{value:"ExtraPickupRange(doer, dest)",id:"extrapickuprangedoer-dest",level:3},{value:"ExtraDropDist(doer, dest, bufferedaction)",id:"extradropdistdoer-dest-bufferedaction",level:3},{value:"Global Variables",id:"global-variables",level:2},{value:"CLIENT_REQUESTED_ACTION",id:"client_requested_action",level:3},{value:"ACTIONS_MAP_REMAP",id:"actions_map_remap",level:3},{value:"Module Functions",id:"module-functions",level:2},{value:"SetClientRequestedAction(actioncode, mod_name)",id:"setclientrequestedactionactioncode-mod_name",level:3},{value:"ClearClientRequestedAction()",id:"clearclientrequestedaction",level:3},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Action Priority System",id:"action-priority-system",level:3},{value:"Distance Management",id:"distance-management",level:3},{value:"Platform Integration",id:"platform-integration",level:3},{value:"Map Actions",id:"map-actions",level:3},{value:"Related Modules",id:"related-modules",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"actions",children:"Actions"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"actions.lua"})," module defines all possible player interactions in Don't Starve Together. It contains the ",(0,t.jsx)(n.code,{children:"Action"})," class for defining interaction types and a comprehensive list of all available actions. Actions represent everything from basic movement and item usage to complex crafting and combat mechanics."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Access an action\nlocal action = ACTIONS.CHOP\n\n-- Check action properties\nprint("Priority:", action.priority)\nprint("Distance:", action.distance)\nprint("Mount valid:", action.mount_valid)\n\n-- Create a BufferedAction (usually done by the game)\nlocal buffered_action = BufferedAction(player, tree, ACTIONS.CHOP, axe)\n\n-- Execute action function\nlocal success = action.fn(buffered_action)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"classescomponents",children:"Classes/Components"}),"\n",(0,t.jsx)(n.h3,{id:"action",children:"Action"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nClass that defines the template for an interaction type. Specifies conditions, requirements, and behavior for player actions."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation in build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"Action = Class(function(self, data, instant, rmb, distance, ghost_valid, ghost_exclusive, canforce, rangecheckfn)\n    -- Modern usage (table format recommended):\n    local myAction = Action({\n        priority = 2,\n        rmb = true,\n        distance = 3,\n        mount_valid = true\n    })\nend)\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": Positional parameters are deprecated. Always use table format for new actions."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Core Properties:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"priority"})," (number): Action priority (default: 0). Higher values take precedence"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): Execution function, returns ",(0,t.jsx)(n.code,{children:"true"})," for success (default: returns ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"strfn"})," (function): Optional string variation function"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"instant"})," (boolean): Whether action happens instantly without animation (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rmb"})," (boolean): Whether action is triggered by right-mouse button (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Distance Properties:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"distance"})," (number): Maximum distance to perform action (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mindistance"})," (number): Minimum distance required (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"arrivedist"}),' (number): Distance considered "arrived" at target (default: ',(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"extra_arrive_dist"})," (function): Function to calculate additional arrival distance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Validity Properties:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ghost_valid"})," (boolean): Can be performed as ghost (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ghost_exclusive"})," (boolean): Can ONLY be performed as ghost (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mount_valid"})," (boolean): Can be performed while mounted (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encumbered_valid"})," (boolean): Can be performed while carrying heavy objects (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"paused_valid"})," (boolean): Can be performed while game is paused (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Interaction Properties:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"canforce"})," (boolean): Whether action can be forced (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rangecheckfn"})," (function): Custom range check function (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"silent_fail"})," (boolean): Suppress failure notifications (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"invalid_hold_action"})," (boolean): Cannot be held/repeated (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Platform and Movement:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"is_relative_to_platform"})," (boolean): Position relative to boat/platform (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"disable_platform_hopping"})," (boolean): Disable platform hopping (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"skip_locomotor_facing"})," (boolean): Skip automatic facing behavior (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"do_not_locomote"})," (boolean): Prevent movement during action (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customarrivecheck"})," (function): Custom arrival check function"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"UI and Audio:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"actionmeter"})," (boolean): Show progress meter (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"theme_music"})," (string): Music to play during action (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"theme_music_fn"})," (function): Client-side function for theme music (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tile_placer"})," (string): Type of tile placer to show (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"show_tile_placer_fn"})," (function): When to show tile placer (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Map Actions:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"map_action"})," (boolean): Only handled from map with translations (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"closes_map"})," (boolean): Immediately close minimap on action start (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"map_only"})," (boolean): Action only exists from map (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"map_works_on_unexplored"})," (boolean): Bypass visibility checks (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Callbacks:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pre_action_cb"})," (function): Runs before action execution on client and server (default: ",(0,t.jsx)(n.code,{children:"nil"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"make-range-check-fn",children:"MakeRangeCheckFn(range)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nFactory function that creates range check functions with specified distance."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"range"})," (number): Maximum range for the check"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(function): Range check function that tests if doer is near target"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local CustomRangeCheck = MakeRangeCheckFn(5)\n-- Returns function that checks if doer is within 5 units of target\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation in build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"physics-padded-range-check",children:"PhysicsPaddedRangeCheck(doer, target)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRange check that accounts for target's physics radius plus padding."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"doer"})," (Entity): Entity performing the action"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target"})," (Entity): Target entity"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): Whether target is within padded physics range"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Used for actions on large objects\nlocal in_range = PhysicsPaddedRangeCheck(player, large_structure)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Current implementation in build 676042"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,t.jsx)(n.h3,{id:"high_action_priority",children:"HIGH_ACTION_PRIORITY"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Value:"})," ",(0,t.jsx)(n.code,{children:"10"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Priority value for actions that should always dominate when available. Used for critical actions like map-based interactions."]}),"\n",(0,t.jsx)(n.h3,{id:"defaultrangecheck",children:"DefaultRangeCheck"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Value:"})," ",(0,t.jsx)(n.code,{children:"MakeRangeCheckFn(4)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Standard range check function with 4 unit range."]}),"\n",(0,t.jsx)(n.h2,{id:"core-actions",children:"Core Actions"}),"\n",(0,t.jsxs)(n.p,{children:["The module defines numerous action constants in the ",(0,t.jsx)(n.code,{children:"ACTIONS"})," table. Key categories include:"]}),"\n",(0,t.jsx)(n.h3,{id:"basic-interactions",children:"Basic Interactions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Action"}),(0,t.jsx)(n.th,{children:"Priority"}),(0,t.jsx)(n.th,{children:"Distance"}),(0,t.jsx)(n.th,{children:"Mount Valid"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PICKUP"})}),(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Pick up items from ground"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DROP"})}),(0,t.jsx)(n.td,{children:"-1"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Drop items from inventory"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EQUIP"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Equip items from inventory"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"UNEQUIP"})}),(0,t.jsx)(n.td,{children:"-2"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Unequip equipped items"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LOOKAT"})}),(0,t.jsx)(n.td,{children:"-3"}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Examine objects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"WALKTO"})}),(0,t.jsx)(n.td,{children:"-4"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Move to position"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TALKTO"})}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Talk to NPCs"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"INTERACT_WITH"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"1.5"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"General interaction"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"tool-actions",children:"Tool Actions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Action"}),(0,t.jsx)(n.th,{children:"Priority"}),(0,t.jsx)(n.th,{children:"Distance"}),(0,t.jsx)(n.th,{children:"Hold Invalid"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CHOP"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"1.75"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Chop trees with axe"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"MINE"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Mine rocks and minerals"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DIG"})}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Dig objects (RMB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"HAMMER"})}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Hammer structures"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ATTACK"})}),(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Attack creatures/objects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"NET"})}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Catch bugs with net"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"fire-and-light",children:"Fire and Light"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Action"}),(0,t.jsx)(n.th,{children:"Priority"}),(0,t.jsx)(n.th,{children:"Distance"}),(0,t.jsx)(n.th,{children:"Mount Valid"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LIGHT"})}),(0,t.jsx)(n.td,{children:"-4"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Light objects on fire"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXTINGUISH"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Extinguish fires"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"STOKEFIRE"})}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"8"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Stoke fires (RMB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ADDFUEL"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Add fuel to objects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ADDWETFUEL"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Add wet fuel to objects"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"ocean-actions",children:"Ocean Actions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Action"}),(0,t.jsx)(n.th,{children:"Priority"}),(0,t.jsx)(n.th,{children:"Distance"}),(0,t.jsx)(n.th,{children:"Platform Related"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FISH_OCEAN"})}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Ocean fishing (RMB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"OCEAN_FISHING_CAST"})}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Cast fishing line (RMB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"OCEAN_FISHING_REEL"})}),(0,t.jsx)(n.td,{children:"5"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Reel in fish (RMB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ROW"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Row boat"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"high-priority-actions",children:"High Priority Actions"}),"\n",(0,t.jsxs)(n.p,{children:["Actions with ",(0,t.jsx)(n.code,{children:"HIGH_ACTION_PRIORITY"})," (10):"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Action"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TOGGLE_DEPLOY_MODE"})}),(0,t.jsx)(n.td,{children:"Toggle deploy mode"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"BLINK"})}),(0,t.jsx)(n.td,{children:"Teleportation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"BLINK_MAP"})}),(0,t.jsx)(n.td,{children:"Map-based teleportation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"JUMPIN_MAP"})}),(0,t.jsx)(n.td,{children:"Map-based wormhole travel"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"action-execution-functions",children:"Action Execution Functions"}),"\n",(0,t.jsxs)(n.p,{children:["Each action has an execution function (",(0,t.jsx)(n.code,{children:"action.fn"}),") that defines what happens when the action is performed. These functions receive a ",(0,t.jsx)(n.code,{children:"BufferedAction"})," parameter and return ",(0,t.jsx)(n.code,{children:"true"})," for success or ",(0,t.jsx)(n.code,{children:"false"})," for failure."]}),"\n",(0,t.jsx)(n.h3,{id:"example-action-functions",children:"Example Action Functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Simple action function\nACTIONS.PICKUP.fn = function(act)\n    if act.doer.components.inventory then\n        return act.doer.components.inventory:GiveItem(act.target)\n    end\n    return false\nend\n\n-- Action with component interaction\nACTIONS.CHOP.fn = function(act)\n    if act.target.components.workable then\n        return act.target.components.workable:WorkedBy(act.doer, act.invobject)\n    end\n    return false\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"range-check-functions",children:"Range Check Functions"}),"\n",(0,t.jsx)(n.p,{children:"Several built-in range check functions are available:"}),"\n",(0,t.jsx)(n.h3,{id:"custom-range-checks",children:"Custom Range Checks"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Ocean fishing range check\nlocal function CheckFishingOceanRange(doer, dest)\n    local doer_pos = doer:GetPosition()\n    local target_pos = Vector3(dest:GetPoint())\n    local dir = target_pos - doer_pos\n    local test_pt = doer_pos + dir:GetNormalized() * (doer:GetPhysicsRadius(0) + 0.25)\n    \n    if TheWorld.Map:IsVisualGroundAtPoint(test_pt.x, 0, test_pt.z) then\n        return FindVirtualOceanEntity(test_pt.x, 0, test_pt.z) ~= nil\n    else\n        return true\n    end\nend\n\n-- Tile placement range check\nlocal function CheckTileWithinRange(doer, dest)\n    local doer_pos = doer:GetPosition()\n    local target_pos = Vector3(dest:GetPoint())\n    local tile_x, tile_y, tile_z = TheWorld.Map:GetTileCenterPoint(target_pos.x, 0, target_pos.z)\n    local dist = TILE_SCALE * 0.5\n    return math.abs(tile_x - doer_pos.x) <= dist and math.abs(tile_z - doer_pos.z) <= dist\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"extra-distance-functions",children:"Extra Distance Functions"}),"\n",(0,t.jsx)(n.p,{children:"Functions that calculate additional distance requirements:"}),"\n",(0,t.jsx)(n.h3,{id:"extradeploydistdoer-dest-bufferedaction",children:"ExtraDeployDist(doer, dest, bufferedaction)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates extra distance needed for deployment based on:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Projectile items (+8 units)"}),"\n",(0,t.jsx)(n.li,{children:"Cross-terrain deployment (+1 unit)"}),"\n",(0,t.jsx)(n.li,{children:"Items with deploy spacing"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"extrapickuprangedoer-dest",children:"ExtraPickupRange(doer, dest)"}),"\n",(0,t.jsx)(n.p,{children:"Adds extra range for picking up items on water (+0.75 units)."}),"\n",(0,t.jsx)(n.h3,{id:"extradropdistdoer-dest-bufferedaction",children:"ExtraDropDist(doer, dest, bufferedaction)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates extra distance for dropping items:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"On water (+1.75 units)"}),"\n",(0,t.jsx)(n.li,{children:"Based on item physics radius"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"global-variables",children:"Global Variables"}),"\n",(0,t.jsx)(n.h3,{id:"client_requested_action",children:"CLIENT_REQUESTED_ACTION"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"Action | nil"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Stores the currently requested action from client, used for action synchronization."]}),"\n",(0,t.jsx)(n.h3,{id:"actions_map_remap",children:"ACTIONS_MAP_REMAP"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"table"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Maps normal actions to their map-based equivalents for map interface interactions."]}),"\n",(0,t.jsx)(n.h2,{id:"module-functions",children:"Module Functions"}),"\n",(0,t.jsx)(n.h3,{id:"setclientrequestedactionactioncode-mod_name",children:"SetClientRequestedAction(actioncode, mod_name)"}),"\n",(0,t.jsx)(n.p,{children:"Sets the client requested action for synchronization."}),"\n",(0,t.jsx)(n.h3,{id:"clearclientrequestedaction",children:"ClearClientRequestedAction()"}),"\n",(0,t.jsx)(n.p,{children:"Clears the current client requested action."}),"\n",(0,t.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,t.jsx)(n.h3,{id:"action-priority-system",children:"Action Priority System"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Negative priorities (-4 to -1)"}),": Background actions (walk, look, drop)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Zero priority (0)"}),": Standard interactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Positive priorities (1-3)"}),": Important actions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"High priority (10)"}),": Actions that should always dominate"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"distance-management",children:"Distance Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Actions can specify ",(0,t.jsx)(n.code,{children:"distance"}),", ",(0,t.jsx)(n.code,{children:"mindistance"}),", and ",(0,t.jsx)(n.code,{children:"arrivedist"})]}),"\n",(0,t.jsxs)(n.li,{children:["Custom range checks via ",(0,t.jsx)(n.code,{children:"rangecheckfn"})]}),"\n",(0,t.jsxs)(n.li,{children:["Dynamic distance calculation via ",(0,t.jsx)(n.code,{children:"extra_arrive_dist"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"platform-integration",children:"Platform Integration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Actions can be relative to platforms (",(0,t.jsx)(n.code,{children:"is_relative_to_platform"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Platform hopping can be disabled (",(0,t.jsx)(n.code,{children:"disable_platform_hopping"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Custom arrival checks for water/platform boundaries"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"map-actions",children:"Map Actions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Map-only actions (",(0,t.jsx)(n.code,{children:"map_only"}),") exist solely in map interface"]}),"\n",(0,t.jsxs)(n.li,{children:["Map actions (",(0,t.jsx)(n.code,{children:"map_action"}),") have translations for map use"]}),"\n",(0,t.jsxs)(n.li,{children:["Some actions close the map automatically (",(0,t.jsx)(n.code,{children:"closes_map"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/bufferedaction",children:"Buffered Action"}),": Instance-specific action execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/actions/componentactions",children:"Component Actions"}),": Component-based action definitions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../stategraphs/stategraph.md",children:"State Graphs"}),": Action animation and timing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"playercontroller.md",children:"Player Controller"}),": Action input and execution handling"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);