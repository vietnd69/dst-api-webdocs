"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[48877],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},75644:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/networking-communication/chat-commands/builtinusercommands","title":"Built-in User Commands System","description":"Documentation of the Don\'t Starve Together built-in user commands for player interaction and server administration","source":"@site/docs/game-scripts/core-systems/networking-communication/chat-commands/builtinusercommands.md","sourceDirName":"game-scripts/core-systems/networking-communication/chat-commands","slug":"/game-scripts/core-systems/networking-communication/chat-commands/builtinusercommands","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/builtinusercommands","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"builtinusercommands","title":"Built-in User Commands System","description":"Documentation of the Don\'t Starve Together built-in user commands for player interaction and server administration","sidebar_position":3,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Chat Commands Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/"},"next":{"title":"ChatHistory","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/chat-commands/chathistory"}}');var r=s(74848),t=s(28453);const l={id:"builtinusercommands",title:"Built-in User Commands System",description:"Documentation of the Don't Starve Together built-in user commands for player interaction and server administration",sidebar_position:3,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},o="Built-in User Commands System",a={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"System Limitations",id:"system-limitations",level:2},{value:"Permission System",id:"permission-system",level:2},{value:"Permission Levels",id:"permission-levels",level:3},{value:"Command Properties",id:"command-properties",level:3},{value:"Built-in Commands",id:"built-in-commands",level:2},{value:"Player Commands",id:"player-commands",level:3},{value:"help Command",id:"help-command",level:4},{value:"emote Command",id:"emote-command",level:4},{value:"bug Command",id:"bug-command",level:4},{value:"rescue Command",id:"rescue-command",level:4},{value:"roll Command",id:"roll-command",level:4},{value:"Moderation Commands",id:"moderation-commands",level:3},{value:"kick Command",id:"kick-command",level:4},{value:"Administrative Commands",id:"administrative-commands",level:3},{value:"ban Command",id:"ban-command",level:4},{value:"stopvote Command",id:"stopvote-command",level:4},{value:"rollback Command",id:"rollback-command",level:4},{value:"regenerate Command",id:"regenerate-command",level:4},{value:"Voting System Integration",id:"voting-system-integration",level:2},{value:"Voting Properties",id:"voting-properties",level:3},{value:"Voting Functions",id:"voting-functions",level:3},{value:"Common Voting Configuration",id:"common-voting-configuration",level:3},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Custom Command Creation",id:"custom-command-creation",level:3},{value:"Command with Voting",id:"command-with-voting",level:3},{value:"Command with Access Control",id:"command-with-access-control",level:3},{value:"Command with Cooldown",id:"command-with-cooldown",level:3},{value:"Error Handling and Validation",id:"error-handling-and-validation",level:2},{value:"Parameter Validation",id:"parameter-validation",level:3},{value:"Safe Execution",id:"safe-execution",level:3},{value:"Integration with Game Systems",id:"integration-with-game-systems",level:2},{value:"Chat System Integration",id:"chat-system-integration",level:3},{value:"Network Integration",id:"network-integration",level:3},{value:"World Management Integration",id:"world-management-integration",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Permission Validation",id:"permission-validation",level:3},{value:"Anti-Spam Measures",id:"anti-spam-measures",level:3},{value:"Network Security",id:"network-security",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Command Design",id:"command-design",level:3},{value:"Voting Implementation",id:"voting-implementation",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Related Systems",id:"related-systems",level:2},{value:"Status: \ud83d\udfe2 Stable",id:"status--stable",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"built-in-user-commands-system",children:"Built-in User Commands System"})}),"\n",(0,r.jsx)(n.p,{children:"The Built-in User Commands system in Don't Starve Together provides a comprehensive set of predefined commands for player interaction, server administration, and game management. This system leverages the UserCommands framework to deliver essential functionality including chat commands, moderation tools, and voting mechanisms."}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"675312"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Updated documentation to match current implementation"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The built-in user commands system serves multiple purposes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Player Tools"}),": Essential commands for player communication and interaction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Administration"}),": Commands for server management and moderation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Voting System"}),": Democratic decision-making tools for community servers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Help System"}),": Built-in documentation and command discovery"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The system is built on the UserCommands framework and includes permission-based access control, voting mechanisms, and extensive customization options."}),"\n",(0,r.jsx)(n.h2,{id:"system-limitations",children:"System Limitations"}),"\n",(0,r.jsxs)(n.admonition,{title:"Current Limitations",type:"warning",children:[(0,r.jsx)(n.p,{children:"Based on the source code comments, be aware of these limitations:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shard Support"}),": Shards are not fully supported yet. Only local commands or commands affecting master-server components work correctly across shards."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Moderator Permissions"}),": ",(0,r.jsx)(n.code,{children:"COMMAND_PERMISSION.MODERATOR"})," doesn't have full functionality yet."]}),"\n"]}),(0,r.jsx)(n.p,{children:"These limitations are planned to be resolved in future updates."})]}),"\n",(0,r.jsx)(n.h2,{id:"permission-system",children:"Permission System"}),"\n",(0,r.jsx)(n.h3,{id:"permission-levels",children:"Permission Levels"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Permission"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Access Level"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"COMMAND_PERMISSION.USER"})}),(0,r.jsx)(n.td,{children:"Basic player commands"}),(0,r.jsx)(n.td,{children:"All players"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"COMMAND_PERMISSION.MODERATOR"})}),(0,r.jsx)(n.td,{children:"Moderation commands"}),(0,r.jsx)(n.td,{children:"Moderators and above"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"COMMAND_PERMISSION.ADMIN"})}),(0,r.jsx)(n.td,{children:"Administrative commands"}),(0,r.jsx)(n.td,{children:"Administrators only"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"command-properties",children:"Command Properties"}),"\n",(0,r.jsx)(n.p,{children:"Each command can have these properties:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prettyname"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Display name for the command"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"desc"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Description of command functionality"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"permission"})}),(0,r.jsx)(n.td,{children:"Permission"}),(0,r.jsx)(n.td,{children:"Required permission level"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"aliases"})}),(0,r.jsx)(n.td,{children:"Array"}),(0,r.jsx)(n.td,{children:"Alternative names for the command"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"slash"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Whether command uses slash prefix"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"usermenu"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Available in user context menu"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"servermenu"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Available in server menu"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"params"})}),(0,r.jsx)(n.td,{children:"Array"}),(0,r.jsx)(n.td,{children:"Required parameters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"paramsoptional"})}),(0,r.jsx)(n.td,{children:"Array"}),(0,r.jsx)(n.td,{children:"Optional parameter flags"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vote"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Whether command supports voting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"confirm"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Requires confirmation before execution"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"built-in-commands",children:"Built-in Commands"}),"\n",(0,r.jsx)(n.h3,{id:"player-commands",children:"Player Commands"}),"\n",(0,r.jsx)(n.h4,{id:"help-command",children:"help Command"}),"\n",(0,r.jsx)(n.p,{children:"Provides command documentation and discovery:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("help", {\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {"commandname"},\n    paramsoptional = {true},\n    vote = false,\n    localfn = function(params, caller)\n        -- Display help information\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/help"})," - Lists all available commands"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/help <commandname>"})," - Shows detailed help for specific command"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lists available commands with permissions"}),"\n",(0,r.jsx)(n.li,{children:"Shows command syntax and parameters"}),"\n",(0,r.jsx)(n.li,{children:"Provides command descriptions"}),"\n",(0,r.jsx)(n.li,{children:"Handles unknown commands gracefully"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"emote-command",children:"emote Command"}),"\n",(0,r.jsx)(n.p,{children:"Enables player emotes and expressions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("emote", {\n    aliases = { "e", "me" },\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {"emotename"},\n    paramsoptional = {false},\n    vote = false,\n    localfn = function(params, caller)\n        -- Handle emote execution\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/emote <expression>"})," or ",(0,r.jsx)(n.code,{children:"/e <expression>"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/me <action>"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports predefined emote commands"}),"\n",(0,r.jsx)(n.li,{children:"Allows freeform emote text"}),"\n",(0,r.jsx)(n.li,{children:"Integrates with chat system"}),"\n",(0,r.jsx)(n.li,{children:"Respects chat length limits"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"bug-command",children:"bug Command"}),"\n",(0,r.jsx)(n.p,{children:"Opens bug reporting interface:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("bug", {\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {},\n    vote = false,\n    localfn = function(params, caller)\n        VisitURL("https://forums.kleientertainment.com/klei-bug-tracker/dont-starve-together/")\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),": ",(0,r.jsx)(n.code,{children:"/bug"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Opens official bug tracker"}),"\n",(0,r.jsx)(n.li,{children:"No parameters required"}),"\n",(0,r.jsx)(n.li,{children:"Available to all players"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"rescue-command",children:"rescue Command"}),"\n",(0,r.jsx)(n.p,{children:"Unsticks players from problematic positions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("rescue", {\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    usermenu = false,\n    servermenu = true,\n    menusort = 1,\n    params = {},\n    vote = false,\n    serverfn = function(params, caller)\n        if caller.PutBackOnGround ~= nil then\n            caller:PutBackOnGround()\n        end\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),": ",(0,r.jsx)(n.code,{children:"/rescue"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Teleports player to safe ground"}),"\n",(0,r.jsx)(n.li,{children:"Available in server menu"}),"\n",(0,r.jsx)(n.li,{children:"No voting required"}),"\n",(0,r.jsx)(n.li,{children:"Server-side execution"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"roll-command",children:"roll Command"}),"\n",(0,r.jsx)(n.p,{children:"Provides dice rolling functionality:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("roll", {\n    aliases = { "dice", "random", "diceroll" },\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    servermenu = true,\n    menusort = 2,\n    params = { "dice" },\n    paramsoptional = { true },\n    vote = false,\n    canstartfn = function(command, caller, targetid)\n        if GetTime() <= (caller._dicerollcooldown or 0) then\n            return false, "COOLDOWN"\n        end\n        return true\n    end,\n    localfn = function(params, caller)\n        -- Handle dice rolling logic\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/roll"})," - Rolls 1d100"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/roll <sides>"})," - Rolls 1d ",(0,r.jsx)(n.code,{children:"<sides>"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/roll <dice>d<sides>"})," - Rolls multiple dice"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports various dice formats"}),"\n",(0,r.jsx)(n.li,{children:"Cooldown system prevents spam"}),"\n",(0,r.jsx)(n.li,{children:"Public results visible to all players"}),"\n",(0,r.jsx)(n.li,{children:"Multiple aliases available"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"moderation-commands",children:"Moderation Commands"}),"\n",(0,r.jsx)(n.h4,{id:"kick-command",children:"kick Command"}),"\n",(0,r.jsx)(n.p,{children:"Removes players from the server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("kick", {\n    aliases = {"boot"},\n    permission = COMMAND_PERMISSION.MODERATOR,\n    confirm = true,\n    slash = true,\n    usermenu = true,\n    params = {"user"},\n    vote = true,\n    votetimeout = 30,\n    voteminstartage = 20,\n    voteminpasscount = 3,\n    votecountvisible = true,\n    voteallownotvoted = true,\n    localfn = function(params, caller)\n        if params.user ~= nil then\n            TheNet:Kick(UserToClientID(params.user) or params.user, \n                       caller == nil and TUNING.VOTE_KICK_TIME or nil)\n        end\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),": ",(0,r.jsx)(n.code,{children:"/kick <username>"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports voting mechanism"}),"\n",(0,r.jsx)(n.li,{children:"Requires confirmation"}),"\n",(0,r.jsx)(n.li,{children:"Available in user context menu"}),"\n",(0,r.jsx)(n.li,{children:"Temporary kick duration for vote kicks"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Voting Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Timeout: 30 seconds"}),"\n",(0,r.jsx)(n.li,{children:"Minimum start age: 20 seconds"}),"\n",(0,r.jsx)(n.li,{children:"Minimum pass count: 3 votes"}),"\n",(0,r.jsx)(n.li,{children:"Vote counts visible"}),"\n",(0,r.jsx)(n.li,{children:"Allows non-voters"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"administrative-commands",children:"Administrative Commands"}),"\n",(0,r.jsx)(n.h4,{id:"ban-command",children:"ban Command"}),"\n",(0,r.jsx)(n.p,{children:"Permanently or temporarily bans players:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("ban", {\n    permission = COMMAND_PERMISSION.ADMIN,\n    confirm = true,\n    slash = true,\n    usermenu = true,\n    params = {"user", "seconds"},\n    paramsoptional = {false, true},\n    vote = false,\n    localfn = function(params, caller)\n        if params.user ~= nil then\n            local clientid = UserToClientID(params.user) or params.user\n            if params.seconds ~= nil then\n                local seconds = tonumber(params.seconds)\n                TheNet:BanForTime(clientid, seconds)\n            else\n                TheNet:Ban(clientid)\n            end\n        end\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/ban <username>"})," - Permanent ban"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/ban <username> <seconds>"})," - Temporary ban"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports permanent and temporary bans"}),"\n",(0,r.jsx)(n.li,{children:"Requires admin permissions"}),"\n",(0,r.jsx)(n.li,{children:"Confirmation required"}),"\n",(0,r.jsx)(n.li,{children:"Console-specific description"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopvote-command",children:"stopvote Command"}),"\n",(0,r.jsx)(n.p,{children:"Cancels active votes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("stopvote", {\n    aliases = {"veto"},\n    permission = COMMAND_PERMISSION.ADMIN,\n    confirm = false,\n    slash = true,\n    params = {},\n    vote = false,\n    localfn = function(params, caller)\n        TheNet:StopVote()\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),": ",(0,r.jsx)(n.code,{children:"/stopvote"})," or ",(0,r.jsx)(n.code,{children:"/veto"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Immediately cancels any active vote"}),"\n",(0,r.jsx)(n.li,{children:"Admin-only command"}),"\n",(0,r.jsx)(n.li,{children:"No confirmation required"}),"\n",(0,r.jsx)(n.li,{children:"Multiple aliases"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"rollback-command",children:"rollback Command"}),"\n",(0,r.jsx)(n.p,{children:"Reverts server to previous save:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("rollback", {\n    permission = COMMAND_PERMISSION.ADMIN,\n    confirm = true,\n    slash = true,\n    servermenu = true,\n    params = {"numsaves"},\n    paramsoptional = {true},\n    vote = true,\n    votetimeout = 30,\n    voteminstartage = 20,\n    voteminpasscount = 3,\n    serverfn = function(params, caller)\n        TheWorld:DoTaskInTime(5, function(world)\n            if world.ismastersim then\n                TheNet:SendWorldRollbackRequestToServer(\n                    params.numsaves ~= nil and tonumber(params.numsaves) or nil\n                )\n            end\n        end)\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/rollback"})," - Rollback one save"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/rollback <number>"})," - Rollback specified number of saves"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports voting system"}),"\n",(0,r.jsx)(n.li,{children:"5-second delay before execution"}),"\n",(0,r.jsx)(n.li,{children:"Optional save count parameter"}),"\n",(0,r.jsx)(n.li,{children:"Announcement system integration"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"regenerate-command",children:"regenerate Command"}),"\n",(0,r.jsx)(n.p,{children:"Resets the world to a new seed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AddUserCommand("regenerate", {\n    permission = COMMAND_PERMISSION.ADMIN,\n    confirm = true,\n    slash = true,\n    servermenu = true,\n    params = {},\n    vote = true,\n    votetimeout = 30,\n    voteminstartage = 20,\n    voteminpasscount = 3,\n    serverfn = function(params, caller)\n        TheWorld:DoTaskInTime(5, function(world)\n            if world.ismastersim then\n                TheNet:SendWorldResetRequestToServer()\n            end\n        end)\n    end,\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage"}),": ",(0,r.jsx)(n.code,{children:"/regenerate"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Complete world reset"}),"\n",(0,r.jsx)(n.li,{children:"Supports voting system"}),"\n",(0,r.jsx)(n.li,{children:"5-second delay before execution"}),"\n",(0,r.jsx)(n.li,{children:"Admin confirmation required"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"voting-system-integration",children:"Voting System Integration"}),"\n",(0,r.jsx)(n.h3,{id:"voting-properties",children:"Voting Properties"}),"\n",(0,r.jsx)(n.p,{children:"Commands that support voting use these properties:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vote"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Enable voting for this command"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"votetimeout"})}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Vote duration in seconds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"voteminstartage"})}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Minimum player age to start vote"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"voteminpasscount"})}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Minimum votes needed to pass"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"votecountvisible"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Show vote counts during voting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"voteallownotvoted"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Allow non-voters in final tally"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"voteoptions"})}),(0,r.jsx)(n.td,{children:"Array"}),(0,r.jsx)(n.td,{children:"Custom voting options"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"votetitlefmt"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Vote title format string"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"votenamefmt"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Vote name format string"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"votepassedfmt"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Vote passed message format"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"voting-functions",children:"Voting Functions"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Function"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"votecanstartfn"})}),(0,r.jsx)(n.td,{children:"Determines if vote can be started"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"voteresultfn"})}),(0,r.jsx)(n.td,{children:"Processes vote results"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"common-voting-configuration",children:"Common Voting Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Most voting commands use these default settings:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timeout"}),": 30 seconds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimum Start Age"}),": 20 seconds in-game"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimum Pass Count"}),": 3 votes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vote Counts Visible"}),": Yes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Allow Non-Voters"}),": Yes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Result Function"}),": Yes/No majority vote"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,r.jsx)(n.h3,{id:"custom-command-creation",children:"Custom Command Creation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Example: Adding a custom command\nAddUserCommand("mycommand", {\n    prettyname = "My Custom Command",\n    desc = "Does something custom",\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    usermenu = false,\n    servermenu = false,\n    params = {"parameter"},\n    paramsoptional = {false},\n    vote = false,\n    localfn = function(params, caller)\n        print("Custom command executed by", caller, "with param:", params.parameter)\n    end,\n})\n'})}),"\n",(0,r.jsx)(n.h3,{id:"command-with-voting",children:"Command with Voting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Example: Command that supports voting\nAddUserCommand("customvote", {\n    prettyname = "Custom Vote Command",\n    desc = "A command that requires voting",\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {},\n    vote = true,\n    votetimeout = 45,\n    voteminstartage = 30,\n    voteminpasscount = 2,\n    votecanstartfn = VoteUtil.DefaultCanStartVote,\n    voteresultfn = VoteUtil.YesNoMajorityVote,\n    serverfn = function(params, caller)\n        print("Vote passed! Executing custom action...")\n        -- Custom logic here\n    end,\n})\n'})}),"\n",(0,r.jsx)(n.h3,{id:"command-with-access-control",children:"Command with Access Control"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Example: Command with custom access control\nAddUserCommand("restrictedcmd", {\n    prettyname = "Restricted Command",\n    desc = "Only available under certain conditions",\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {},\n    hasaccessfn = function(command, caller)\n        -- Custom access logic\n        return caller ~= nil and caller:HasTag("special_access")\n    end,\n    localfn = function(params, caller)\n        -- Command logic\n    end,\n})\n'})}),"\n",(0,r.jsx)(n.h3,{id:"command-with-cooldown",children:"Command with Cooldown"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Example: Command with cooldown system\nAddUserCommand("cooldowncmd", {\n    prettyname = "Cooldown Command",\n    desc = "Has a cooldown period",\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {},\n    canstartfn = function(command, caller, targetid)\n        local cooldown_key = "_mycooldown"\n        if GetTime() <= (caller[cooldown_key] or 0) then\n            return false, "COOLDOWN"\n        end\n        return true\n    end,\n    localfn = function(params, caller)\n        -- Set cooldown\n        caller._mycooldown = GetTime() + 60 -- 60 second cooldown\n        \n        -- Command logic here\n        print("Command executed with cooldown")\n    end,\n})\n'})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling-and-validation",children:"Error Handling and Validation"}),"\n",(0,r.jsx)(n.h3,{id:"parameter-validation",children:"Parameter Validation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Example: Command with parameter validation\nAddUserCommand("validatedcmd", {\n    prettyname = "Validated Command",\n    desc = "Validates parameters before execution",\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {"number", "text"},\n    paramsoptional = {false, true},\n    localfn = function(params, caller)\n        -- Validate number parameter\n        local num = tonumber(params.number)\n        if not num or num < 1 or num > 100 then\n            ChatHistory:SendCommandResponse({\n                "Error: Number must be between 1 and 100"\n            })\n            return\n        end\n        \n        -- Validate text parameter if provided\n        if params.text and params.text:len() > 50 then\n            ChatHistory:SendCommandResponse({\n                "Error: Text must be 50 characters or less"\n            })\n            return\n        end\n        \n        -- Execute command logic\n        print("Valid parameters:", num, params.text or "none")\n    end,\n})\n'})}),"\n",(0,r.jsx)(n.h3,{id:"safe-execution",children:"Safe Execution"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Example: Safe command execution with error handling\nAddUserCommand("safecmd", {\n    prettyname = "Safe Command",\n    desc = "Handles errors gracefully",\n    permission = COMMAND_PERMISSION.USER,\n    slash = true,\n    params = {},\n    localfn = function(params, caller)\n        local success, error_msg = pcall(function()\n            -- Potentially unsafe operation\n            if not caller or not caller:IsValid() then\n                error("Invalid caller")\n            end\n            \n            -- Command logic here\n            print("Safe operation completed")\n        end)\n        \n        if not success then\n            print("Command error:", error_msg)\n            ChatHistory:SendCommandResponse({\n                "Command failed: " .. tostring(error_msg)\n            })\n        end\n    end,\n})\n'})}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-game-systems",children:"Integration with Game Systems"}),"\n",(0,r.jsx)(n.h3,{id:"chat-system-integration",children:"Chat System Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Commands automatically integrate with chat\n-- Use ChatHistory:SendCommandResponse for feedback\nlocal function SendHelp(caller, messages)\n    if caller and caller.HUD then\n        ChatHistory:SendCommandResponse(messages)\n    end\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-integration",children:"Network Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Server-side commands use TheNet for network operations\nTheNet:Kick(clientid, duration)          -- Kick player\nTheNet:Ban(clientid)                     -- Ban player\nTheNet:BanForTime(clientid, seconds)     -- Temporary ban\nTheNet:StopVote()                        -- Stop active vote\nTheNet:DiceRoll(sides, count)            -- Dice roll\nTheNet:AnnounceVoteResult(hash, result, passed) -- Vote announcement\n"})}),"\n",(0,r.jsx)(n.h3,{id:"world-management-integration",children:"World Management Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- World operations with proper timing\nTheWorld:DoTaskInTime(5, function(world)\n    if world.ismastersim then\n        TheNet:SendWorldRollbackRequestToServer(save_count)\n        -- or\n        TheNet:SendWorldResetRequestToServer()\n    end\nend)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"permission-validation",children:"Permission Validation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always validate permissions before command execution"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"hasaccessfn"})," for custom access control"]}),"\n",(0,r.jsx)(n.li,{children:"Respect admin/moderator hierarchies"}),"\n",(0,r.jsx)(n.li,{children:"Validate user input thoroughly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"anti-spam-measures",children:"Anti-Spam Measures"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement cooldowns for frequently used commands"}),"\n",(0,r.jsx)(n.li,{children:"Use rate limiting for resource-intensive operations"}),"\n",(0,r.jsx)(n.li,{children:"Validate parameter ranges and formats"}),"\n",(0,r.jsx)(n.li,{children:"Prevent command flooding"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"network-security",children:"Network Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate client IDs before network operations"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate timeouts for network calls"}),"\n",(0,r.jsx)(n.li,{children:"Handle network errors gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Log administrative actions for audit trails"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"command-design",children:"Command Design"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear Naming"}),": Use descriptive command names and aliases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Helpful Documentation"}),": Provide clear descriptions and usage examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameter Validation"}),": Always validate user input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),": Provide meaningful error messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Appropriate Permissions"}),": Use correct permission levels"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"voting-implementation",children:"Voting Implementation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set reasonable timeouts for votes"}),"\n",(0,r.jsx)(n.li,{children:"Require minimum participation for validity"}),"\n",(0,r.jsx)(n.li,{children:"Provide clear vote descriptions"}),"\n",(0,r.jsx)(n.li,{children:"Handle vote cancellation gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Announce results appropriately"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use cooldowns to prevent spam"}),"\n",(0,r.jsx)(n.li,{children:"Validate parameters before expensive operations"}),"\n",(0,r.jsx)(n.li,{children:"Handle errors gracefully to prevent crashes"}),"\n",(0,r.jsx)(n.li,{children:"Clean up resources after command execution"}),"\n",(0,r.jsx)(n.li,{children:"Consider network latency in timing"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-systems",children:"Related Systems"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../usercommands/index.md",children:"User Commands"})," - Core command system framework"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../voteutil/index.md",children:"Vote Utilities"})," - Voting system implementation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../chat/index.md",children:"Chat System"})," - Chat integration and messaging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/networking-communication/networking/",children:"Network System"})," - Network operations and communication"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"status--stable",children:"Status: \ud83d\udfe2 Stable"}),"\n",(0,r.jsx)(n.p,{children:"The Built-in User Commands system is stable and provides essential functionality for DST servers. The API is mature with ongoing improvements focusing on voting system enhancements and permission system refinements."})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);