"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[80287],{28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var t=n(96540);const s={},i=t.createContext(s);function l(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:r},e.children)}},55733:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/crafting/crafting-sorting","title":"Crafting Sorting System","description":"Documentation of the Don\'t Starve Together crafting menu sorting system that organizes and prioritizes crafting recipes","source":"@site/docs/game-scripts/core-systems/game-mechanics/crafting/crafting_sorting.md","sourceDirName":"game-scripts/core-systems/game-mechanics/crafting","slug":"/game-scripts/core-systems/game-mechanics/crafting/crafting-sorting","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/crafting-sorting","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"crafting-sorting","title":"Crafting Sorting System","description":"Documentation of the Don\'t Starve Together crafting menu sorting system that organizes and prioritizes crafting recipes","sidebar_position":5,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var s=n(74848),i=n(28453);const l={id:"crafting-sorting",title:"Crafting Sorting System",description:"Documentation of the Don't Starve Together crafting menu sorting system that organizes and prioritizes crafting recipes",sidebar_position:5,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Crafting Sorting System \ud83d\udfe2",d={},c=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Core Architecture",id:"core-architecture",level:2},{value:"Sorting Classes Overview",id:"sorting-classes-overview",level:3},{value:"MetaClass Pattern",id:"metaclass-pattern",level:3},{value:"DefaultSort Class",id:"defaultsort-class",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Key Properties",id:"key-properties",level:3},{value:"Methods",id:"methods",level:3},{value:"BuildFavoriteTable()",id:"default-sort-build-favorite-table",level:4},{value:"OnFavoriteChanged(recipe_name, is_favorite_recipe)",id:"default-sort-on-favorite-changed",level:4},{value:"GetSorted()",id:"default-sort-get-sorted",level:4},{value:"GetUnsorted()",id:"default-sort-get-unsorted",level:4},{value:"Refresh()",id:"default-sort-refresh",level:4},{value:"OnSelected()",id:"default-sort-on-selected",level:4},{value:"Iterator Implementation",id:"iterator-implementation",level:3},{value:"CraftableSort Class",id:"craftablesort-class",level:2},{value:"Constructor",id:"constructor-1",level:3},{value:"Recipe Categories",id:"recipe-categories",level:3},{value:"Build State Mapping",id:"build-state-mapping",level:3},{value:"Methods",id:"methods-1",level:3},{value:"BuildCraftableTable()",id:"craftable-sort-build-craftable-table",level:4},{value:"FillSortedTable(recipes, validator, output)",id:"craftable-sort-fill-sorted-table",level:4},{value:"FillUnsortedTable(recipes, validator, output)",id:"craftable-sort-fill-unsorted-table",level:4},{value:"ClearSortTables()",id:"craftable-sort-clear-sort-tables",level:4},{value:"Refresh()",id:"craftable-sort-refresh",level:4},{value:"OnSelected()",id:"craftable-sort-on-selected",level:4},{value:"OnSelectFilter()",id:"craftable-sort-on-select-filter",level:4},{value:"OnFavoriteChanged(recipe_name, is_favorite_recipe)",id:"craftable-sort-on-favorite-changed",level:4},{value:"FavoriteSort Class",id:"favoritesort-class",level:2},{value:"Constructor",id:"constructor-2",level:3},{value:"Core Methods",id:"core-methods",level:3},{value:"BuildFavoriteTable()",id:"favorite-sort-build-favorite-table",level:4},{value:"OnFavoriteChanged(recipe_name, is_favorite_recipe)",id:"favorite-sort-on-favorite-changed",level:4},{value:"ClearSortTables()",id:"favorite-sort-clear-sort-tables",level:4},{value:"Refresh()",id:"favorite-sort-refresh",level:4},{value:"OnSelected()",id:"favorite-sort-on-selected",level:4},{value:"OnSelectFilter()",id:"favorite-sort-on-select-filter",level:4},{value:"FillSortedTable(recipes, validator, output)",id:"favorite-sort-fill-sorted-table",level:4},{value:"FillUnsortedTable(recipes, validator, output)",id:"favorite-sort-fill-unsorted-table",level:4},{value:"AlphaSort Class",id:"alphasort-class",level:2},{value:"Constructor",id:"constructor-3",level:3},{value:"Sorting Implementation",id:"sorting-implementation",level:3},{value:"Simple Iterator",id:"simple-iterator",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Default Sorting",id:"basic-default-sorting",level:3},{value:"Craftable Priority Sorting",id:"craftable-priority-sorting",level:3},{value:"Favorite-Priority Sorting",id:"favorite-priority-sorting",level:3},{value:"Alphabetical Sorting",id:"alphabetical-sorting",level:3},{value:"Combined Sorting Systems",id:"combined-sorting-systems",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Lazy Evaluation",id:"lazy-evaluation",level:3},{value:"Incremental Updates",id:"incremental-updates",level:3},{value:"Coroutine-Based Iteration",id:"coroutine-based-iteration",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Crafting Filters",id:"crafting-filters",level:3},{value:"Recipe System",id:"recipe-system",level:3},{value:"Crafting Profile",id:"crafting-profile",level:3},{value:"Module Exports",id:"module-exports",level:2},{value:"Related Modules",id:"related-modules",level:2},{value:"Technical Notes",id:"technical-notes",level:2}];function o(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"crafting-sorting-system-",children:"Crafting Sorting System \ud83d\udfe2"})}),"\n",(0,s.jsx)(r.h2,{id:"version-history",children:"Version History"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Build Version"}),(0,s.jsx)(r.th,{children:"Change Date"}),(0,s.jsx)(r.th,{children:"Change Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"676042"}),(0,s.jsx)(r.td,{children:"2025-06-21"}),(0,s.jsx)(r.td,{children:"stable"}),(0,s.jsx)(r.td,{children:"Current stable implementation with MetaClass-based sorting classes"})]})})]}),"\n",(0,s.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(r.p,{children:"The Crafting Sorting system in Don't Starve Together provides multiple methods for organizing and displaying crafting recipes in the crafting menu. This system enables players to view recipes sorted by craftability, favorites, alphabetical order, or custom filter-based arrangements."}),"\n",(0,s.jsx)(r.p,{children:"The crafting sorting system serves multiple purposes:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Recipe Organization"}),": Provides different ways to sort and display crafting recipes"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Player Preference"}),": Supports user customization through favorites and filters"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Crafting Efficiency"}),": Prioritizes craftable items for quick access"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Menu Navigation"}),": Improves user experience with logical recipe ordering"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"The system is implemented through four main sorting classes that can be combined to create a comprehensive crafting menu experience."}),"\n",(0,s.jsx)(r.h2,{id:"core-architecture",children:"Core Architecture"}),"\n",(0,s.jsx)(r.h3,{id:"sorting-classes-overview",children:"Sorting Classes Overview"}),"\n",(0,s.jsx)(r.p,{children:"The system provides four main sorting mechanisms:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Class"}),(0,s.jsx)(r.th,{children:"Purpose"}),(0,s.jsx)(r.th,{children:"Primary Use Case"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"DefaultSort"})}),(0,s.jsx)(r.td,{children:"Filter-based organization"}),(0,s.jsx)(r.td,{children:"Organizing recipes by category filters"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"CraftableSort"})}),(0,s.jsx)(r.td,{children:"Craftability prioritization"}),(0,s.jsx)(r.td,{children:"Showing craftable items first"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"FavoriteSort"})}),(0,s.jsx)(r.td,{children:"User preference ordering"}),(0,s.jsx)(r.td,{children:"Prioritizing user-favorited recipes"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"AlphaSort"})}),(0,s.jsx)(r.td,{children:"Alphabetical organization"}),(0,s.jsx)(r.td,{children:"Consistent alphabetical listing"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"metaclass-pattern",children:"MetaClass Pattern"}),"\n",(0,s.jsx)(r.p,{children:"All sorting classes use the MetaClass pattern for object-oriented functionality:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:'require("metaclass")\n\nlocal DefaultSort = MetaClass(function(self, widget)\n    -- Constructor implementation\nend)\n'})}),"\n",(0,s.jsx)(r.h2,{id:"defaultsort-class",children:"DefaultSort Class"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"DefaultSort"})," class provides filter-based recipe organization using the game's crafting filter system."]}),"\n",(0,s.jsx)(r.h3,{id:"constructor",children:"Constructor"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local defaultSort = DefaultSort(widget)\n"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"widget"}),": The crafting menu widget that owns this sorter"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"key-properties",children:"Key Properties"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Property"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"widget"})}),(0,s.jsx)(r.td,{children:"Object"}),(0,s.jsx)(r.td,{children:"Reference to the parent crafting widget"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"[FILTER_NAME]"})}),(0,s.jsx)(r.td,{children:"Table"}),(0,s.jsx)(r.td,{children:"Filter-specific sorted and unsorted recipe tables"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"unsorted"})}),(0,s.jsx)(r.td,{children:"Table"}),(0,s.jsx)(r.td,{children:"Global unsorted recipes lookup"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"fullupdate"})}),(0,s.jsx)(r.td,{children:"Boolean"}),(0,s.jsx)(r.td,{children:"Flag indicating a full refresh is needed"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(r.h4,{id:"default-sort-build-favorite-table",children:"BuildFavoriteTable()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nRebuilds the favorites filter table when favorites change."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function DefaultSort:BuildFavoriteTable()\n    self.FAVORITES.sorted = FunctionOrValue(shallowcopy(CRAFTING_FILTERS.FAVORITES.recipes)) or {}\n    self.FAVORITES.unsorted = {}\n    -- Populate unsorted favorites\n    self.fullupdate = true\nend\n"})}),"\n",(0,s.jsx)(r.h4,{id:"default-sort-on-favorite-changed",children:"OnFavoriteChanged(recipe_name, is_favorite_recipe)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nHandles favorite status changes for recipes."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipe_name"})," (string): String identifier of the recipe"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"is_favorite_recipe"})," (boolean): Boolean indicating new favorite status"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"default-sort-get-sorted",children:"GetSorted()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nReturns sorted recipe array for the current filter."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"(table): Array of sorted recipe names for current filter"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"default-sort-get-unsorted",children:"GetUnsorted()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nReturns unsorted recipe lookup table for the current filter."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"(table): Lookup table of unsorted recipe names for current filter"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"default-sort-refresh",children:"Refresh()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nRefreshes the sorting system when full update is needed and applies filters to widget."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"(boolean): True if full update was performed"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"default-sort-on-selected",children:"OnSelected()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nCalled when this sorter is selected as the active sorting method. Rebuilds favorite table."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function DefaultSort:GetSorted()\n    if self.widget.current_filter_name then\n        local filter = self[self.widget.current_filter_name]\n        return filter.sorted\n    else\n        return {}\n    end\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"iterator-implementation",children:"Iterator Implementation"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"DefaultSort"})," class implements custom iteration through the ",(0,s.jsx)(r.code,{children:"__ipairs"})," metamethod:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function DefaultSort:__ipairs()\n    local index = 0\n    return coroutine.wrap(function()\n        if self.widget.current_filter_name then\n            local filter = self[self.widget.current_filter_name]\n            -- Yield sorted recipes first\n            for i, v in ipairs(filter.sorted) do\n                index = index + 1\n                coroutine.yield(index, v)\n            end\n            -- Then yield unsorted recipes\n            for k in pairs(filter.unsorted) do\n                index = index + 1\n                coroutine.yield(index, k)\n            end\n        end\n    end)\nend\n"})}),"\n",(0,s.jsx)(r.h2,{id:"craftablesort-class",children:"CraftableSort Class"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"CraftableSort"})," class prioritizes recipes based on their craftability status, organizing them into buffered, craftable, and uncraftable categories."]}),"\n",(0,s.jsx)(r.h3,{id:"constructor-1",children:"Constructor"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local craftableSort = CraftableSort(widget, defaultsort)\n"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"widget"}),": The crafting menu widget"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"defaultsort"}),": Instance of DefaultSort for fallback sorting"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"recipe-categories",children:"Recipe Categories"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Category"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Priority"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"buffered"})}),(0,s.jsx)(r.td,{children:"Recipes with resources buffered for crafting"}),(0,s.jsx)(r.td,{children:"Highest"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"craftable"})}),(0,s.jsx)(r.td,{children:"Recipes that can be crafted with available resources"}),(0,s.jsx)(r.td,{children:"High"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"uncraftable"})}),(0,s.jsx)(r.td,{children:"Recipes missing required resources"}),(0,s.jsx)(r.td,{children:"Lowest"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"build-state-mapping",children:"Build State Mapping"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local build_state_sorting = {\n    buffered = self.buffered,\n    freecrafting = self.craftable,\n    has_ingredients = self.craftable,\n    prototype = self.craftable,\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"methods-1",children:"Methods"}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-build-craftable-table",children:"BuildCraftableTable()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nUpdates recipe categorization based on current crafting state."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"(boolean): True if any category was changed and requires UI refresh"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function CraftableSort:BuildCraftableTable()\n    for recipe_name, data in pairs(self.widget.crafting_hud.valid_recipes) do\n        local old_table = self.recipelookup[recipe_name]\n        local new_table = build_state_sorting[data.meta.build_state] or self.uncraftable\n        \n        if old_table ~= new_table then\n            -- Move recipe to new category\n            self.recipelookup[recipe_name] = new_table\n            old_table[recipe_name] = nil\n            new_table[recipe_name] = true\n        end\n    end\nend\n"})}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-fill-sorted-table",children:"FillSortedTable(recipes, validator, output)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nPopulates output table with sorted recipes that match the validator."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipes"})," (table): Array of recipe names in sorted order"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"validator"})," (table): Table used as set for validation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"output"})," (table): Array to populate with matching recipes"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-fill-unsorted-table",children:"FillUnsortedTable(recipes, validator, output)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nPopulates output table with unsorted recipes that match the validator."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipes"})," (table): Table of recipe names as keys"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"validator"})," (table): Table used as set for validation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"output"})," (table): Array to populate with matching recipes"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-clear-sort-tables",children:"ClearSortTables()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nClears cached sorted/unsorted tables when filter changes to force rebuild."]}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-refresh",children:"Refresh()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nRefreshes craftable table and delegates to default sorter. Applies filters if changes occurred."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"(boolean): True if UI update was triggered"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-on-selected",children:"OnSelected()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nCalled when this sorter is selected. Clears tables and rebuilds craftable categorization."]}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-on-select-filter",children:"OnSelectFilter()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nCalled when filter changes. Clears cached sort tables to force rebuild."]}),"\n",(0,s.jsx)(r.h4,{id:"craftable-sort-on-favorite-changed",children:"OnFavoriteChanged(recipe_name, is_favorite_recipe)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nDelegates favorite change handling to the default sorter."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipe_name"})," (string): Recipe identifier"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"is_favorite_recipe"})," (boolean): New favorite status"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"favoritesort-class",children:"FavoriteSort Class"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"FavoriteSort"})," class organizes recipes based on user favorites, displaying favorited recipes before non-favorited ones."]}),"\n",(0,s.jsx)(r.h3,{id:"constructor-2",children:"Constructor"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local favoriteSort = FavoriteSort(widget, defaultsort)\n"})}),"\n",(0,s.jsx)(r.h3,{id:"core-methods",children:"Core Methods"}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-build-favorite-table",children:"BuildFavoriteTable()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nSynchronizes favorite status with the crafting menu profile."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function FavoriteSort:BuildFavoriteTable()\n    for recipe_name in pairs(AllRecipes) do\n        if TheCraftingMenuProfile:IsFavorite(recipe_name) then\n            if not self.favorite[recipe_name] then\n                self.favorite[recipe_name] = true\n                self.nonfavorite[recipe_name] = nil\n                favorites_changed = true\n            end\n        end\n    end\nend\n"})}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-on-favorite-changed",children:"OnFavoriteChanged(recipe_name, is_favorite_recipe)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nHandles real-time favorite status changes with optimized table updates."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipe_name"})," (string): Recipe identifier to update"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"is_favorite_recipe"})," (boolean): New favorite status"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-clear-sort-tables",children:"ClearSortTables()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nClears cached sorted/unsorted tables when filter changes to force rebuild."]}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-refresh",children:"Refresh()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nRefreshes favorite sorting by clearing cached tables if full update is needed, then delegates to default sorter."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"(boolean): True if UI update was triggered"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-on-selected",children:"OnSelected()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nCalled when this sorter is selected. Clears tables and rebuilds favorite categorization."]}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-on-select-filter",children:"OnSelectFilter()"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nCalled when filter changes. Clears cached sort tables to force rebuild."]}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-fill-sorted-table",children:"FillSortedTable(recipes, validator, output)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nPopulates output table with sorted recipes that match the validator."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipes"})," (table): Array of recipe names in sorted order"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"validator"})," (table): Table used as set for validation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"output"})," (table): Array to populate with matching recipes"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"favorite-sort-fill-unsorted-table",children:"FillUnsortedTable(recipes, validator, output)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Status:"})," ",(0,s.jsx)(r.code,{children:"stable"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description:"}),"\nPopulates output table with unsorted recipes that match the validator."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recipes"})," (table): Table of recipe names as keys"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"validator"})," (table): Table used as set for validation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"output"})," (table): Array to populate with matching recipes"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function FavoriteSort:OnFavoriteChanged(recipe_name, is_favorite_recipe)\n    if is_favorite_recipe then\n        self.nonfavorite[recipe_name] = nil\n        self.favorite[recipe_name] = true\n        \n        -- Update cached sorted arrays\n        if not unsorted[recipe_name] then\n            if self.nonfavorite_sorted then\n                table.removearrayvalue(self.nonfavorite_sorted, recipe_name)\n            end\n            self.favorite_sorted = nil\n        end\n    end\nend\n"})}),"\n",(0,s.jsx)(r.h2,{id:"alphasort-class",children:"AlphaSort Class"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"AlphaSort"})," class provides alphabetical sorting of all recipes by their display names."]}),"\n",(0,s.jsx)(r.h3,{id:"constructor-3",children:"Constructor"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local alphaSort = AlphaSort(widget)\n"})}),"\n",(0,s.jsx)(r.h3,{id:"sorting-implementation",children:"Sorting Implementation"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:'local function sort_alpha(a, b)\n    local recipe_a = AllRecipes[a]\n    local recipe_b = AllRecipes[b]\n    local a_name = STRINGS.NAMES[string.upper(a)] or STRINGS.NAMES[string.upper(recipe_a.product)] or ""\n    local b_name = STRINGS.NAMES[string.upper(b)] or STRINGS.NAMES[string.upper(recipe_b.product)] or ""\n    return a_name < b_name\nend\n\n-- Pre-sort all recipes alphabetically\nself.alpha_sorted = {}\nfor k, v in pairs(AllRecipes) do\n    table.insert(self.alpha_sorted, k)\nend\ntable.sort(self.alpha_sorted, sort_alpha)\n'})}),"\n",(0,s.jsx)(r.h3,{id:"simple-iterator",children:"Simple Iterator"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function AlphaSort:__ipairs()\n    return ipairs(self.alpha_sorted)\nend\n"})}),"\n",(0,s.jsx)(r.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(r.h3,{id:"basic-default-sorting",children:"Basic Default Sorting"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:'local crafting_widget = GetCraftingWidget()\nlocal default_sorter = DefaultSort(crafting_widget)\n\n-- Set current filter\ncrafting_widget.current_filter_name = "WEAPONS"\n\n-- Iterate through sorted recipes\nfor index, recipe_name in default_sorter do\n    print(index, recipe_name)\nend\n'})}),"\n",(0,s.jsx)(r.h3,{id:"craftable-priority-sorting",children:"Craftable Priority Sorting"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local default_sorter = DefaultSort(crafting_widget)\nlocal craftable_sorter = CraftableSort(crafting_widget, default_sorter)\n\n-- Update craftability status\ncraftable_sorter:BuildCraftableTable()\n\n-- Iterate: buffered first, then craftable, then uncraftable\nfor index, recipe_name in craftable_sorter do\n    local recipe_data = crafting_widget.crafting_hud.valid_recipes[recipe_name]\n    print(recipe_name, recipe_data.meta.build_state)\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"favorite-priority-sorting",children:"Favorite-Priority Sorting"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:'local default_sorter = DefaultSort(crafting_widget)\nlocal favorite_sorter = FavoriteSort(crafting_widget, default_sorter)\n\n-- Handle favorite changes\nfavorite_sorter:OnFavoriteChanged("spear", true)\n\n-- Refresh display\nif favorite_sorter:Refresh() then\n    print("Sorting updated due to favorite changes")\nend\n'})}),"\n",(0,s.jsx)(r.h3,{id:"alphabetical-sorting",children:"Alphabetical Sorting"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"local alpha_sorter = AlphaSort(crafting_widget)\n\n-- Simple alphabetical iteration\nfor index, recipe_name in alpha_sorter do\n    local display_name = STRINGS.NAMES[string.upper(recipe_name)]\n    print(index, display_name, recipe_name)\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"combined-sorting-systems",children:"Combined Sorting Systems"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:'-- Create layered sorting system\nlocal default_sorter = DefaultSort(crafting_widget)\nlocal craftable_sorter = CraftableSort(crafting_widget, default_sorter)\nlocal favorite_sorter = FavoriteSort(crafting_widget, default_sorter)\n\n-- Handle events\nfavorite_sorter:OnFavoriteChanged("torch", true)\ncraftable_sorter:OnSelectFilter()\n\n-- Refresh all sorters\ncraftable_sorter:Refresh()\nfavorite_sorter:Refresh()\n'})}),"\n",(0,s.jsx)(r.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsx)(r.h3,{id:"lazy-evaluation",children:"Lazy Evaluation"}),"\n",(0,s.jsx)(r.p,{children:"The sorting system uses lazy evaluation for performance:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"-- Tables are only populated when needed\nif not self.buffered_sorted then\n    self.buffered_sorted = {}\n    self:FillSortedTable(sorted, self.buffered, self.buffered_sorted)\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"incremental-updates",children:"Incremental Updates"}),"\n",(0,s.jsx)(r.p,{children:"Changes are tracked incrementally to avoid full rebuilds:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"function CraftableSort:BuildCraftableTable()\n    local buffered_changed = false\n    local craftable_changed = false\n    \n    -- Only rebuild changed categories\n    if buffered_changed then\n        self.buffered_sorted = nil\n        self.buffered_unsorted = nil\n    end\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"coroutine-based-iteration",children:"Coroutine-Based Iteration"}),"\n",(0,s.jsx)(r.p,{children:"Large recipe lists use coroutines to prevent blocking:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"return coroutine.wrap(function()\n    for i, v in ipairs(self.favorite_sorted) do\n        index = index + 1\n        coroutine.yield(index, v)\n    end\nend)\n"})}),"\n",(0,s.jsx)(r.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,s.jsx)(r.h3,{id:"crafting-filters",children:"Crafting Filters"}),"\n",(0,s.jsxs)(r.p,{children:["The sorting system integrates with ",(0,s.jsx)(r.code,{children:"CRAFTING_FILTERS"}),":"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"-- Access filter definitions\nfor k, v in pairs(CRAFTING_FILTERS) do\n    self[k] = {\n        sorted = FunctionOrValue(shallowcopy(v.recipes)) or {},\n        unsorted = {},\n    }\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"recipe-system",children:"Recipe System"}),"\n",(0,s.jsxs)(r.p,{children:["Connects with the global ",(0,s.jsx)(r.code,{children:"AllRecipes"})," table:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"-- Process all available recipes\nfor k in pairs(AllRecipes) do\n    self.unsorted[k] = true\nend\n"})}),"\n",(0,s.jsx)(r.h3,{id:"crafting-profile",children:"Crafting Profile"}),"\n",(0,s.jsx)(r.p,{children:"Integrates with user preferences:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"-- Check favorite status\nif TheCraftingMenuProfile:IsFavorite(recipe_name) then\n    self.favorite[recipe_name] = true\nend\n"})}),"\n",(0,s.jsx)(r.h2,{id:"module-exports",children:"Module Exports"}),"\n",(0,s.jsx)(r.p,{children:"The module exports all four sorting classes:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"return {\n    DefaultSort = DefaultSort,\n    CraftableSort = CraftableSort,\n    FavoriteSort = FavoriteSort,\n    AlphaSort = AlphaSort,\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipes",children:"Recipes"})})," - Recipe definitions and crafting requirements"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"./cooking.md",children:"Cooking"})})," - Cooking recipe management system"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"./constants.md",children:"Constants"})})," - Game constants including crafting filters"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"./metaclass.md",children:"MetaClass"})})," - Object-oriented programming framework"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"technical-notes",children:"Technical Notes"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Core sorting functionality provides stable API across game updates"}),"\n",(0,s.jsx)(r.li,{children:"MetaClass pattern enables object-oriented design with inheritance"}),"\n",(0,s.jsx)(r.li,{children:"Performance optimizations through lazy evaluation and coroutine-based iteration"}),"\n",(0,s.jsx)(r.li,{children:"Incremental updates minimize unnecessary UI refreshes"}),"\n",(0,s.jsx)(r.li,{children:"Integration with crafting filters and user preference systems"}),"\n",(0,s.jsx)(r.li,{children:"Coroutine-based iterators prevent UI blocking on large recipe lists"}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"This documentation covers the Crafting Sorting System as of build 676042. The system provides comprehensive recipe organization and prioritization for the crafting menu interface."})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);