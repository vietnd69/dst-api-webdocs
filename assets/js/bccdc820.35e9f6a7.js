"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[63044],{3098:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"game-scripts/core-systems/user-interface/graphics/fx","title":"FX (Visual Effects)","description":"Visual effects system defining animation-based particle effects, sounds, and screen elements","source":"@site/docs/game-scripts/core-systems/user-interface/graphics/fx.md","sourceDirName":"game-scripts/core-systems/user-interface/graphics","slug":"/game-scripts/core-systems/user-interface/graphics/fx","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/fx","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"fx","title":"FX (Visual Effects)","description":"Visual effects system defining animation-based particle effects, sounds, and screen elements","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Falloff Definitions","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/falloffdefs"},"next":{"title":"Lighting","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/lighting"}}');var t=s(74848),r=s(28453);const d={id:"fx",title:"FX (Visual Effects)",description:"Visual effects system defining animation-based particle effects, sounds, and screen elements",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},c="FX (Visual Effects)",l={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"FX Definition Structure",id:"fx-definition-structure",level:2},{value:"Core Helper Functions",id:"core-helper-functions",level:2},{value:"FinalOffset Functions",id:"finaloffset-functions",level:3},{value:"UsePointFiltering(inst)",id:"use-point-filtering",level:3},{value:"GroundOrientation(inst)",id:"ground-orientation",level:3},{value:"Bloom(inst)",id:"bloom",level:3},{value:"Effect Categories",id:"effect-categories",level:2},{value:"Impact Effects",id:"impact-effects",level:3},{value:"Transformation Effects",id:"transformation-effects",level:3},{value:"Particle Effects",id:"particle-effects",level:3},{value:"Combat Effects",id:"combat-effects",level:3},{value:"Weather and Environmental Effects",id:"weather-and-environmental-effects",level:3},{value:"Character-Specific Effects",id:"character-specific-effects",level:3},{value:"Wendy/Abigail Effects",id:"wendyabigail-effects",level:4},{value:"Wanda Time Effects",id:"wanda-time-effects",level:4},{value:"Wolfgang Effects",id:"wolfgang-effects",level:4},{value:"Wortox Effects",id:"wortox-effects",level:4},{value:"Dynamic Effect Generation",id:"dynamic-effect-generation",level:2},{value:"Crater Steam Effects",id:"crater-steam-effects",level:3},{value:"Slingshot Ammo Hit Effects",id:"slingshot-ammo-hit-effects",level:3},{value:"Shadow Shield Effects",id:"shadow-shield-effects",level:3},{value:"Effect Properties Reference",id:"effect-properties-reference",level:2},{value:"Common Properties",id:"common-properties",level:3},{value:"Transform Properties",id:"transform-properties",level:3},{value:"Visual Properties",id:"visual-properties",level:3},{value:"Animation Properties",id:"animation-properties",level:3},{value:"Creating Custom Effects",id:"creating-custom-effects",level:2},{value:"Basic Custom Effect",id:"basic-custom-effect",level:3},{value:"Advanced Custom Effect with Physics",id:"advanced-custom-effect-with-physics",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"fx-visual-effects",children:"FX (Visual Effects)"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-06-21"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"FX"})," system provides a comprehensive collection of visual effects for Don't Starve Together. It defines animation-based particle effects, screen overlays, impact effects, transformation sequences, and environmental animations. Effects are defined as data tables with animation banks, builds, sounds, and custom initialization functions."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Spawn a basic effect\nlocal splash_fx = SpawnPrefab("splash")\n\n-- Spawn effect at specific location\nlocal x, y, z = inst.Transform:GetWorldPosition()\nlocal puff_fx = SpawnPrefab("sand_puff")\npuff_fx.Transform:SetPosition(x, y, z)\n\n-- Effects with custom properties\nlocal shock_fx = SpawnPrefab("shock_fx")\nshock_fx.Transform:SetRotation(45) -- Many effects support rotation\n'})}),"\n",(0,t.jsx)(n.h2,{id:"fx-definition-structure",children:"FX Definition Structure"}),"\n",(0,t.jsxs)(n.p,{children:["Each effect in the ",(0,t.jsx)(n.code,{children:"fx"})," table follows this structure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'{\n    name = "effect_name",           -- Prefab name for spawning\n    bank = "animation_bank",        -- Animation bank file\n    build = "animation_build",      -- Animation build file  \n    anim = "animation_name",        -- Animation to play\n    sound = "sound/path",           -- Optional sound effect\n    transform = Vector3(x, y, z),   -- Optional scale transform\n    tint = Vector3(r, g, b),        -- Optional color tint\n    tintalpha = 0.5,               -- Optional alpha transparency\n    fn = CustomFunction,            -- Optional initialization function\n    bloom = true,                   -- Optional bloom effect\n    autorotate = true,             -- Optional auto-rotation\n    -- Additional specialized properties...\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"core-helper-functions",children:"Core Helper Functions"}),"\n",(0,t.jsx)(n.h3,{id:"finaloffset-functions",children:"FinalOffset Functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local function FinalOffset1(inst)\n    inst.AnimState:SetFinalOffset(1)\nend\n\nlocal function FinalOffset2(inst) \n    inst.AnimState:SetFinalOffset(2)\nend\n\nlocal function FinalOffset3(inst)\n    inst.AnimState:SetFinalOffset(3)\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Set the rendering layer offset for proper depth sorting."]}),"\n",(0,t.jsx)(n.h3,{id:"use-point-filtering",children:"UsePointFiltering(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nEnables point filtering for pixelated/crisp rendering instead of smooth interpolation."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (Entity): The effect entity instance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"fn = UsePointFiltering\n"})}),"\n",(0,t.jsx)(n.h3,{id:"ground-orientation",children:"GroundOrientation(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nSets the effect to render flat on the ground surface with appropriate layer settings."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (Entity): The effect entity instance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"fn = GroundOrientation\n"})}),"\n",(0,t.jsx)(n.h3,{id:"bloom",children:"Bloom(inst)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nApplies bloom shader effect and sets final offset for glowing effects."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (Entity): The effect entity instance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"fn = Bloom\n"})}),"\n",(0,t.jsx)(n.h2,{id:"effect-categories",children:"Effect Categories"}),"\n",(0,t.jsx)(n.h3,{id:"impact-effects",children:"Impact Effects"}),"\n",(0,t.jsx)(n.p,{children:"Effects that trigger on collision or interaction:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Effect Name"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Sound"}),(0,t.jsx)(n.th,{children:"Usage"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"splash"})}),(0,t.jsx)(n.td,{children:"Water splash effect"}),(0,t.jsx)(n.td,{children:"Bird splash"}),(0,t.jsx)(n.td,{children:"Water entry"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"frogsplash"})}),(0,t.jsx)(n.td,{children:"Frog-specific splash"}),(0,t.jsx)(n.td,{children:"Frog splash"}),(0,t.jsx)(n.td,{children:"Frog jumping"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"shock_fx"})}),(0,t.jsx)(n.td,{children:"Electric shock effect"}),(0,t.jsx)(n.td,{children:"Shock sound"}),(0,t.jsx)(n.td,{children:"Lightning damage"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mining_fx"})}),(0,t.jsx)(n.td,{children:"Rock mining debris"}),(0,t.jsx)(n.td,{children:"None"}),(0,t.jsx)(n.td,{children:"Mining rocks"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"glass_fx"})}),(0,t.jsx)(n.td,{children:"Glass breaking effect"}),(0,t.jsx)(n.td,{children:"Sand to glass"}),(0,t.jsx)(n.td,{children:"Glass creation"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Spawn splash effect when entering water\nlocal splash = SpawnPrefab("splash")\nsplash.Transform:SetPosition(x, y, z)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"transformation-effects",children:"Transformation Effects"}),"\n",(0,t.jsx)(n.p,{children:"Effects for character or object transformations:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Effect Name"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Duration"}),(0,t.jsx)(n.th,{children:"Special Properties"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"werebeaver_transform_fx"})}),(0,t.jsx)(n.td,{children:"Woodie beaver form"}),(0,t.jsx)(n.td,{children:"~2 seconds"}),(0,t.jsx)(n.td,{children:"Death poof sound"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"weremoose_transform_fx"})}),(0,t.jsx)(n.td,{children:"Woodie moose form"}),(0,t.jsx)(n.td,{children:"~1.5 seconds"}),(0,t.jsx)(n.td,{children:"Multiple stages"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"beefalo_transform_fx"})}),(0,t.jsx)(n.td,{children:"Beefalo domestication"}),(0,t.jsx)(n.td,{children:"~1 second"}),(0,t.jsx)(n.td,{children:"Final offset"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"attune_in_fx"})}),(0,t.jsx)(n.td,{children:"Portal attunement in"}),(0,t.jsx)(n.td,{children:"~1 second"}),(0,t.jsx)(n.td,{children:"Ghost haunt sound"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"attune_out_fx"})}),(0,t.jsx)(n.td,{children:"Portal attunement out"}),(0,t.jsx)(n.td,{children:"~1 second"}),(0,t.jsx)(n.td,{children:"Ghost haunt sound"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Trigger transformation effect\nlocal transform_fx = SpawnPrefab("werebeaver_transform_fx")\ntransform_fx.Transform:SetPosition(player.Transform:GetWorldPosition())\n'})}),"\n",(0,t.jsx)(n.h3,{id:"particle-effects",children:"Particle Effects"}),"\n",(0,t.jsx)(n.p,{children:"Environmental and atmospheric effects:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Effect Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Properties"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sand_puff"})}),(0,t.jsx)(n.td,{children:"Dust cloud"}),(0,t.jsx)(n.td,{children:"Deathpoof sound"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"small_puff"})}),(0,t.jsx)(n.td,{children:"Small smoke"}),(0,t.jsx)(n.td,{children:"Smoke animation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"shadow_puff"})}),(0,t.jsx)(n.td,{children:"Dark particle"}),(0,t.jsx)(n.td,{children:"Black tint, 50% alpha"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dirt_puff"})}),(0,t.jsx)(n.td,{children:"Soil particles"}),(0,t.jsx)(n.td,{children:"Final offset 1"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"emote_fx"})}),(0,t.jsx)(n.td,{children:"Emote particles"}),(0,t.jsx)(n.td,{children:"Auto-rotate, final offset"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Create dust effect when digging\nlocal dust = SpawnPrefab("sand_puff")\ndust.Transform:SetPosition(x, y, z)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"combat-effects",children:"Combat Effects"}),"\n",(0,t.jsx)(n.p,{children:"Effects related to combat and damage:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Effect Name"}),(0,t.jsx)(n.th,{children:"Purpose"}),(0,t.jsx)(n.th,{children:"Visual Style"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"groundpound_fx"})}),(0,t.jsx)(n.td,{children:"Ground slam impact"}),(0,t.jsx)(n.td,{children:"Dust cloud with sound"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"firesplash_fx"})}),(0,t.jsx)(n.td,{children:"Fire damage burst"}),(0,t.jsx)(n.td,{children:"Bloom effect"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"shadowstrike_slash_fx"})}),(0,t.jsx)(n.td,{children:"Shadow weapon attack"}),(0,t.jsx)(n.td,{children:"Eight-faced scaling"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"minotaur_blood1/2/3"})}),(0,t.jsx)(n.td,{children:"Blood splatter"}),(0,t.jsx)(n.td,{children:"Semi-transparent red"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Add combat impact effect\nlocal impact = SpawnPrefab("groundpound_fx")\nimpact.Transform:SetPosition(target.Transform:GetWorldPosition())\n'})}),"\n",(0,t.jsx)(n.h3,{id:"weather-and-environmental-effects",children:"Weather and Environmental Effects"}),"\n",(0,t.jsx)(n.p,{children:"Effects for weather and environmental changes:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Effect Name"}),(0,t.jsx)(n.th,{children:"Environment"}),(0,t.jsx)(n.th,{children:"Properties"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"splash_snow_fx"})}),(0,t.jsx)(n.td,{children:"Winter/Snow"}),(0,t.jsx)(n.td,{children:"Fire suppresser impact sound"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"green_leaves_chop"})}),(0,t.jsx)(n.td,{children:"Forest/Trees"}),(0,t.jsx)(n.td,{children:"Leaf rustle sound"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"oceantree_leaf_fx_fall"})}),(0,t.jsx)(n.td,{children:"Ocean/Islands"}),(0,t.jsx)(n.td,{children:"Falling animation with physics"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"halloween_firepuff_1/2/3"})}),(0,t.jsx)(n.td,{children:"Seasonal"}),(0,t.jsx)(n.td,{children:"Bloom with fire sound"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"character-specific-effects",children:"Character-Specific Effects"}),"\n",(0,t.jsx)(n.p,{children:"Effects tied to specific characters:"}),"\n",(0,t.jsx)(n.h4,{id:"wendyabigail-effects",children:"Wendy/Abigail Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'"ghostlyelixir_slowregen_fx"     -- Abigail regeneration buff\n"ghostlyelixir_attack_fx"        -- Abigail attack buff  \n"ghostlyelixir_shield_fx"        -- Abigail shield buff\n"abigail_attack_shadow_fx"       -- Shadow attack ground effect\n'})}),"\n",(0,t.jsx)(n.h4,{id:"wanda-time-effects",children:"Wanda Time Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'"oldager_become_younger_front_fx" -- Age reversal effect\n"oldager_become_older_fx"         -- Aging effect\n"pocketwatch_heal_fx"             -- Pocket watch healing\n'})}),"\n",(0,t.jsx)(n.h4,{id:"wolfgang-effects",children:"Wolfgang Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'"wolfgang_mighty_fx"             -- Mighty form transformation\n'})}),"\n",(0,t.jsx)(n.h4,{id:"wortox-effects",children:"Wortox Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'"wortox_soul_spawn_fx"           -- Soul spawning\n"wortox_teleport_reviver_top"    -- Teleport revival effect\n'})}),"\n",(0,t.jsx)(n.h2,{id:"dynamic-effect-generation",children:"Dynamic Effect Generation"}),"\n",(0,t.jsx)(n.p,{children:"The system dynamically generates effects for certain categories:"}),"\n",(0,t.jsx)(n.h3,{id:"crater-steam-effects",children:"Crater Steam Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Generates crater_steam_fx1 through crater_steam_fx4\nfor cratersteamindex = 1, 4 do\n    table.insert(fx, {\n        name = "crater_steam_fx"..cratersteamindex,\n        bank = "crater_steam",\n        build = "crater_steam", \n        anim = "steam"..cratersteamindex,\n        fn = FinalOffset1,\n    })\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"slingshot-ammo-hit-effects",children:"Slingshot Ammo Hit Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Generates hit effects for different ammo types\nlocal SHOT_TYPES = {\n    "rock", "gold", "marble", "thulecite", "honey",\n    "freeze", "slow", "poop", "moonglass", "dreadstone",\n    "gunpowder", "lunarplanthusk", "purebrilliance"\n}\n\n-- Creates slingshotammo_hitfx_[type] for each type\n'})}),"\n",(0,t.jsx)(n.h3,{id:"shadow-shield-effects",children:"Shadow Shield Effects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Generates shadow_shield1 through shadow_shield6\n-- with mirrored versions for different orientations\n"})}),"\n",(0,t.jsx)(n.h2,{id:"effect-properties-reference",children:"Effect Properties Reference"}),"\n",(0,t.jsx)(n.h3,{id:"common-properties",children:"Common Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"name"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Prefab name for spawning"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bank"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Animation bank file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"build"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Animation build file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"anim"})}),(0,t.jsx)(n.td,{children:"string/function"}),(0,t.jsx)(n.td,{children:"Animation name or function returning name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sound"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Sound effect path"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sounddelay"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"Delay before playing sound"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"transform-properties",children:"Transform Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"transform"})}),(0,t.jsx)(n.td,{children:"Vector3"}),(0,t.jsx)(n.td,{children:"Scale transformation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"autorotate"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Enable automatic rotation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"eightfaced"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Eight-directional facing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fourfaced"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Four-directional facing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"twofaced"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Two-directional facing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sixfaced"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Six-directional facing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"nofaced"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"No directional facing"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"visual-properties",children:"Visual Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"tint"})}),(0,t.jsx)(n.td,{children:"Vector3"}),(0,t.jsx)(n.td,{children:"RGB color tint (0-1)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"tintalpha"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"Alpha transparency (0-1)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bloom"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Enable bloom shader effect"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fn"})}),(0,t.jsx)(n.td,{children:"function"}),(0,t.jsx)(n.td,{children:"Custom initialization function"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"animation-properties",children:"Animation Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"animqueue"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Queue multiple animations"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"update_while_paused"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Update during pause"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"creating-custom-effects",children:"Creating Custom Effects"}),"\n",(0,t.jsx)(n.h3,{id:"basic-custom-effect",children:"Basic Custom Effect"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local custom_fx = {\n    name = "my_custom_effect",\n    bank = "my_fx_bank",\n    build = "my_fx_build", \n    anim = "my_animation",\n    sound = "my_mod/effects/custom_sound",\n    fn = function(inst)\n        inst.AnimState:SetFinalOffset(1)\n        inst.AnimState:SetScale(1.5, 1.5, 1.5)\n    end\n}\n\ntable.insert(fx, custom_fx)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-custom-effect-with-physics",children:"Advanced Custom Effect with Physics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local advanced_fx = {\n    name = "falling_leaf_custom",\n    bank = "leaf_fx",\n    build = "leaf_fx",\n    anim = "fall",\n    fn = function(inst)\n        local scale = 1 + 0.3 * math.random()\n        inst.Transform:SetScale(scale, scale, scale)\n        \n        -- Add falling physics\n        inst.fall_speed = 2.0 + 1.5 * math.random()\n        inst:DoPeriodicTask(FRAMES, function(inst)\n            local x, y, z = inst.Transform:GetWorldPosition()\n            inst.Transform:SetPosition(x, y - inst.fall_speed * FRAMES, z)\n        end)\n    end\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Effects are temporary entities that clean up automatically"}),"\n",(0,t.jsx)(n.li,{children:"Use appropriate final offsets to avoid rendering conflicts"}),"\n",(0,t.jsx)(n.li,{children:"Large-scale effects should use efficient animation techniques"}),"\n",(0,t.jsx)(n.li,{children:"Sound effects should be optimized for multiple simultaneous plays"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./prefabs.md",children:"Prefabs"}),": Effect entities are created as prefabs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./entityscript.md",children:"EntityScript"}),": Base entity functionality for effects"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../components/animstate.md",children:"AnimState"}),": Animation rendering system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../components/soundemitter.md",children:"SoundEmitter"}),": Audio playback for effects"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../components/transform.md",children:"Transform"}),": Positioning and scaling effects"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var i=s(96540);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);