"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[9024],{7909:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api-vanilla/examples/project-tools","title":"Custom Tool Set Project","description":"This tutorial guides you through creating a complete mod that adds a set of custom tools to Don\'t Starve Together. We\'ll create three new tools: a Golden Axe, a Gem Pickaxe, and a Magical Shovel, each with unique properties and abilities.","source":"@site/docs/api-vanilla/examples/project-tools.md","sourceDirName":"api-vanilla/examples","slug":"/api-vanilla/examples/project-tools","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/project-tools","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"id":"project-tools","title":"Custom Tool Set Project","sidebar_position":14},"sidebar":"docs","previous":{"title":"Case Study - Global Position CompleteSync Mod","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/case-global-position"},"next":{"title":"New Biome Project","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/project-biome"}}');var s=t(4848),a=t(8453);const o={id:"project-tools",title:"Custom Tool Set Project",sidebar_position:14},l="Custom Tool Set Project",r={},d=[{value:"Project Overview",id:"project-overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Step 1: Setting Up the Mod",id:"step-1-setting-up-the-mod",level:2},{value:"modinfo.lua",id:"modinfolua",level:3},{value:"modmain.lua",id:"modmainlua",level:3},{value:"Step 2: Creating the Golden Axe",id:"step-2-creating-the-golden-axe",level:2},{value:"scripts/prefabs/goldenaxe.lua",id:"scriptsprefabsgoldenaxelua",level:3},{value:"Step 3: Creating the Gem Pickaxe",id:"step-3-creating-the-gem-pickaxe",level:2},{value:"scripts/prefabs/gempickaxe.lua",id:"scriptsprefabsgempickaxelua",level:3},{value:"Step 4: Creating the Magical Shovel",id:"step-4-creating-the-magical-shovel",level:2},{value:"scripts/prefabs/magicalshovel.lua",id:"scriptsprefabsmagicalshovellua",level:3},{value:"Step 5: Creating the Art Assets",id:"step-5-creating-the-art-assets",level:2},{value:"Step 6: Testing and Debugging",id:"step-6-testing-and-debugging",level:2},{value:"Common Issues and Solutions:",id:"common-issues-and-solutions",level:3},{value:"Step 7: Publishing Your Mod",id:"step-7-publishing-your-mod",level:2},{value:"Extending the Mod",id:"extending-the-mod",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"custom-tool-set-project",children:"Custom Tool Set Project"})}),"\n",(0,s.jsx)(e.p,{children:"This tutorial guides you through creating a complete mod that adds a set of custom tools to Don't Starve Together. We'll create three new tools: a Golden Axe, a Gem Pickaxe, and a Magical Shovel, each with unique properties and abilities."}),"\n",(0,s.jsx)(e.h2,{id:"project-overview",children:"Project Overview"}),"\n",(0,s.jsx)(e.p,{children:"By the end of this tutorial, you'll have created:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"A Golden Axe that chops trees faster and has higher durability"}),"\n",(0,s.jsx)(e.li,{children:"A Gem Pickaxe that mines resources with a chance for bonus drops"}),"\n",(0,s.jsx)(e.li,{children:"A Magical Shovel that has a chance to spawn rare items when digging"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Basic understanding of Lua programming"}),"\n",(0,s.jsx)(e.li,{children:"Familiarity with Don't Starve Together modding setup"}),"\n",(0,s.jsx)(e.li,{children:"Knowledge of prefabs and components"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"MyToolsMod/\n\u251c\u2500\u2500 modinfo.lua\n\u251c\u2500\u2500 modmain.lua\n\u251c\u2500\u2500 scripts/\n\u2502   \u2514\u2500\u2500 prefabs/\n\u2502       \u251c\u2500\u2500 goldenaxe.lua\n\u2502       \u251c\u2500\u2500 gempickaxe.lua\n\u2502       \u2514\u2500\u2500 magicalshovel.lua\n\u2514\u2500\u2500 images/\n    \u2514\u2500\u2500 inventoryimages/\n        \u251c\u2500\u2500 goldenaxe.tex\n        \u251c\u2500\u2500 gempickaxe.tex\n        \u2514\u2500\u2500 magicalshovel.tex\n"})}),"\n",(0,s.jsx)(e.h2,{id:"step-1-setting-up-the-mod",children:"Step 1: Setting Up the Mod"}),"\n",(0,s.jsx)(e.p,{children:"First, let's create the basic mod structure and files:"}),"\n",(0,s.jsx)(e.h3,{id:"modinfolua",children:"modinfo.lua"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'name = "Custom Tool Set"\ndescription = "Adds three new powerful tools to the game: Golden Axe, Gem Pickaxe, and Magical Shovel."\nauthor = "Your Name"\nversion = "1.0.0"\n\n-- Compatible with Don\'t Starve Together\ndst_compatible = true\ndont_starve_compatible = false\nreign_of_giants_compatible = false\n\n-- Tags to help users find the mod\nall_clients_require_mod = true\nclient_only_mod = false\n\n-- Icon and priority\nicon_atlas = "modicon.xml"\nicon = "modicon.tex"\n\n-- Mod configuration options\nconfiguration_options = {\n    {\n        name = "TOOL_DURABILITY",\n        label = "Tool Durability",\n        options = {\n            {description = "Low", data = 0.75},\n            {description = "Normal", data = 1.0},\n            {description = "High", data = 1.5},\n            {description = "Very High", data = 2.0}\n        },\n        default = 1.0\n    },\n    {\n        name = "SPECIAL_EFFECTS",\n        label = "Special Effects",\n        options = {\n            {description = "Disabled", data = false},\n            {description = "Enabled", data = true}\n        },\n        default = true\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"modmainlua",children:"modmain.lua"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'-- Assets to preload\nAssets = {\n    Asset("IMAGE", "images/inventoryimages/goldenaxe.tex"),\n    Asset("ATLAS", "images/inventoryimages/goldenaxe.xml"),\n    Asset("IMAGE", "images/inventoryimages/gempickaxe.tex"),\n    Asset("ATLAS", "images/inventoryimages/gempickaxe.xml"),\n    Asset("IMAGE", "images/inventoryimages/magicalshovel.tex"),\n    Asset("ATLAS", "images/inventoryimages/magicalshovel.xml"),\n}\n\n-- Prefabs to register\nPrefabFiles = {\n    "goldenaxe",\n    "gempickaxe",\n    "magicalshovel",\n}\n\n-- Configuration\nlocal TOOL_DURABILITY = GetModConfigData("TOOL_DURABILITY")\nlocal SPECIAL_EFFECTS = GetModConfigData("SPECIAL_EFFECTS")\n\n-- Add recipes\nlocal goldenaxe = Recipe("goldenaxe", \n    {Ingredient("axe", 1), Ingredient("goldnugget", 3)}, \n    RECIPETABS.TOOLS, \n    TECH.SCIENCE_ONE)\ngoldenaxe.atlas = "images/inventoryimages/goldenaxe.xml"\n\nlocal gempickaxe = Recipe("gempickaxe", \n    {Ingredient("pickaxe", 1), Ingredient("bluegem", 1), Ingredient("redgem", 1)}, \n    RECIPETABS.TOOLS, \n    TECH.SCIENCE_TWO)\ngempickaxe.atlas = "images/inventoryimages/gempickaxe.xml"\n\nlocal magicalshovel = Recipe("magicalshovel", \n    {Ingredient("shovel", 1), Ingredient("purplegem", 1), Ingredient("nightmarefuel", 5)}, \n    RECIPETABS.TOOLS, \n    TECH.MAGIC_THREE)\nmagicalshovel.atlas = "images/inventoryimages/magicalshovel.xml"\n\n-- Pass config values to prefabs\nGLOBAL.TUNING.CUSTOM_TOOLS = {\n    DURABILITY_MULT = TOOL_DURABILITY,\n    SPECIAL_EFFECTS = SPECIAL_EFFECTS\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"step-2-creating-the-golden-axe",children:"Step 2: Creating the Golden Axe"}),"\n",(0,s.jsx)(e.p,{children:"Now let's create our first tool, the Golden Axe:"}),"\n",(0,s.jsx)(e.h3,{id:"scriptsprefabsgoldenaxelua",children:"scripts/prefabs/goldenaxe.lua"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/goldenaxe.zip"),\n    Asset("ANIM", "anim/swap_goldenaxe.zip"),\n    Asset("ATLAS", "images/inventoryimages/goldenaxe.xml"),\n    Asset("IMAGE", "images/inventoryimages/goldenaxe.tex"),\n}\n\nlocal function OnFinished(inst)\n    inst:Remove()\nend\n\nlocal function OnEquip(inst, owner)\n    owner.AnimState:OverrideSymbol("swap_object", "swap_goldenaxe", "swap_goldenaxe")\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\nend\n\nlocal function OnUnequip(inst, owner)\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\nend\n\nlocal function fn()\n    local inst = CreateEntity()\n\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n\n    MakeInventoryPhysics(inst)\n\n    inst.AnimState:SetBank("goldenaxe")\n    inst.AnimState:SetBuild("goldenaxe")\n    inst.AnimState:PlayAnimation("idle")\n\n    -- Make it a tool and weapon\n    inst:AddTag("sharp")\n    inst:AddTag("tool")\n    inst:AddTag("weapon")\n\n    inst.entity:SetPristine()\n\n    if not TheWorld.ismastersim then\n        return inst\n    end\n\n    -- Durability multiplier from config\n    local durability_mult = TUNING.CUSTOM_TOOLS.DURABILITY_MULT or 1.0\n\n    -- Add components\n    inst:AddComponent("weapon")\n    inst.components.weapon:SetDamage(TUNING.AXE_DAMAGE * 1.2)\n\n    inst:AddComponent("tool")\n    inst.components.tool:SetAction(ACTIONS.CHOP, 1.5) -- 50% faster chopping\n\n    inst:AddComponent("finiteuses")\n    inst.components.finiteuses:SetMaxUses(TUNING.AXE_USES * durability_mult * 1.5)\n    inst.components.finiteuses:SetUses(TUNING.AXE_USES * durability_mult * 1.5)\n    inst.components.finiteuses:SetOnFinished(OnFinished)\n    inst.components.finiteuses:SetConsumption(ACTIONS.CHOP, 1)\n\n    inst:AddComponent("inspectable")\n    inst:AddComponent("inventoryitem")\n    inst.components.inventoryitem.atlasname = "images/inventoryimages/goldenaxe.xml"\n\n    inst:AddComponent("equippable")\n    inst.components.equippable:SetOnEquip(OnEquip)\n    inst.components.equippable:SetOnUnequip(OnUnequip)\n\n    -- Special effect: chance to get extra logs\n    if TUNING.CUSTOM_TOOLS.SPECIAL_EFFECTS then\n        inst:ListenForEvent("working", function(inst, data)\n            if data.target and data.target:HasTag("tree") and math.random() < 0.2 then\n                -- 20% chance to spawn an extra log\n                local log = SpawnPrefab("log")\n                if log then\n                    log.Transform:SetPosition(data.target.Transform:GetWorldPosition())\n                    log.Physics:Teleport(log.Transform:GetWorldPosition())\n                end\n            end\n        end)\n    end\n\n    MakeHauntableLaunch(inst)\n\n    return inst\nend\n\nreturn Prefab("goldenaxe", fn, assets)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"step-3-creating-the-gem-pickaxe",children:"Step 3: Creating the Gem Pickaxe"}),"\n",(0,s.jsx)(e.p,{children:"Let's create our second tool, the Gem Pickaxe:"}),"\n",(0,s.jsx)(e.h3,{id:"scriptsprefabsgempickaxelua",children:"scripts/prefabs/gempickaxe.lua"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/gempickaxe.zip"),\n    Asset("ANIM", "anim/swap_gempickaxe.zip"),\n    Asset("ATLAS", "images/inventoryimages/gempickaxe.xml"),\n    Asset("IMAGE", "images/inventoryimages/gempickaxe.tex"),\n}\n\nlocal function OnFinished(inst)\n    inst:Remove()\nend\n\nlocal function OnEquip(inst, owner)\n    owner.AnimState:OverrideSymbol("swap_object", "swap_gempickaxe", "swap_gempickaxe")\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\nend\n\nlocal function OnUnequip(inst, owner)\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\nend\n\nlocal function fn()\n    local inst = CreateEntity()\n\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n\n    MakeInventoryPhysics(inst)\n\n    inst.AnimState:SetBank("gempickaxe")\n    inst.AnimState:SetBuild("gempickaxe")\n    inst.AnimState:PlayAnimation("idle")\n\n    -- Make it a tool and weapon\n    inst:AddTag("sharp")\n    inst:AddTag("tool")\n    inst:AddTag("weapon")\n\n    inst.entity:SetPristine()\n\n    if not TheWorld.ismastersim then\n        return inst\n    end\n\n    -- Durability multiplier from config\n    local durability_mult = TUNING.CUSTOM_TOOLS.DURABILITY_MULT or 1.0\n\n    -- Add components\n    inst:AddComponent("weapon")\n    inst.components.weapon:SetDamage(TUNING.PICKAXE_DAMAGE * 1.2)\n\n    inst:AddComponent("tool")\n    inst.components.tool:SetAction(ACTIONS.MINE, 1.3) -- 30% faster mining\n\n    inst:AddComponent("finiteuses")\n    inst.components.finiteuses:SetMaxUses(TUNING.PICKAXE_USES * durability_mult * 1.5)\n    inst.components.finiteuses:SetUses(TUNING.PICKAXE_USES * durability_mult * 1.5)\n    inst.components.finiteuses:SetOnFinished(OnFinished)\n    inst.components.finiteuses:SetConsumption(ACTIONS.MINE, 1)\n\n    inst:AddComponent("inspectable")\n    inst:AddComponent("inventoryitem")\n    inst.components.inventoryitem.atlasname = "images/inventoryimages/gempickaxe.xml"\n\n    inst:AddComponent("equippable")\n    inst.components.equippable:SetOnEquip(OnEquip)\n    inst.components.equippable:SetOnUnequip(OnUnequip)\n\n    -- Special effect: chance to get bonus gems when mining\n    if TUNING.CUSTOM_TOOLS.SPECIAL_EFFECTS then\n        inst:ListenForEvent("working", function(inst, data)\n            if data.target and data.target:HasTag("boulder") and math.random() < 0.15 then\n                -- 15% chance to spawn a random gem\n                local gems = {"redgem", "bluegem", "purplegem", "yellowgem", "orangegem", "greengem"}\n                local gem = SpawnPrefab(gems[math.random(#gems)])\n                if gem then\n                    gem.Transform:SetPosition(data.target.Transform:GetWorldPosition())\n                    gem.Physics:Teleport(gem.Transform:GetWorldPosition())\n                end\n            end\n        end)\n    end\n\n    MakeHauntableLaunch(inst)\n\n    return inst\nend\n\nreturn Prefab("gempickaxe", fn, assets)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"step-4-creating-the-magical-shovel",children:"Step 4: Creating the Magical Shovel"}),"\n",(0,s.jsx)(e.p,{children:"Finally, let's create our third tool, the Magical Shovel:"}),"\n",(0,s.jsx)(e.h3,{id:"scriptsprefabsmagicalshovellua",children:"scripts/prefabs/magicalshovel.lua"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'local assets = {\n    Asset("ANIM", "anim/magicalshovel.zip"),\n    Asset("ANIM", "anim/swap_magicalshovel.zip"),\n    Asset("ATLAS", "images/inventoryimages/magicalshovel.xml"),\n    Asset("IMAGE", "images/inventoryimages/magicalshovel.tex"),\n}\n\nlocal function OnFinished(inst)\n    inst:Remove()\nend\n\nlocal function OnEquip(inst, owner)\n    owner.AnimState:OverrideSymbol("swap_object", "swap_magicalshovel", "swap_magicalshovel")\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\nend\n\nlocal function OnUnequip(inst, owner)\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\nend\n\nlocal function fn()\n    local inst = CreateEntity()\n\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n\n    MakeInventoryPhysics(inst)\n\n    inst.AnimState:SetBank("magicalshovel")\n    inst.AnimState:SetBuild("magicalshovel")\n    inst.AnimState:PlayAnimation("idle")\n\n    -- Make it a tool and weapon\n    inst:AddTag("sharp")\n    inst:AddTag("tool")\n    inst:AddTag("weapon")\n\n    inst.entity:SetPristine()\n\n    if not TheWorld.ismastersim then\n        return inst\n    end\n\n    -- Durability multiplier from config\n    local durability_mult = TUNING.CUSTOM_TOOLS.DURABILITY_MULT or 1.0\n\n    -- Add components\n    inst:AddComponent("weapon")\n    inst.components.weapon:SetDamage(TUNING.SHOVEL_DAMAGE * 1.2)\n\n    inst:AddComponent("tool")\n    inst.components.tool:SetAction(ACTIONS.DIG, 1.4) -- 40% faster digging\n\n    inst:AddComponent("finiteuses")\n    inst.components.finiteuses:SetMaxUses(TUNING.SHOVEL_USES * durability_mult * 1.5)\n    inst.components.finiteuses:SetUses(TUNING.SHOVEL_USES * durability_mult * 1.5)\n    inst.components.finiteuses:SetOnFinished(OnFinished)\n    inst.components.finiteuses:SetConsumption(ACTIONS.DIG, 1)\n\n    inst:AddComponent("inspectable")\n    inst:AddComponent("inventoryitem")\n    inst.components.inventoryitem.atlasname = "images/inventoryimages/magicalshovel.xml"\n\n    inst:AddComponent("equippable")\n    inst.components.equippable:SetOnEquip(OnEquip)\n    inst.components.equippable:SetOnUnequip(OnUnequip)\n\n    -- Special effect: chance to find rare items when digging\n    if TUNING.CUSTOM_TOOLS.SPECIAL_EFFECTS then\n        inst:ListenForEvent("working", function(inst, data)\n            if data.target and data.action == ACTIONS.DIG and math.random() < 0.1 then\n                -- 10% chance to spawn a rare item\n                local rare_items = {\n                    "trinket_1", "trinket_2", "trinket_3", \n                    "goldnugget", "redgem", "bluegem", \n                    "gears", "thulecite_pieces"\n                }\n                local item = SpawnPrefab(rare_items[math.random(#rare_items)])\n                if item then\n                    item.Transform:SetPosition(data.target.Transform:GetWorldPosition())\n                    item.Physics:Teleport(item.Transform:GetWorldPosition())\n                    \n                    -- Add a visual effect\n                    local fx = SpawnPrefab("lavaarena_player_revive_from_corpse_fx")\n                    if fx then\n                        fx.Transform:SetPosition(item.Transform:GetWorldPosition())\n                    end\n                end\n            end\n        end)\n    end\n\n    MakeHauntableLaunch(inst)\n\n    return inst\nend\n\nreturn Prefab("magicalshovel", fn, assets)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"step-5-creating-the-art-assets",children:"Step 5: Creating the Art Assets"}),"\n",(0,s.jsx)(e.p,{children:"For this mod to work properly, you'll need to create the following art assets:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Inventory Images"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"images/inventoryimages/goldenaxe.tex"})," and ",(0,s.jsx)(e.code,{children:".xml"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"images/inventoryimages/gempickaxe.tex"})," and ",(0,s.jsx)(e.code,{children:".xml"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"images/inventoryimages/magicalshovel.tex"})," and ",(0,s.jsx)(e.code,{children:".xml"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Animation Files"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"anim/goldenaxe.zip"})," and ",(0,s.jsx)(e.code,{children:"anim/swap_goldenaxe.zip"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"anim/gempickaxe.zip"})," and ",(0,s.jsx)(e.code,{children:"anim/swap_gempickaxe.zip"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"anim/magicalshovel.zip"})," and ",(0,s.jsx)(e.code,{children:"anim/swap_magicalshovel.zip"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"You can create these using Spriter and then export them to the appropriate formats. Alternatively, you can modify existing game assets as a starting point."}),"\n",(0,s.jsx)(e.h2,{id:"step-6-testing-and-debugging",children:"Step 6: Testing and Debugging"}),"\n",(0,s.jsx)(e.p,{children:"To test your mod:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Place your mod folder in the Don't Starve Together mods directory"}),"\n",(0,s.jsx)(e.li,{children:"Enable the mod in the game's mod menu"}),"\n",(0,s.jsx)(e.li,{children:"Start a new game and check if you can craft the tools"}),"\n",(0,s.jsx)(e.li,{children:"Test each tool's functionality and special effects"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"common-issues-and-solutions",children:"Common Issues and Solutions:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Missing Assets"}),": Ensure all art assets are properly named and placed in the correct directories"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Recipe Not Appearing"}),": Check that your recipes are correctly registered in modmain.lua"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Special Effects Not Working"}),": Verify that the event listeners are properly set up"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Animation Issues"}),": Check that your animation files are correctly formatted and referenced"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"step-7-publishing-your-mod",children:"Step 7: Publishing Your Mod"}),"\n",(0,s.jsx)(e.p,{children:"Once your mod is working correctly, you can publish it to the Steam Workshop:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["Create a ",(0,s.jsx)(e.code,{children:"modicon.tex"})," and ",(0,s.jsx)(e.code,{children:"modicon.xml"})," (512x512 pixels) for your mod"]}),"\n",(0,s.jsx)(e.li,{children:"Update your modinfo.lua with a detailed description"}),"\n",(0,s.jsx)(e.li,{children:"Use the in-game mod uploader or the Don't Starve Mod Tools on Steam"}),"\n",(0,s.jsx)(e.li,{children:"Provide clear instructions and screenshots in your Workshop description"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"extending-the-mod",children:"Extending the Mod"}),"\n",(0,s.jsx)(e.p,{children:"Here are some ideas for extending this mod:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Add more tools with different special effects"}),"\n",(0,s.jsx)(e.li,{children:"Create tool upgrades that require the custom tools as ingredients"}),"\n",(0,s.jsx)(e.li,{children:"Add special animations or particle effects when using the tools"}),"\n",(0,s.jsx)(e.li,{children:"Create a custom tech tree for more advanced tools"}),"\n",(0,s.jsx)(e.li,{children:"Add compatibility with other popular mods"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(e.p,{children:"Congratulations! You've created a complete mod that adds three unique tools to Don't Starve Together. This project demonstrates many important modding concepts:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Creating custom prefabs"}),"\n",(0,s.jsx)(e.li,{children:"Adding recipes"}),"\n",(0,s.jsx)(e.li,{children:"Working with components"}),"\n",(0,s.jsx)(e.li,{children:"Implementing special effects"}),"\n",(0,s.jsx)(e.li,{children:"Using mod configuration options"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Use what you've learned here as a foundation for creating more complex mods in the future!"})]})}function m(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>l});var i=t(6540);const s={},a=i.createContext(s);function o(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);