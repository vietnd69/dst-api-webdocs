"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[5397],{236:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api-vanilla/components/growable","title":"Growable","description":"The Growable component allows entities to grow and change over time through different stages, such as plants maturing or trees growing.","source":"@site/docs/api-vanilla/components/growable.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/growable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/growable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"id":"growable","title":"Growable","sidebar_position":12,"last_updated":"2023-07-06T00:00:00.000Z","version":619045},"sidebar":"docs","previous":{"title":"Workable Component","permalink":"/dst-api-webdocs/docs/api-vanilla/components/workable"},"next":{"title":"Perishable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/perishable"}}');var s=t(4848),r=t(8453);const i={id:"growable",title:"Growable",sidebar_position:12,last_updated:new Date("2023-07-06T00:00:00.000Z"),version:619045},o="Growable Component",l={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Growth Stages",id:"growth-stages",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"See also",id:"see-also",level:2},{value:"Example: Creating a Growable Plant",id:"example-creating-a-growable-plant",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"growable-component",children:"Growable Component"})}),"\n",(0,s.jsx)(n.p,{children:"The Growable component allows entities to grow and change over time through different stages, such as plants maturing or trees growing."}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add a growable component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("growable")\n\n-- Configure the growable component\nlocal growable = entity.components.growable\ngrowable:SetStages({\n    {name="small", time=TUNING.DAY_TIME_DEFAULT * 2, fn=SetSmall},\n    {name="medium", time=TUNING.DAY_TIME_DEFAULT * 3, fn=SetMedium},\n    {name="large", time=TUNING.DAY_TIME_DEFAULT * 4, fn=SetLarge}\n})\ngrowable:SetStage(1)\ngrowable:StartGrowing()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"stages"})}),(0,s.jsx)(n.td,{children:"Table"}),(0,s.jsx)(n.td,{children:"Array of stages with names, duration, and callbacks"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"stage"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Current growth stage index"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"targettime"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Time when the next stage will be reached"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pausedfn"})}),(0,s.jsx)(n.td,{children:"Function"}),(0,s.jsx)(n.td,{children:"Called when growth is paused"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"startfn"})}),(0,s.jsx)(n.td,{children:"Function"}),(0,s.jsx)(n.td,{children:"Called when growth starts"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"stagefn"})}),(0,s.jsx)(n.td,{children:"Function"}),(0,s.jsx)(n.td,{children:"Called when a new stage is reached"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Define growth stages\ngrowable:SetStages({\n    {name="sprout", time=TUNING.DAY_TIME_DEFAULT, fn=OnSprout},\n    {name="small", time=TUNING.DAY_TIME_DEFAULT * 2, fn=OnSmall},\n    {name="medium", time=TUNING.DAY_TIME_DEFAULT * 3, fn=OnMedium},\n    {name="full", time=TUNING.DAY_TIME_DEFAULT * 2, fn=OnFull}\n})\n\n-- Set current stage (1-based index)\ngrowable:SetStage(2) -- Set to second stage\n\n-- Start the growing process\ngrowable:StartGrowing()\n\n-- Pause growing\ngrowable:StopGrowing()\n\n-- Get current stage data\nlocal stage_data = growable:GetCurrentStageData()\n\n-- Jump to next stage\ngrowable:DoGrowth()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"growth-stages",children:"Growth Stages"}),"\n",(0,s.jsx)(n.p,{children:"Each growth stage is defined with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," - Identifier for the stage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"time"})," - Duration of this stage before advancing to the next"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fn"})," - Function called when this stage is reached"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,s.jsx)(n.p,{children:"The Growable component often works with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Pickable"})," - For harvestable plants at certain growth stages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Workable"})," - For different work requirements at different growth stages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Burnable"})," - For fire behavior that varies by growth stage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Lootdropper"})," - For different drops at different growth stages"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Pickable Component"})," - For harvesting plants at maturity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/workable",children:"Workable Component"})," - For chopping/mining at different growth stages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/burnable",children:"Burnable Component"})," - For burning behavior at different stages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/lootdropper",children:"LootDropper Component"})," - For drops at different growth stages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/components/other-components",children:"Timer Component"})," - For timing growth stages"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-creating-a-growable-plant",children:"Example: Creating a Growable Plant"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local function MakePlant()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    \n    -- Make it growable\n    inst:AddComponent("growable")\n    inst.components.growable:SetStages({\n        {\n            name="sprout", \n            time=TUNING.DAY_TIME_DEFAULT, \n            fn=function(inst) \n                inst.AnimState:PlayAnimation("sprout")\n            end\n        },\n        {\n            name="small", \n            time=TUNING.DAY_TIME_DEFAULT * 2, \n            fn=function(inst) \n                inst.AnimState:PlayAnimation("small")\n            end\n        },\n        {\n            name="full", \n            time=TUNING.DAY_TIME_DEFAULT * 3, \n            fn=function(inst) \n                inst.AnimState:PlayAnimation("full")\n                -- Make it pickable at full growth\n                inst:AddComponent("pickable")\n            end\n        }\n    })\n    \n    -- Start at the first stage\n    inst.components.growable:SetStage(1)\n    inst.components.growable:StartGrowing()\n    \n    return inst\nend\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);