"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[20647],{28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var i=s(96540);const l={},r=i.createContext(l);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(r.Provider,{value:n},e.children)}},28597:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"game-scripts/core-systems/development-tools/debugging/debugcommands","title":"Debug Commands","description":"Collection of debug utility functions for development, testing, and troubleshooting in Don\'t Starve Together","source":"@site/docs/game-scripts/core-systems/development-tools/debugging/debugcommands.md","sourceDirName":"game-scripts/core-systems/development-tools/debugging","slug":"/game-scripts/core-systems/development-tools/debugging/debugcommands","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debugcommands","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"debugcommands","title":"Debug Commands","description":"Collection of debug utility functions for development, testing, and troubleshooting in Don\'t Starve Together","sidebar_position":1,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Debugging Tools Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/"},"next":{"title":"Debug Helpers","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/debugging/debughelpers"}}');var l=s(74848),r=s(28453);const d={id:"debugcommands",title:"Debug Commands",description:"Collection of debug utility functions for development, testing, and troubleshooting in Don't Starve Together",sidebar_position:1,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},t="Debug Commands",c={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Functions",id:"functions",level:2},{value:"d_spawnlist(list, spacing, fn)",id:"d-spawnlist",level:3},{value:"d_playeritems()",id:"d-playeritems",level:3},{value:"d_allmutators()",id:"d-allmutators",level:3},{value:"d_allcircuits()",id:"d-allcircuits",level:3},{value:"d_allheavy()",id:"d-allheavy",level:3},{value:"d_spiders()",id:"d-spiders",level:3},{value:"d_particles()",id:"d-particles",level:3},{value:"d_fullmoon()",id:"d-fullmoon",level:3},{value:"d_newmoon()",id:"d-newmoon",level:3},{value:"d_lunarrift()",id:"d-lunarrift",level:3},{value:"d_shadowrift()",id:"d-shadowrift",level:3},{value:"d_riftspawns()",id:"d-riftspawns",level:3},{value:"d_exploreland()",id:"d-exploreland",level:3},{value:"d_exploreocean()",id:"d-exploreocean",level:3},{value:"d_explore_printunseentiles()",id:"d-explore-printunseentiles",level:3},{value:"d_unlockaffinities()",id:"d-unlockaffinities",level:3},{value:"d_resetskilltree()",id:"d-resetskilltree",level:3},{value:"d_reloadskilltreedefs()",id:"d-reloadskilltreedefs",level:3},{value:"d_printskilltreestringsforcharacter(character)",id:"d-printskilltreestringsforcharacter",level:3},{value:"d_teleportboat(x, y, z)",id:"d-teleportboat",level:3},{value:"d_rabbitking(kind)",id:"d-rabbitking",level:3},{value:"d_oceanarena()",id:"d-oceanarena",level:3},{value:"d_allsongs()",id:"d-allsongs",level:3},{value:"d_decodedata(path)",id:"d-decodedata",level:3},{value:"Usage Guidelines",id:"usage-guidelines",level:2},{value:"Development Best Practices",id:"development-best-practices",level:3},{value:"Common Testing Scenarios",id:"common-testing-scenarios",level:3},{value:"Safety Considerations",id:"safety-considerations",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Required Systems",id:"required-systems",level:3},{value:"Global Functions Used",id:"global-functions-used",level:3},{value:"Related Modules",id:"related-modules",level:2},{value:"Notes",id:"notes",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"debug-commands",children:"Debug Commands"})}),"\n",(0,l.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Build Version"}),(0,l.jsx)(n.th,{children:"Change Date"}),(0,l.jsx)(n.th,{children:"Change Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"676042"}),(0,l.jsx)(n.td,{children:"2025-06-21"}),(0,l.jsx)(n.td,{children:"stable"}),(0,l.jsx)(n.td,{children:"Current stable implementation"})]})})]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"debugcommands"})," module provides a comprehensive collection of debug utility functions for development, testing, and troubleshooting in Don't Starve Together. These functions enable developers and testers to spawn items, manipulate world state, test game mechanics, debug entity interactions, and generate test scenarios."]}),"\n",(0,l.jsx)(n.admonition,{title:"Development Only",type:"warning",children:(0,l.jsx)(n.p,{children:"These functions are intended for development and testing purposes only. They should not be used in production gameplay as they can significantly alter game balance and progression."})}),"\n",(0,l.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Basic item spawning\nd_spawnlist({"log", "rocks", "cutgrass"})\n\n-- Complete character testing setup\nd_unlockaffinities()  -- Unlock skill trees\nd_resetskilltree()    -- Reset and max out skills\nd_allsongs()          -- Give all battle songs\nd_playeritems()       -- Spawn all craftable items\n\n-- World state testing\nd_fullmoon()          -- Set moon phase\nd_lunarrift()         -- Create lunar rift\nd_exploreland()       -- Reveal map\n'})}),"\n",(0,l.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,l.jsx)(n.h3,{id:"d-spawnlist",children:"d_spawnlist(list, spacing, fn)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns a list of prefabs in a grid pattern at the console cursor position."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"list"})," (table): Array of prefab names or tables with ",(0,l.jsx)(n.code,{children:"{prefab, count, item_fn}"})," format"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"spacing"})," (number, optional): Distance between spawned items (default: 2)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"fn"})," (function, optional): Function to call on each spawned instance"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"(table): Array of created instances"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Spawn basic items\nd_spawnlist({"log", "rocks", "cutgrass"})\n\n-- Spawn with custom spacing\nd_spawnlist({"log", "rocks", "cutgrass"}, 3)\n\n-- Spawn with quantities and custom function\nlocal items = {\n    {"log", 10},\n    {"rocks", 5, function(inst) inst.AnimState:SetMultColour(1, 0, 0, 1) end}\n}\nd_spawnlist(items, 2, function(inst) inst.persists = false end)\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-playeritems",children:"d_playeritems()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns all craftable items organized by builder tags (character-specific items)."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Groups items by their builder_tag (character requirements)"}),"\n",(0,l.jsx)(n.li,{children:"Sorts items alphabetically within each group"}),"\n",(0,l.jsx)(n.li,{children:"Spawns items in a grid pattern near the console cursor"}),"\n",(0,l.jsx)(n.li,{children:"Excludes placeable structures and invalid prefabs"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_playeritems()\n-- Spawns all character-specific craftable items\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-allmutators",children:"d_allmutators()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nGives the player all available spider mutators for testing."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Spawned Mutators:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"mutator_warrior"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"mutator_dropper"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"mutator_hider"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"mutator_spitter"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"mutator_moon"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"mutator_water"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_allmutators()\n-- Player receives all spider mutator items\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-allcircuits",children:"d_allcircuits()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns all WX-78 circuit modules in a grid pattern."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Reads module definitions from ",(0,l.jsx)(n.code,{children:"wx78_moduledefs"})]}),"\n",(0,l.jsxs)(n.li,{children:["Spawns each circuit module as ",(0,l.jsx)(n.code,{children:"wx78module_[name]"})]}),"\n",(0,l.jsx)(n.li,{children:"Arranges modules in a square grid formation"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_allcircuits()\n-- Spawns all WX-78 upgrade modules for testing\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-allheavy",children:"d_allheavy()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns heavy objects that require special handling for movement."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Heavy Objects Spawned:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"cavein_boulder"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"sunkenchest"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"sculpture_knighthead"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"glassspike"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"moon_altar_idol"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"oceantreenut"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"shell_cluster"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"potato_oversized"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"chesspiece_knight_stone"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"chesspiece_knight_marble"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"chesspiece_knight_moonglass"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"potatosack"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_allheavy()\n-- Spawns various heavy objects for physics testing\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-spiders",children:"d_spiders()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns all spider variants as followers and gives water spider item."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Spider Types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"spider"})," (basic spider)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"spider_warrior"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"spider_dropper"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"spider_hider"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"spider_spitter"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"spider_moon"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"spider_healer"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"All spawned spiders become followers of the player"}),"\n",(0,l.jsxs)(n.li,{children:["Player receives ",(0,l.jsx)(n.code,{children:"spider_water"})," item"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_spiders()\n-- Spawns spider army following the player\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-particles",children:"d_particles()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns emitting particle effects in a grid with labels and movement."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Features:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Spawns various torch fires and particle effects"}),"\n",(0,l.jsx)(n.li,{children:"Each effect moves in a circle for visibility"}),"\n",(0,l.jsx)(n.li,{children:"Labels show prefab names above each effect"}),"\n",(0,l.jsx)(n.li,{children:"Automatic cleanup (non-persistent entities)"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_particles()\n-- Spawns moving particle effects with labels for visual testing\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-fullmoon",children:"d_fullmoon()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSets the moon phase to full moon."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_fullmoon()\n-- Changes moon phase to full for testing lunar mechanics\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-newmoon",children:"d_newmoon()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSets the moon phase to new moon."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_newmoon()\n-- Changes moon phase to new for testing mechanics\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-lunarrift",children:"d_lunarrift()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns a lunar rift at the console cursor position."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Enables lunar rifts in the world"}),"\n",(0,l.jsx)(n.li,{children:"Creates rift at tile-aligned position"}),"\n",(0,l.jsx)(n.li,{children:"Used for testing rift mechanics"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_lunarrift()\n-- Creates lunar rift for testing\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-shadowrift",children:"d_shadowrift()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns a shadow rift at the console cursor position."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Enables shadow rifts in the world"}),"\n",(0,l.jsx)(n.li,{children:"Creates rift at tile-aligned position"}),"\n",(0,l.jsx)(n.li,{children:"Cave-specific rift testing"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_shadowrift()\n-- Creates shadow rift for testing\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-riftspawns",children:"d_riftspawns()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nTriggers mass rift spawning for stress testing."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Opens appropriate rift type based on world (lunar/shadow)"}),"\n",(0,l.jsx)(n.li,{children:"Waits 10 seconds, then spawns 200 rifts"}),"\n",(0,l.jsx)(n.li,{children:"Highlights all rifts for debugging"}),"\n",(0,l.jsx)(n.li,{children:"Announces progress to players"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_riftspawns()\n-- Mass spawns rifts for performance testing\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-exploreland",children:"d_exploreland()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nReveals all land tiles on the map."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Scans world tiles with specified precision"}),"\n",(0,l.jsx)(n.li,{children:"Reveals only land tiles (not ocean)"}),"\n",(0,l.jsx)(n.li,{children:"Updates player's map exploration data"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_exploreland()\n-- Reveals all land areas on the map\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-exploreocean",children:"d_exploreocean()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nReveals all ocean tiles on the map."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_exploreocean()\n-- Reveals all ocean areas on the map\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-explore-printunseentiles",children:"d_explore_printunseentiles()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nPrints coordinates of all unseen tiles for debugging."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Scans entire world with high precision"}),"\n",(0,l.jsx)(n.li,{children:"Prints world coordinates of unexplored land tiles"}),"\n",(0,l.jsx)(n.li,{children:"Useful for identifying map generation issues"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_explore_printunseentiles()\n-- Outputs coordinates of unexplored areas\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-unlockaffinities",children:"d_unlockaffinities()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nUnlocks character affinities by marking required bosses as defeated."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Unlocked Affinities:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Marks Fuel Weaver as killed"}),"\n",(0,l.jsx)(n.li,{children:"Marks Celestial Champion as killed"}),"\n",(0,l.jsx)(n.li,{children:"Enables character affinity trees"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_unlockaffinities()\n-- Unlocks all character skill tree affinities\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-resetskilltree",children:"d_resetskilltree()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nResets the player's skill tree and grants maximum skill points."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Deactivates all currently learned skills"}),"\n",(0,l.jsx)(n.li,{children:"Attempts up to 50 iterations to fully reset"}),"\n",(0,l.jsx)(n.li,{children:"Grants 9,999,999 skill XP for testing"}),"\n",(0,l.jsx)(n.li,{children:"Syncs changes between server and client"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_resetskilltree()\n-- Resets skills and grants maximum XP\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-reloadskilltreedefs",children:"d_reloadskilltreedefs()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nReloads skill tree definitions for development."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_reloadskilltreedefs()\n-- Hot-reloads skill tree changes during development\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-printskilltreestringsforcharacter",children:"d_printskilltreestringsforcharacter(character)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nGenerates missing localization strings for character skill trees."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"character"})," (string, optional): Character prefab name (defaults to current player)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'d_printskilltreestringsforcharacter("wilson")\n-- Outputs missing localization strings for Wilson\'s skills\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-teleportboat",children:"d_teleportboat(x, y, z)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nTeleports the player's boat to specified coordinates."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"x, y, z"})," (numbers, optional): Target coordinates (defaults to console position)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Safety Checks:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Verifies player is on a boat"}),"\n",(0,l.jsx)(n.li,{children:"Checks for blocking entities at destination"}),"\n",(0,l.jsx)(n.li,{children:"Handles item collision and physics constraints"}),"\n",(0,l.jsx)(n.li,{children:"Snaps camera for smooth transition"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Teleport to console cursor\nd_teleportboat()\n\n-- Teleport to specific coordinates\nd_teleportboat(100, 0, 200)\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-rabbitking",children:"d_rabbitking(kind)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nSpawns a Rabbit King for the current player."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"kind"})," (string, optional): Specific rabbit king type"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'-- Spawn random rabbit king\nd_rabbitking()\n\n-- Spawn specific type\nd_rabbitking("aggressive")\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-oceanarena",children:"d_oceanarena()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nTriggers ocean arena placement for shark boi events."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Enables debug rate for faster placement"}),"\n",(0,l.jsx)(n.li,{children:"Initiates arena finding and placement process"}),"\n",(0,l.jsxs)(n.li,{children:["Requires ",(0,l.jsx)(n.code,{children:"sharkboimanager"})," component"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_oceanarena()\n-- Triggers shark boi ocean arena event\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-allsongs",children:"d_allsongs()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nGives the player all battle songs for testing."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Songs Provided:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"battlesong_durability"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"battlesong_healthgain"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"battlesong_sanitygain"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"battlesong_sanityaura"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"battlesong_fireresistance"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"battlesong_instant_taunt"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"d_allsongs()\n-- Player receives all Wigfrid battle songs\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"d-decodedata",children:"d_decodedata(path)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Status:"})," ",(0,l.jsx)(n.code,{children:"stable"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"}),"\nDecodes and saves persistent data files for debugging."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"path"})," (string): Path to persistent data file"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Loads encoded persistent data"}),"\n",(0,l.jsx)(n.li,{children:'Saves decoded version with "_decoded" suffix'}),"\n",(0,l.jsx)(n.li,{children:"Useful for examining save file contents"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'d_decodedata("client_save/survival_1")\n-- Creates "client_save/survival_1_decoded" with readable data\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Current implementation since build 676042"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"usage-guidelines",children:"Usage Guidelines"}),"\n",(0,l.jsx)(n.h3,{id:"development-best-practices",children:"Development Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Test Environment"}),": Use debug commands only in dedicated test worlds"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Save Backups"}),": Create save backups before extensive testing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Performance Impact"}),": Some commands (like ",(0,l.jsx)(n.code,{children:"d_riftspawns"}),") can impact performance"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Cleanup"}),": Many spawned entities are non-persistent and will disappear on reload"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"common-testing-scenarios",children:"Common Testing Scenarios"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"-- Complete character testing setup\nd_unlockaffinities()  -- Unlock skill trees\nd_resetskilltree()    -- Reset and max out skills\nd_allsongs()          -- Give all battle songs\nd_playeritems()       -- Spawn all craftable items\n\n-- World state testing\nd_fullmoon()          -- Set moon phase\nd_lunarrift()         -- Create lunar rift\nd_exploreland()       -- Reveal map\n\n-- Performance testing\nd_riftspawns()        -- Stress test with multiple rifts\n"})}),"\n",(0,l.jsx)(n.h3,{id:"safety-considerations",children:"Safety Considerations"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Master Simulation"}),": Many commands require ",(0,l.jsx)(n.code,{children:"TheWorld.ismastersim"})," check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Player Validation"}),": Commands verify player existence and state"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Error Handling"}),": Most functions include safety checks and error reporting"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Resource Usage"}),": Be mindful of spawning large quantities of entities"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,l.jsx)(n.h3,{id:"required-systems",children:"Required Systems"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Console System"}),": For world position and entity selection"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"World Components"}),": Various world managers and systems"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Player Systems"}),": Character, inventory, and skill systems"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Entity Framework"}),": For spawning and manipulating entities"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"global-functions-used",children:"Global Functions Used"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ConsoleWorldPosition()"}),": Get cursor world position"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ConsoleCommandPlayer()"}),": Get command-issuing player"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"SpawnPrefab()"}),": Create entity instances"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"c_give()"}),", ",(0,l.jsx)(n.code,{children:"c_spawn()"}),", ",(0,l.jsx)(n.code,{children:"c_sel()"}),": Console utility functions"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./consolecommands.md",children:"Console Commands"}),": Built-in console command system"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./prefabs.md",children:"Prefabs"}),": Entity spawning and management"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./mainfunctions.md",children:"Main Functions"}),": Core game functions"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Development Tool"}),": Debug commands are development utilities, not gameplay features"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Master Simulation"}),": Most world-altering commands only work on the master simulation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Performance Impact"}),": Some commands can significantly impact game performance"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Non-Persistent"}),": Many spawned debug entities don't persist through save/load cycles"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Console Integration"}),": Commands are typically accessed through the game's debug console"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Testing Efficiency"}),": Commands are designed to quickly set up complex testing scenarios"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);