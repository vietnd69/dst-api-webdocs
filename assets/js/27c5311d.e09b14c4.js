"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[7701],{7182:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api-vanilla/node-types/stategraph","title":"Stategraph","description":"Stategraphs control entity animations, sounds, and state-based behaviors in Don\'t Starve Together. They provide a framework for defining states and transitions between them.","source":"@site/docs/api-vanilla/node-types/stategraph.md","sourceDirName":"api-vanilla/node-types","slug":"/api-vanilla/node-types/stategraph","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/stategraph","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"stategraph","title":"Stategraph","sidebar_position":6},"sidebar":"docs","previous":{"title":"Brain","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/brain"},"next":{"title":"Widget","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/widget"}}');var s=t(4848),a=t(8453);const o={id:"stategraph",title:"Stategraph",sidebar_position:6},r="Stategraph",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Common Stategraph Structure",id:"common-stategraph-structure",level:2},{value:"State Properties",id:"state-properties",level:2},{value:"Common State Tags",id:"common-state-tags",level:2},{value:"Timeline Example",id:"timeline-example",level:2},{value:"Global Events",id:"global-events",level:2},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"stategraph",children:"Stategraph"})}),"\n",(0,s.jsx)(n.p,{children:"Stategraphs control entity animations, sounds, and state-based behaviors in Don't Starve Together. They provide a framework for defining states and transitions between them."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"A stategraph is a finite state machine that defines:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"States: Different modes an entity can be in (idle, walking, attacking)"}),"\n",(0,s.jsx)(n.li,{children:"Events: Triggers that cause state transitions"}),"\n",(0,s.jsx)(n.li,{children:"Handlers: Functions that handle specific events in specific states"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-stategraph-structure",children:"Common Stategraph Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local states = \n{\n    State{\n        name = "idle",\n        tags = {"idle", "canrotate"},\n        \n        onenter = function(inst)\n            inst.AnimState:PlayAnimation("idle_loop", true)\n        end,\n        \n        events = \n        {\n            EventHandler("animover", function(inst) \n                return inst.sg:GoToState("idle") \n            end),\n            EventHandler("attacked", function(inst) \n                return inst.sg:GoToState("hit") \n            end),\n        },\n    },\n    \n    State{\n        name = "walk",\n        tags = {"moving", "canrotate"},\n        \n        onenter = function(inst)\n            inst.AnimState:PlayAnimation("walk_loop", true)\n            inst.components.locomotor:WalkForward()\n        end,\n        \n        onexit = function(inst)\n            inst.components.locomotor:StopMoving()\n        end,\n    },\n}\n\nlocal events = \n{\n    EventHandler("locomote", function(inst, data)\n        if inst.sg:HasStateTag("moving") then\n            if not data.moving then\n                inst.sg:GoToState("idle")\n            end\n        elseif data.moving then\n            inst.sg:GoToState("walk")\n        end\n    end),\n}\n\nreturn StateGraph("entityname", states, events)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"state-properties",children:"State Properties"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": Unique identifier for the state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tags"}),": List of tags used to identify characteristics of the state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onenter"}),": Function called when entering the state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onexit"}),": Function called when exiting the state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onupdate"}),": Function called every frame while in the state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"timeline"}),": Timeline for triggering actions at specific animation frames"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"events"}),": Event handlers specific to this state"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-state-tags",children:"Common State Tags"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"idle"}),": Entity is not performing any action"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"moving"}),": Entity is moving"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"busy"}),": Entity cannot perform other actions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"attack"}),": Entity is attacking"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"canrotate"}),": Entity can change facing direction"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"timeline-example",children:"Timeline Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'timeline = \n{\n    TimeEvent(10*FRAMES, function(inst) \n        inst.SoundEmitter:PlaySound("dontstarve/creatures/monster/growl") \n    end),\n    TimeEvent(20*FRAMES, function(inst) \n        inst.components.combat:DoAttack() \n    end),\n},\n'})}),"\n",(0,s.jsx)(n.h2,{id:"global-events",children:"Global Events"}),"\n",(0,s.jsx)(n.p,{children:"Events defined at the stategraph level apply to all states unless overridden within a specific state."}),"\n",(0,s.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AnimState component"}),"\n",(0,s.jsx)(n.li,{children:"SoundEmitter component"}),"\n",(0,s.jsx)(n.li,{children:"Locomotor component"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);