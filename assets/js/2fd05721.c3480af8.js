"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[4980],{7996:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api-vanilla/world/map","title":"Map API","description":"Interfaces for map generation and manipulation.","source":"@site/docs/api-vanilla/world/map.md","sourceDirName":"api-vanilla/world","slug":"/api-vanilla/world/map","permalink":"/dst-api-webdocs/docs/api-vanilla/world/map","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"map","title":"Map API","sidebar_position":2}}');var s=i(4848),a=i(8453);const o={id:"map",title:"Map API",sidebar_position:2},r="Map API",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Key Components",id:"key-components",level:2},{value:"Map Generation",id:"map-generation",level:3},{value:"World Features",id:"world-features",level:3},{value:"Runtime Manipulation",id:"runtime-manipulation",level:3},{value:"Common Functions",id:"common-functions",level:2},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"map-api",children:"Map API"})}),"\n",(0,s.jsx)(n.p,{children:"Interfaces for map generation and manipulation."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Map API provides functionality for working with the game world's terrain, layout, and features. It includes tools for generation, customization, and runtime manipulation of the map."}),"\n",(0,s.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,s.jsx)(n.h3,{id:"map-generation",children:"Map Generation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Level Generation"}),": Control the generation of world levels with customizable presets and parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Task-based Generation"}),": Create map layouts using tasks, rooms, and connections"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Terrain Management"}),": Define and manipulate terrain types, tiles, and biomes"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"world-features",children:"World Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resource Distribution"}),": Control placement of resources, structures, and spawners"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Layouts"}),": Apply predefined static layouts for special locations or events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Protected Resources"}),": Define areas with restricted resource spawning"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"runtime-manipulation",children:"Runtime Manipulation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retrofit Functions"}),": Modify existing worlds with new features or content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ocean Management"}),": Control ocean generation, islands, and water-based content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maze Generation"}),": Generate complex maze structures with custom parameters"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-functions",children:"Common Functions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Get tile at a specific world position\nlocal tile = TheWorld.Map:GetTileAtPoint(x, y, z)\n\n-- Check if a point is on land\nlocal is_land = TheWorld.Map:IsLand(x, y, z)\n\n-- Find a valid point for spawning an entity\nlocal x, y, z = TheWorld.Map:FindValidPositionByFan(angle, radius, attempts, center_x, center_z)\n\n-- Check path accessibility between points\nlocal is_accessible = TheWorld.Map:IsAboveGroundAtPoint(x, y, z)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minimap"}),": Interface for the player's minimap functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pathfinder"}),": Navigation system for entities traversing the map"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WorldStateComponent"}),": Controls global map states and transitions"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);