"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[2953],{2095:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api-vanilla/examples/island-adventures-relationship","title":"Island Adventures Case Studies Relationship","description":"Last Update: 2023-07-06","source":"@site/docs/api-vanilla/examples/island-adventures-relationship.md","sourceDirName":"api-vanilla/examples","slug":"/api-vanilla/examples/island-adventures-relationship","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/island-adventures-relationship","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"island-adventures-relationship","title":"Island Adventures Case Studies Relationship","sidebar_position":5,"last_updated":"2023-07-06T00:00:00.000Z","version":619045},"sidebar":"docs","previous":{"title":"Case Study - Island Adventures Gameplay","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/case-island-adventures"},"next":{"title":"Case Study - Re-Gorge-itated Mod","permalink":"/dst-api-webdocs/docs/api-vanilla/examples/case-regorgeitaled"}}');var i=s(4848),a=s(8453);const r={id:"island-adventures-relationship",title:"Island Adventures Case Studies Relationship",sidebar_position:5,last_updated:new Date("2023-07-06T00:00:00.000Z"),version:619045},l="Relationship Between Island Adventures Case Studies",d={},o=[{value:"Overview of the Case Studies",id:"overview-of-the-case-studies",level:2},{value:"Complementary Focus Areas",id:"complementary-focus-areas",level:2},{value:"Technical vs. Gameplay Perspectives",id:"technical-vs-gameplay-perspectives",level:3},{value:"Example Comparison",id:"example-comparison",level:3},{value:"Key Differences in Content",id:"key-differences-in-content",level:2},{value:"Island Adventures Core",id:"island-adventures-core",level:3},{value:"Island Adventures Gameplay",id:"island-adventures-gameplay",level:3},{value:"How to Use These Case Studies",id:"how-to-use-these-case-studies",level:2},{value:"For Technical Learning",id:"for-technical-learning",level:3},{value:"For Gameplay Design Learning",id:"for-gameplay-design-learning",level:3},{value:"For Comprehensive Understanding",id:"for-comprehensive-understanding",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Last Update: 2023-07-06"})}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"relationship-between-island-adventures-case-studies",children:"Relationship Between Island Adventures Case Studies"})}),"\n",(0,i.jsx)(n.p,{children:"This document explains the relationship between the two Island Adventures case studies and how they complement each other to provide a comprehensive understanding of large-scale mod development for Don't Starve Together."}),"\n",(0,i.jsx)(n.h2,{id:"overview-of-the-case-studies",children:"Overview of the Case Studies"}),"\n",(0,i.jsx)(n.p,{children:"The Island Adventures mod is examined through two complementary case studies:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/case-ia-core",children:"Island Adventures Core"})})," - Focuses on the technical implementation and architecture"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/case-island-adventures",children:"Island Adventures Gameplay"})})," - Focuses on the gameplay systems and mechanics"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These two documents are designed to be read together to gain a complete understanding of both the technical foundation and the gameplay design of this comprehensive mod."}),"\n",(0,i.jsx)(n.h2,{id:"complementary-focus-areas",children:"Complementary Focus Areas"}),"\n",(0,i.jsx)(n.h3,{id:"technical-vs-gameplay-perspectives",children:"Technical vs. Gameplay Perspectives"}),"\n",(0,i.jsx)(n.p,{children:"The two case studies approach the same mod from different angles:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Island Adventures Core"}),(0,i.jsx)(n.th,{children:"Island Adventures Gameplay"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Code structure and organization"}),(0,i.jsx)(n.td,{children:"Player experience and game flow"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Component architecture"}),(0,i.jsx)(n.td,{children:"Gameplay systems integration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Technical implementation details"}),(0,i.jsx)(n.td,{children:"Game design decisions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Integration with DST's core systems"}),(0,i.jsx)(n.td,{children:"Balance considerations"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Network synchronization"}),(0,i.jsx)(n.td,{children:"Progression systems"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"example-comparison",children:"Example Comparison"}),"\n",(0,i.jsx)(n.p,{children:"To illustrate how the two documents complement each other, consider how they each approach the ocean and sailing mechanics:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Island Adventures Core (Technical Focus):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- From case-ia-core.md\nfunction BoatTrawler:StartTrawling()\n    self.trawling = true\n    self.trawltime = 0\n    self:SetTrawlDistance(0)\n    self.inst:StartUpdatingComponent(self)\n    self.inst:PushEvent("trawlstart")\nend\n\n-- Sea/Skyworthy (portal) implementation\nlocal function OnActivate(inst, doer)\n    if not inst:HasTag("active") then\n        return false\n    elseif not (doer ~= nil and doer:HasTag("player")) then\n        return false, "NOTPLAYER"\n    end\n\n    local world = TheWorld\n    if world == nil or world.net == nil then\n        return false\n    end\n\n    local target_shard = nil\n    for shard_id, _ in pairs(world.net.components.shardstate:GetConnectedShards()) do\n        target_shard = shard_id\n        break\n    end\n\n    if target_shard == nil then\n        return false, "NOWORLD"\n    end\n\n    -- Initiate migration to other world\n    TheWorld:PushEvent("ms_playerdespawnandmigrate", {\n        player = doer, \n        worldid = target_shard,\n        portal_id = inst.components.worldmigrator.id\n    })\n    \n    return true\nend\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Island Adventures Gameplay (Gameplay Focus):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- From case-island-adventures.md\nfunction BoatPhysics:OnUpdate(dt)\n    -- Apply wind forces\n    if TheWorld.components.worldwind ~= nil then\n        local wind_speed = TheWorld.components.worldwind:GetWindSpeed()\n        local wind_direction = TheWorld.components.worldwind:GetWindDirection()\n        \n        -- Calculate wind force based on direction and sail state\n        local sail_force = 0\n        if self.has_sail and self.sail_raised then\n            -- Calculate angle between boat and wind\n            local boat_angle = self.inst.Transform:GetRotation() * DEGREES\n            local angle_diff = math.abs(DiffAngle(boat_angle, wind_direction))\n            \n            if angle_diff < 45 * DEGREES then\n                -- Wind is behind, strong push\n                sail_force = wind_speed * TUNING.BOAT.WIND_FORCE * 1.5\n            elseif angle_diff < 90 * DEGREES then\n                -- Wind is to the side, moderate push\n                sail_force = wind_speed * TUNING.BOAT.WIND_FORCE\n            elseif angle_diff < 135 * DEGREES then\n                -- Wind is at an angle, slight push\n                sail_force = wind_speed * TUNING.BOAT.WIND_FORCE * 0.5\n            else\n                -- Wind is against, minimal push\n                sail_force = wind_speed * TUNING.BOAT.WIND_FORCE * 0.1\n            end\n        end\n        \n        -- Apply force in boat's forward direction\n        local angle = self.inst.Transform:GetRotation() * DEGREES\n        local vx = math.cos(angle) * sail_force\n        local vz = -math.sin(angle) * sail_force\n        \n        self.velocity_x = self.velocity_x + vx * dt\n        self.velocity_z = self.velocity_z + vz * dt\n    end\n"})}),"\n",(0,i.jsx)(n.p,{children:"While both examples show code related to boats, the Core case study focuses on the component structure and integration with other systems, while the Gameplay case study emphasizes the physics simulation and how wind direction affects player experience."}),"\n",(0,i.jsx)(n.h2,{id:"key-differences-in-content",children:"Key Differences in Content"}),"\n",(0,i.jsx)(n.h3,{id:"island-adventures-core",children:"Island Adventures Core"}),"\n",(0,i.jsx)(n.p,{children:"The Core case study emphasizes:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Project Structure"})," - How files and directories are organized"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Custom Components"})," - Detailed implementation of components like ",(0,i.jsx)(n.code,{children:"sailor"}),", ",(0,i.jsx)(n.code,{children:"poisonable"}),", etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network Integration"})," - How multiplayer synchronization is handled"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Entity System Modifications"})," - How the mod extends the base game's entity system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"World State Management"})," - Technical details of managing world state variables"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"island-adventures-gameplay",children:"Island Adventures Gameplay"}),"\n",(0,i.jsx)(n.p,{children:"The Gameplay case study emphasizes:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Player Experience"})," - How systems feel to the player"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interconnected Systems"})," - How weather, sailing, and other systems work together"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Progression Design"})," - How players advance through the content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environmental Storytelling"})," - How systems create emergent narrative"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Balance Considerations"})," - How challenges and rewards are balanced"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use-these-case-studies",children:"How to Use These Case Studies"}),"\n",(0,i.jsx)(n.h3,{id:"for-technical-learning",children:"For Technical Learning"}),"\n",(0,i.jsx)(n.p,{children:"If you're primarily interested in the technical aspects of mod development:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Start with ",(0,i.jsx)(n.strong,{children:"Island Adventures Core"})," to understand the architecture"]}),"\n",(0,i.jsxs)(n.li,{children:["Reference specific systems in ",(0,i.jsx)(n.strong,{children:"Island Adventures Gameplay"})," to see how they're designed from a player perspective"]}),"\n",(0,i.jsx)(n.li,{children:"Pay special attention to the component interactions and network synchronization in the Core study"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"for-gameplay-design-learning",children:"For Gameplay Design Learning"}),"\n",(0,i.jsx)(n.p,{children:"If you're primarily interested in gameplay design:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Start with ",(0,i.jsx)(n.strong,{children:"Island Adventures Gameplay"})," to understand the player experience"]}),"\n",(0,i.jsxs)(n.li,{children:["Reference ",(0,i.jsx)(n.strong,{children:"Island Adventures Core"})," when you need to understand how a particular feature is implemented"]}),"\n",(0,i.jsx)(n.li,{children:"Pay special attention to the balance considerations and interconnected systems in the Gameplay study"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"for-comprehensive-understanding",children:"For Comprehensive Understanding"}),"\n",(0,i.jsx)(n.p,{children:"For a complete understanding of large-scale mod development:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Read both case studies in parallel, comparing how each feature is approached from both perspectives"}),"\n",(0,i.jsx)(n.li,{children:"Consider how technical constraints influenced gameplay decisions and vice versa"}),"\n",(0,i.jsx)(n.li,{children:"Study how the mod maintains the core feel of Don't Starve Together while adding substantial new content"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"The Island Adventures case studies demonstrate the dual nature of mod development - technical implementation and gameplay design. By studying both perspectives, mod developers can gain insights into creating cohesive, well-structured, and engaging content for Don't Starve Together."}),"\n",(0,i.jsx)(n.p,{children:"These case studies serve as complementary resources that, when used together, provide a comprehensive guide to developing large-scale mods that extend the base game in meaningful ways while maintaining compatibility and performance."}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/core/component-system",children:"Component System"})," - For understanding how components work"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/custom-component",children:"Custom Component"})," - For learning how to create custom components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/custom-game-mode",children:"Custom Game Mode"})," - For creating alternative game modes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/examples/custom-weather-effects",children:"Custom Weather Effects"})," - For implementing weather systems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/dst-api-webdocs/docs/api-vanilla/core/network-system",children:"Network System"})," - For multiplayer synchronization"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);