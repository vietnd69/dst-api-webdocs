"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[71808],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},47840:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"game-scripts/core-systems/system-core/engine/mainfunctions","title":"Main Functions","description":"Core game functions for save/load operations, entity management, time functions, and game flow control","source":"@site/docs/game-scripts/core-systems/system-core/engine/mainfunctions.md","sourceDirName":"game-scripts/core-systems/system-core/engine","slug":"/game-scripts/core-systems/system-core/engine/mainfunctions","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/mainfunctions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"mainfunctions","title":"Main Functions","description":"Core game functions for save/load operations, entity management, time functions, and game flow control","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Main Entry Point","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/main"},"next":{"title":"Map Utilities","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/maputil"}}');var r=s(74848),t=s(28453);const l={id:"mainfunctions",title:"Main Functions",description:"Core game functions for save/load operations, entity management, time functions, and game flow control",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},a="Main Functions",c={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Save/Load Functions",id:"saveload-functions",level:2},{value:"SavePersistentString(name, data, encode, callback)",id:"save-persistent-string",level:3},{value:"ErasePersistentString(name, callback)",id:"erase-persistent-string",level:3},{value:"Entity Management Functions",id:"entity-management-functions",level:2},{value:"SpawnPrefab(name, skin, skin_id, creator)",id:"spawn-prefab",level:3},{value:"ReplacePrefab(original_inst, name, skin, skin_id, creator)",id:"replace-prefab",level:3},{value:"CreateEntity(name)",id:"create-entity",level:3},{value:"RemoveEntity(guid)",id:"remove-entity",level:3},{value:"Time Functions",id:"time-functions",level:2},{value:"GetTime()",id:"get-time",level:3},{value:"GetTick()",id:"get-tick",level:3},{value:"GetTickTime()",id:"get-tick-time",level:3},{value:"GetStaticTime()",id:"get-static-time",level:3},{value:"GetTimeReal()",id:"get-time-real",level:3},{value:"SecondsToTimeString(total_seconds)",id:"seconds-to-time-string",level:3},{value:"Game Flow Control",id:"game-flow-control",level:2},{value:"SimReset(instanceparameters)",id:"sim-reset",level:3},{value:"Shutdown()",id:"shutdown",level:3},{value:"DoRestart(save)",id:"do-restart",level:3},{value:"Pause/Resume Functions",id:"pauseresume-functions",level:2},{value:"SetPause(val, reason)",id:"set-pause",level:3},{value:"IsPaused()",id:"is-paused",level:3},{value:"SetAutopaused(autopause)",id:"set-autopaused",level:3},{value:"Script and Asset Loading",id:"script-and-asset-loading",level:2},{value:"LoadScript(filename)",id:"load-script",level:3},{value:"RunScript(filename)",id:"run-script",level:3},{value:"LoadPrefabFile(filename, async_batch_validation, search_asset_first_path)",id:"load-prefab-file",level:3},{value:"Network and Multiplayer",id:"network-and-multiplayer",level:2},{value:"OnPlayerLeave(player_guid, expected)",id:"on-player-leave",level:3},{value:"OnNetworkDisconnect(message, should_reset, force_immediate_reset, details, miscdata)",id:"on-network-disconnect",level:3},{value:"Debug and Development",id:"debug-and-development",level:2},{value:"SetDebugEntity(inst)",id:"set-debug-entity",level:3},{value:"GetDebugEntity()",id:"get-debug-entity",level:3},{value:"ExecuteConsoleCommand(fnstr, guid, x, z)",id:"execute-console-command",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"DisplayError(error)",id:"display-error",level:3},{value:"State Queries",id:"state-queries",level:2},{value:"InGamePlay()",id:"in-game-play",level:3},{value:"IsMigrating()",id:"is-migrating",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"main-functions",children:"Main Functions"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"mainfunctions.lua"})," script provides essential game functions for save/load operations, entity management, time handling, and game flow control. These functions form the backbone of DST's runtime operations and are used throughout the game for critical system management."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Entity spawning\nlocal flower = SpawnPrefab("flower")\nflower.Transform:SetPosition(10, 0, 5)\n\n-- Time functions\nlocal current_time = GetTime()\nlocal tick_time = GetTickTime()\n\n-- Save operations\nSavePersistentString("my_save", data, true, function()\n    print("Save completed")\nend)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"saveload-functions",children:"Save/Load Functions"}),"\n",(0,r.jsx)(n.h3,{id:"save-persistent-string",children:"SavePersistentString(name, data, encode, callback)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSaves data to persistent storage with optional encoding and callback notification."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Name identifier for the save data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," (string): Data to be saved"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"encode"})," (boolean): Whether to encode the data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"callback"})," (function): Optional callback function executed after save"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local save_data = "player_settings=enabled"\nSavePersistentString("settings", save_data, true, function()\n    print("Settings saved successfully")\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"erase-persistent-string",children:"ErasePersistentString(name, callback)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRemoves persistent data with the given name."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Name identifier for the data to erase"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"callback"})," (function): Optional callback function executed after erasure"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'ErasePersistentString("old_save", function()\n    print("Old save data removed")\nend)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"entity-management-functions",children:"Entity Management Functions"}),"\n",(0,r.jsx)(n.h3,{id:"spawn-prefab",children:"SpawnPrefab(name, skin, skin_id, creator)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSpawns a prefab instance in the game world with optional skin and creator information."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Prefab name to spawn"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skin"})," (string): Optional skin identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skin_id"})," (string): Optional skin ID"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"creator"})," (EntityScript): Optional creator entity"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(EntityScript): The spawned entity instance"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Spawn a basic flower\nlocal flower = SpawnPrefab("flower")\n\n-- Spawn with specific skin\nlocal character = SpawnPrefab("wilson", "wilson_formal")\n\n-- Check if spawning succeeded\nif flower then\n    flower.Transform:SetPosition(x, y, z)\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"replace-prefab",children:"ReplacePrefab(original_inst, name, skin, skin_id, creator)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReplaces an existing entity with a new prefab at the same position."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"original_inst"})," (EntityScript): Entity to replace"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): New prefab name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skin"})," (string): Optional skin identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skin_id"})," (string): Optional skin ID"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"creator"})," (EntityScript): Optional creator entity"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(EntityScript): The replacement entity instance"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Replace a sapling with a tree\nlocal tree = ReplacePrefab(sapling, "tree")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"create-entity",children:"CreateEntity(name)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates a new entity with optional name identifier."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Optional name for the entity"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(EntityScript): The created entity script"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local custom_entity = CreateEntity("MyCustomEntity")\ncustom_entity:AddComponent("health")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"remove-entity",children:"RemoveEntity(guid)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRemoves an entity from the game world by its GUID."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"guid"})," (number): Entity GUID to remove"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local entity_guid = entity.GUID\nRemoveEntity(entity_guid)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"time-functions",children:"Time Functions"}),"\n",(0,r.jsx)(n.h3,{id:"get-time",children:"GetTime()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns the current game time in seconds."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Current game time"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local current_time = GetTime()\nprint("Game has been running for", current_time, "seconds")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"get-tick",children:"GetTick()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns the current game tick count."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Current tick number"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local tick = GetTick()\nif tick % 30 == 0 then\n    -- Execute every 30 ticks (approximately 1 second)\n    DoPeriodicTask()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-tick-time",children:"GetTickTime()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns the duration of one game tick in seconds."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Tick duration in seconds"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local tick_duration = GetTickTime()\nlocal ticks_per_second = 1 / tick_duration\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-static-time",children:"GetStaticTime()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns the current static time (unaffected by time scale)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Current static time"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"get-time-real",children:"GetTimeReal()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nReturns real-world time in milliseconds since game start."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Real time in milliseconds"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"seconds-to-time-string",children:"SecondsToTimeString(total_seconds)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nConverts seconds to a formatted time string."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"total_seconds"})," (number): Time in seconds to convert"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["(string): Formatted time string (MM",":SS"," or SS format)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local time_str = SecondsToTimeString(125)\nprint(time_str) -- Output: "2:05"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"game-flow-control",children:"Game Flow Control"}),"\n",(0,r.jsx)(n.h3,{id:"sim-reset",children:"SimReset(instanceparameters)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nResets the simulation with new instance parameters."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"instanceparameters"})," (table): Optional parameters for the new instance"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Reset to main menu\nSimReset({reset_action = RESET_ACTION.LOAD_FRONTEND})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"shutdown",children:"Shutdown()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSafely shuts down the game, handling cleanup operations."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Graceful shutdown\nShutdown()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"do-restart",children:"DoRestart(save)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRestarts the game with optional save operation."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"save"})," (boolean): Whether to save before restarting"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Restart without saving\nDoRestart(false)\n\n-- Restart with save\nDoRestart(true)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"pauseresume-functions",children:"Pause/Resume Functions"}),"\n",(0,r.jsx)(n.h3,{id:"set-pause",children:"SetPause(val, reason)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSets the game pause state with optional reason."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"val"})," (boolean): Whether to pause the game"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"reason"})," (string): Optional reason for pause"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Pause the game\nSetPause(true, "Menu opened")\n\n-- Resume the game\nSetPause(false)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"is-paused",children:"IsPaused()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the game is currently paused."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if game is paused"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"if not IsPaused() then\n    -- Only update when not paused\n    UpdateGameLogic()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set-autopaused",children:"SetAutopaused(autopause)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSets automatic pause state (e.g., when inventory is open)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"autopause"})," (boolean): Whether to enable autopause"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"script-and-asset-loading",children:"Script and Asset Loading"}),"\n",(0,r.jsx)(n.h3,{id:"load-script",children:"LoadScript(filename)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nLoads and caches a Lua script file."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filename"})," (string): Script filename relative to scripts directory"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(any): The loaded script's return value"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local utility_script = LoadScript("util/helpers")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"run-script",children:"RunScript(filename)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nLoads and executes a Lua script file."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filename"})," (string): Script filename to execute"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'RunScript("custom/initialization")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"load-prefab-file",children:"LoadPrefabFile(filename, async_batch_validation, search_asset_first_path)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nLoads prefab definitions from a file with optional validation settings."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filename"})," (string): Prefab file to load"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"async_batch_validation"})," (boolean): Whether to use async validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"search_asset_first_path"})," (boolean): Whether to prioritize asset paths"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(table): Array of loaded prefab definitions"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Load character prefabs\nLoadPrefabFile("prefabs/characters")\n\n-- Load with async validation\nLoadPrefabFile("prefabs/items", true)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"network-and-multiplayer",children:"Network and Multiplayer"}),"\n",(0,r.jsx)(n.h3,{id:"on-player-leave",children:"OnPlayerLeave(player_guid, expected)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nHandles player disconnection events."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"player_guid"})," (number): GUID of the leaving player"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expected"})," (boolean): Whether the disconnection was expected"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"on-network-disconnect",children:"OnNetworkDisconnect(message, should_reset, force_immediate_reset, details, miscdata)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nHandles network disconnection with appropriate UI feedback."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"message"})," (string): Disconnection reason code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"should_reset"})," (boolean): Whether to reset to main menu"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"force_immediate_reset"})," (boolean): Whether to force immediate reset"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"details"})," (table): Additional disconnect details"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"miscdata"})," (any): Miscellaneous data"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"debug-and-development",children:"Debug and Development"}),"\n",(0,r.jsx)(n.h3,{id:"set-debug-entity",children:"SetDebugEntity(inst)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSets an entity as the current debug target."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"inst"})," (EntityScript): Entity to debug"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Set player as debug target\nSetDebugEntity(ThePlayer)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-debug-entity",children:"GetDebugEntity()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nGets the current debug entity."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(EntityScript): Current debug entity"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"execute-console-command",children:"ExecuteConsoleCommand(fnstr, guid, x, z)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nExecutes arbitrary Lua code in console context."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fnstr"})," (string): Lua code to execute"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"guid"})," (number): Optional player GUID for context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," (number): Optional X position override"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"z"})," (number): Optional Z position override"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"display-error",children:"DisplayError(error)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDisplays an error dialog with appropriate options for recovery."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"error"})," (string): Error message to display"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"state-queries",children:"State Queries"}),"\n",(0,r.jsx)(n.h3,{id:"in-game-play",children:"InGamePlay()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the game is currently in gameplay state (not in menus)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if in gameplay"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"if InGamePlay() then\n    -- Only process game logic when actually playing\n    ProcessPlayerActions()\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"is-migrating",children:"IsMigrating()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nChecks if the game is currently migrating between servers."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(boolean): True if migrating"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/system-core/engine/main",children:"Main"}),": Game initialization and platform detection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./entityscript.md",children:"EntityScript"}),": Entity scripting framework"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./saveindex.md",children:"SaveIndex"}),": Save file management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./networking.md",children:"Networking"}),": Network communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./scheduler.md",children:"Scheduler"}),": Task scheduling system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./debughelpers.md",children:"DebugHelpers"}),": Development and debugging tools"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);