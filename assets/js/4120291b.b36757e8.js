"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[1570],{5968:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"api-vanilla/utils/utils-overview","title":"Utilities Overview","description":"Last Update: 2023-07-06","source":"@site/docs/api-vanilla/utils/index.md","sourceDirName":"api-vanilla/utils","slug":"/api/utils","permalink":"/dst-api-webdocs/docs/api/utils","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"utils-overview","title":"Utilities Overview","sidebar_position":1,"last_updated":"2023-07-06T00:00:00.000Z","slug":"/api/utils"},"sidebar":"docs","previous":{"title":"Utils","permalink":"/dst-api-webdocs/docs/category/utils"},"next":{"title":"Math Utils","permalink":"/dst-api-webdocs/docs/api-vanilla/utils/math-utils"}}');var s=t(4848),a=t(8453);const l={id:"utils-overview",title:"Utilities Overview",sidebar_position:1,last_updated:new Date("2023-07-06T00:00:00.000Z"),slug:"/api/utils"},o="Utilities Overview",r={},c=[{value:"Available Utility Categories",id:"available-utility-categories",level:2},{value:"When to Use Utilities",id:"when-to-use-utilities",level:2},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Importing Utilities",id:"importing-utilities",level:3},{value:"Vector Operations",id:"vector-operations",level:3},{value:"Table Management",id:"table-management",level:3},{value:"String Processing",id:"string-processing",level:3},{value:"Integration with Game Systems",id:"integration-with-game-systems",level:2},{value:"Creating Custom Utilities",id:"creating-custom-utilities",level:2}];function d(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"Last Update: 2023-07-06"})}),"\n",(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"utilities-overview",children:"Utilities Overview"})}),"\n",(0,s.jsx)(i.p,{children:"Don't Starve Together provides a variety of utility functions to assist with common modding tasks. These utilities are organized into several categories that help with everything from vector math to string manipulation."}),"\n",(0,s.jsx)(i.h2,{id:"available-utility-categories",children:"Available Utility Categories"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Category"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/dst-api-webdocs/docs/api-vanilla/utils/vector",children:"Vector Utilities"})}),(0,s.jsx)(i.td,{children:"Tools for working with vectors, positions, and spatial calculations"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/dst-api-webdocs/docs/api-vanilla/utils/string",children:"String Utilities"})}),(0,s.jsx)(i.td,{children:"Functions for string manipulation, formatting, and text processing"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/dst-api-webdocs/docs/api-vanilla/utils/table",children:"Table Utilities"})}),(0,s.jsx)(i.td,{children:"Tools for working with Lua tables, collections, and data structures"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/dst-api-webdocs/docs/api-vanilla/utils/math",children:"Math Utilities"})}),(0,s.jsx)(i.td,{children:"Mathematical functions and operations beyond the standard Lua math library"})]})]})]}),"\n",(0,s.jsx)(i.h2,{id:"when-to-use-utilities",children:"When to Use Utilities"}),"\n",(0,s.jsx)(i.p,{children:"These utility functions provide several advantages:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Consistent Behavior"}),": Using built-in utilities ensures consistent behavior across different mods"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Performance"}),": Many utilities are optimized for performance in the game environment"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Convenience"}),": Complex operations are simplified into easy-to-use function calls"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Compatibility"}),": Utilities are maintained with the game, reducing the risk of breaking changes"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,s.jsx)(i.h3,{id:"importing-utilities",children:"Importing Utilities"}),"\n",(0,s.jsx)(i.p,{children:"Most utility functions are globally available without requiring imports. However, it's good practice to check if they exist before using them:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-lua",children:"if table.contains then\n    -- Use table.contains\nelse\n    -- Fallback implementation\nend\n"})}),"\n",(0,s.jsx)(i.h3,{id:"vector-operations",children:"Vector Operations"}),"\n",(0,s.jsx)(i.p,{children:"Vector utilities are used extensively for positioning, movement, and spatial calculations:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-lua",children:"-- Create a position vector\nlocal pos = Vector3(x, y, z)\n\n-- Calculate distance\nlocal dist = pos:Dist(target_pos)\n\n-- Get movement direction\nlocal dir = (target_pos - pos):GetNormalized()\n"})}),"\n",(0,s.jsx)(i.h3,{id:"table-management",children:"Table Management"}),"\n",(0,s.jsx)(i.p,{children:"Table utilities help manage collections, configurations, and data structures:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-lua",children:'-- Check if table contains a value\nif table.contains(allowed_prefabs, prefab) then\n    -- Do something\nend\n\n-- Safely access nested properties\nlocal damage = table.getfield(config, "combat.damage") or 10\n'})}),"\n",(0,s.jsx)(i.h3,{id:"string-processing",children:"String Processing"}),"\n",(0,s.jsx)(i.p,{children:"String utilities assist with text manipulation, formatting, and localization:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-lua",children:'-- Format time for display\nlocal time_display = str_seconds(time_remaining)\n\n-- Get character-specific dialogue\nlocal speech = GetString(inst, "DESCRIBE", item.prefab)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"integration-with-game-systems",children:"Integration with Game Systems"}),"\n",(0,s.jsx)(i.p,{children:"Utilities often work together with game systems to create complex behaviors:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-lua",children:'-- Find all entities of a type within a radius\nlocal x, y, z = inst.Transform:GetWorldPosition()\nlocal entities = TheSim:FindEntities(x, y, z, radius, {"monster"})\n\n-- Sort them by distance\ntable.sort(entities, function(a, b)\n    local a_pos = Vector3(a.Transform:GetWorldPosition())\n    local b_pos = Vector3(b.Transform:GetWorldPosition())\n    local pos = Vector3(x, y, z)\n    return a_pos:DistSq(pos) < b_pos:DistSq(pos)\nend)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"creating-custom-utilities",children:"Creating Custom Utilities"}),"\n",(0,s.jsx)(i.p,{children:"You can extend the utility system with your own functions for commonly used operations:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-lua",children:"-- Add custom utility function\nif not table.shuffle then\n    function table.shuffle(t)\n        for i = #t, 2, -1 do\n            local j = math.random(i)\n            t[i], t[j] = t[j], t[i]\n        end\n        return t\n    end\nend\n"})}),"\n",(0,s.jsx)(i.p,{children:"By leveraging these utility functions, you can write more concise, efficient, and maintainable mods for Don't Starve Together."})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>l,x:()=>o});var n=t(6540);const s={},a=n.createContext(s);function l(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);