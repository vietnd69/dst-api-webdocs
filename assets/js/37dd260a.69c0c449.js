"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[16984],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},73951:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"game-scripts/core-systems/development-tools/profiling/mixer","title":"Mixer","description":"Audio mixing system for managing sound levels, filters, and audio states","source":"@site/docs/game-scripts/core-systems/development-tools/profiling/mixer.md","sourceDirName":"game-scripts/core-systems/development-tools/profiling","slug":"/game-scripts/core-systems/development-tools/profiling/mixer","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/profiling/mixer","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"mixer","title":"Mixer","description":"Audio mixing system for managing sound levels, filters, and audio states","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Profiling Tools Overview","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/profiling/"},"next":{"title":"Profiler","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/development-tools/profiling/profiler"}}');var r=s(74848),l=s(28453);const t={id:"mixer",title:"Mixer",description:"Audio mixing system for managing sound levels, filters, and audio states",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},d="Mixer",c={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Classes",id:"classes",level:2},{value:"Mix",id:"mix",level:3},{value:"Constructor",id:"constructor",level:4},{value:"Properties",id:"properties",level:4},{value:"Methods",id:"methods",level:4},{value:"mix()",id:"mix-apply",level:5},{value:"mix(channel, level)",id:"mix-setlevel",level:5},{value:"mix(channel)",id:"mix-getlevel",level:5},{value:"Mixer",id:"mixer-1",level:3},{value:"Constructor",id:"constructor-1",level:4},{value:"Properties",id:"properties-1",level:4},{value:"Mix Management Methods",id:"mix-management-methods",level:4},{value:"mixer(name, fadetime, priority, levels)",id:"mixer-addnewmix",level:5},{value:"mixer(mixname)",id:"mixer-pushmix",level:5},{value:"mixer(mixname)",id:"mixer-popmix",level:5},{value:"mixer(mixname)",id:"mixer-deletemix",level:5},{value:"Audio Level Methods",id:"audio-level-methods",level:4},{value:"mixer(channel)",id:"mixer-getlevel",level:5},{value:"mixer(channel, level)",id:"mixer-setlevel",level:5},{value:"Filter Methods",id:"filter-methods",level:4},{value:"mixer(category, cutoff, timetotake)",id:"mixer-setlowpassfilter",level:5},{value:"mixer(category, cutoff, timetotake)",id:"mixer-sethighpassfilter",level:5},{value:"mixer(category, timetotake)",id:"mixer-clearlowpassfilter",level:5},{value:"mixer(category, timetotake)",id:"mixer-clearhighpassfilter",level:5},{value:"System Methods",id:"system-methods",level:4},{value:"mixer(dt)",id:"mixer-update",level:5},{value:"mixer()",id:"mixer-createsnapshot",level:5},{value:"mixer()",id:"mixer-blend",level:5},{value:"Audio Channel Constants",id:"audio-channel-constants",level:2},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Basic Mix Management",id:"basic-mix-management",level:3},{value:"Audio Filtering",id:"audio-filtering",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mixer",children:"Mixer"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The Mixer system provides comprehensive audio management capabilities for Don't Starve Together. It consists of two main classes: ",(0,r.jsx)(n.code,{children:"Mix"})," for individual audio configurations and ",(0,r.jsx)(n.code,{children:"Mixer"})," for managing multiple mixes with priority-based stacking and audio filtering."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local Mixer = require("mixer")\n\n-- Create a new mixer instance\nlocal myMixer = Mixer()\n\n-- Add a new mix configuration\nmyMixer:AddNewMix("gameplay", 2.0, 1, {\n    ["set_music/soundtrack"] = 0.8,\n    ["set_sfx/sfx"] = 1.0,\n    ["set_ambience/ambience"] = 0.6\n})\n\n-- Activate the mix\nmyMixer:PushMix("gameplay")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,r.jsx)(n.h3,{id:"mix",children:"Mix"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Mix"})," class represents a single audio configuration with volume levels for different audio channels."]}),"\n",(0,r.jsx)(n.h4,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mix(name)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string, optional): Name identifier for the mix"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local mix = Mix("my_mix")\n'})}),"\n",(0,r.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): The mix identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"levels"})," (table): Channel volume levels mapping"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"priority"})," (number): Mix priority (default: 0)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fadeintime"})," (number): Fade-in duration in seconds (default: 1)"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(n.h5,{id:"mix-apply",children:["mix",":Apply","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nApplies the mix's volume levels to the audio system immediately."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"mix:Apply()\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"mix-setlevel",children:["mix",":SetLevel","(channel, level)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nSets the volume level for a specific audio channel."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"channel"})," (string): Audio channel identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"level"})," (number): Volume level (0.0 to 1.0)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mix:SetLevel("set_music/soundtrack", 0.5)\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mix-getlevel",children:["mix",":GetLevel","(channel)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nGets the volume level for a specific audio channel."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"channel"})," (string): Audio channel identifier"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Volume level for the channel (0 if not set)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local musicLevel = mix:GetLevel("set_music/soundtrack")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"mixer-1",children:"Mixer"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Mixer"})," class manages multiple audio mixes with priority-based stacking and audio filtering capabilities."]}),"\n",(0,r.jsx)(n.h4,{id:"constructor-1",children:"Constructor"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mixer()"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates a new mixer instance with empty mix collections and filter arrays."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local mixer = Mixer()\n"})}),"\n",(0,r.jsx)(n.h4,{id:"properties-1",children:"Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mixes"})," (table): Collection of registered mix configurations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"stack"})," (table): Priority-ordered stack of active mixes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lowpassfilters"})," (table): Low-pass filter configurations by channel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"highpassfilters"})," (table): High-pass filter configurations by channel"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mix-management-methods",children:"Mix Management Methods"}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-addnewmix",children:["mixer",":AddNewMix","(name, fadetime, priority, levels)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates and registers a new mix configuration."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string): Unique identifier for the mix"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fadetime"})," (number, optional): Fade-in duration in seconds (default: 1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"priority"})," (number, optional): Mix priority for stacking (default: 0)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"levels"})," (table): Channel volume level mappings"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(Mix): The created mix object"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local mix = mixer:AddNewMix("combat", 1.5, 2, {\n    ["set_music/soundtrack"] = 0.3,\n    ["set_sfx/sfx"] = 1.0\n})\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-pushmix",children:["mixer",":PushMix","(mixname)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nActivates a mix by adding it to the priority stack. Higher priority mixes take precedence."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mixname"})," (string): Name of the mix to activate"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:PushMix("combat")\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-popmix",children:["mixer",":PopMix","(mixname)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRemoves a specific mix from the active stack and triggers fade transition if needed."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mixname"})," (string): Name of the mix to remove"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:PopMix("combat")\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-deletemix",children:["mixer",":DeleteMix","(mixname)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nImmediately removes a mix from the stack without fade transition."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mixname"})," (string): Name of the mix to delete"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:DeleteMix("combat")\n'})}),"\n",(0,r.jsx)(n.h4,{id:"audio-level-methods",children:"Audio Level Methods"}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-getlevel",children:["mixer",":GetLevel","(channel)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nGets the current volume level for a specific audio channel."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"channel"})," (string): Audio channel identifier"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(number): Current volume level"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local currentLevel = mixer:GetLevel("set_music/soundtrack")\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-setlevel",children:["mixer",":SetLevel","(channel, level)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nDirectly sets the volume level for an audio channel."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"channel"})," (string): Audio channel identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"level"})," (number): Volume level to set"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:SetLevel("set_music/soundtrack", 0.8)\n'})}),"\n",(0,r.jsx)(n.h4,{id:"filter-methods",children:"Filter Methods"}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-setlowpassfilter",children:["mixer",":SetLowPassFilter","(category, cutoff, timetotake)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nApplies a low-pass filter to an audio category with gradual transition."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"category"})," (string): Audio category to filter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cutoff"})," (number): Filter cutoff frequency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timetotake"})," (number, optional): Transition duration in seconds (default: 3)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:SetLowPassFilter("set_music/soundtrack", 1000, 2.0)\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-sethighpassfilter",children:["mixer",":SetHighPassFilter","(category, cutoff, timetotake)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nApplies a high-pass filter to an audio category with gradual transition."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"category"})," (string): Audio category to filter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cutoff"})," (number): Filter cutoff frequency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timetotake"})," (number, optional): Transition duration in seconds (default: 3)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:SetHighPassFilter("set_sfx/sfx", 500, 1.5)\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-clearlowpassfilter",children:["mixer",":ClearLowPassFilter","(category, timetotake)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRemoves a low-pass filter from an audio category."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"category"})," (string): Audio category to clear"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timetotake"})," (number, optional): Transition duration in seconds"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:ClearLowPassFilter("set_music/soundtrack", 2.0)\n'})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-clearhighpassfilter",children:["mixer",":ClearHighPassFilter","(category, timetotake)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nRemoves a high-pass filter from an audio category."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"category"})," (string): Audio category to clear"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timetotake"})," (number, optional): Transition duration in seconds"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'mixer:ClearHighPassFilter("set_sfx/sfx", 1.5)\n'})}),"\n",(0,r.jsx)(n.h4,{id:"system-methods",children:"System Methods"}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-update",children:["mixer",":Update","(dt)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nUpdates the mixer state including fade transitions and filter animations. Should be called every frame."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dt"})," (number): Delta time since last update"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- In a game loop\nmixer:Update(dt)\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-createsnapshot",children:["mixer",":CreateSnapshot","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nCreates a snapshot of current audio levels for fade transition calculations."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"(Mix): Snapshot mix containing current levels"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local snapshot = mixer:CreateSnapshot()\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"mixer-blend",children:["mixer",":Blend","()"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," ",(0,r.jsx)(n.code,{children:"stable"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description:"}),"\nInitiates a fade transition between the current audio state and the top mix in the stack."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"mixer:Blend()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"audio-channel-constants",children:"Audio Channel Constants"}),"\n",(0,r.jsx)(n.p,{children:"Common audio channel identifiers used in DST:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Channel"}),(0,r.jsx)(n.th,{children:"Purpose"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_ambience/ambience"'})}),(0,r.jsx)(n.td,{children:"Ambient environmental sounds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_ambience/cloud"'})}),(0,r.jsx)(n.td,{children:"Weather and atmospheric effects"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_music/soundtrack"'})}),(0,r.jsx)(n.td,{children:"Background music"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/voice"'})}),(0,r.jsx)(n.td,{children:"Character voice and speech"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/movement"'})}),(0,r.jsx)(n.td,{children:"Movement and footstep sounds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/creature"'})}),(0,r.jsx)(n.td,{children:"Creature and mob sounds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/player"'})}),(0,r.jsx)(n.td,{children:"Player action sounds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/HUD"'})}),(0,r.jsx)(n.td,{children:"User interface sounds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/sfx"'})}),(0,r.jsx)(n.td,{children:"General sound effects"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"set_sfx/everything_else_muted"'})}),(0,r.jsx)(n.td,{children:"Special effects channel"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"basic-mix-management",children:"Basic Mix Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Setup a gameplay mix\nmixer:AddNewMix("normal", 2, 1, {\n    ["set_ambience/ambience"] = 0.8,\n    ["set_music/soundtrack"] = 1.0,\n    ["set_sfx/sfx"] = 1.0\n})\n\n-- Activate during normal gameplay\nmixer:PushMix("normal")\n\n-- Switch to combat with higher priority\nmixer:AddNewMix("combat", 1, 3, {\n    ["set_ambience/ambience"] = 0.3,\n    ["set_music/soundtrack"] = 0.6,\n    ["set_sfx/sfx"] = 1.0\n})\nmixer:PushMix("combat")\n\n-- Return to normal when combat ends\nmixer:PopMix("combat")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"audio-filtering",children:"Audio Filtering"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Apply underwater effect\nmixer:SetLowPassFilter("set_sfx/sfx", 800, 1.0)\nmixer:SetLowPassFilter("set_music/soundtrack", 400, 1.0)\n\n-- Clear filters when surfacing\nmixer:ClearLowPassFilter("set_sfx/sfx", 1.0)\nmixer:ClearLowPassFilter("set_music/soundtrack", 1.0)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./mixes.md",children:"Mixes"}),": Predefined mix configurations for different game states"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./easing.md",children:"Easing"}),": Animation and interpolation functions used in transitions"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);