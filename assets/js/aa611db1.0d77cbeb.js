"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[2546],{5492:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"api-vanilla/node-types/brain","title":"Brain","description":"Brains are specialized scripts that control the AI and decision-making behavior of entities. They define how entities respond to their environment and other entities.","source":"@site/docs/api-vanilla/node-types/brain.md","sourceDirName":"api-vanilla/node-types","slug":"/api-vanilla/node-types/brain","permalink":"/dst-api-webdocs/docs/api-vanilla/node-types/brain","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"brain","title":"Brain","sidebar_position":5,"last_updated":"2023-07-06T00:00:00.000Z"}}');var r=i(4848),t=i(8453);const s={id:"brain",title:"Brain",sidebar_position:5,last_updated:new Date("2023-07-06T00:00:00.000Z")},a="Brain",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Common Brain Structure",id:"common-brain-structure",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Common Behaviors",id:"common-behaviors",level:2},{value:"Example",id:"example",level:2},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"brain",children:"Brain"})}),"\n",(0,r.jsx)(n.p,{children:"Brains are specialized scripts that control the AI and decision-making behavior of entities. They define how entities respond to their environment and other entities."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Brains use behavior trees to create complex AI behaviors by combining simpler behaviors. Each brain consists of a root node that contains different types of behavior nodes such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Priority nodes: Execute behaviors in order of priority"}),"\n",(0,r.jsx)(n.li,{children:"Sequence nodes: Execute behaviors in sequence"}),"\n",(0,r.jsx)(n.li,{children:"Decorator nodes: Modify the behavior of child nodes"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-brain-structure",children:"Common Brain Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local SomeBrain = Class(Brain, function(self, inst)\n    Brain._ctor(self, inst)\nend)\n\nfunction SomeBrain:OnStart()\n    local root = PriorityNode(\n    {\n        -- Behaviors in order of priority\n        ChaseAndAttack(self.inst, MAX_CHASE_TIME),\n        Wander(self.inst),\n    }, 0)\n    \n    self.bt = BT(self.inst, root)\nend\n\nreturn SomeBrain\n"})}),"\n",(0,r.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"OnStart()"}),": Initializes the behavior tree"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"OnStop()"}),": Cleans up when the brain stops"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UpdateTarget()"}),": Updates target information"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-behaviors",children:"Common Behaviors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ChaseAndAttack"}),": Chase and attack targets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RunAway"}),": Run from threats"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Wander"}),": Wander around aimlessly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Follow"}),": Follow a target"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"FindFood"}),": Search for food"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Panic"}),": Flee from danger"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The Wilson brain is a simple example that controls player-owned characters when they're under AI control:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'function WilsonBrain:OnStart()\n    local root = PriorityNode(\n    {\n        WhileNode(function() \n            return self.inst.components.playercontroller ~= nil \n                and self.inst.components.playercontroller:IsControlPressed(CONTROL_PRIMARY) \n            end, \n            "Hold LMB", \n            ChaseAndAttack(self.inst, MAX_CHASE_TIME)\n        ),\n        ChaseAndAttack(self.inst, MAX_CHASE_TIME, nil, 1),\n    }, 0)\n\n    self.bt = BT(self.inst, root)\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Combat component"}),"\n",(0,r.jsx)(n.li,{children:"Locomotor component"}),"\n",(0,r.jsx)(n.li,{children:"Follower component"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(6540);const r={},t=o.createContext(r);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);