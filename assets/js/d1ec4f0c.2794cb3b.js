"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[12931],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},35492:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"game-scripts/core-systems/fundamentals/core/entityscript","title":"EntityScript","description":"Core class representing all game entities and their behavior management system","source":"@site/docs/game-scripts/core-systems/fundamentals/core/entityscript.md","sourceDirName":"game-scripts/core-systems/fundamentals/core","slug":"/game-scripts/core-systems/fundamentals/core/entityscript","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscript","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"entityscript","title":"EntityScript","description":"Core class representing all game entities and their behavior management system","sidebar_position":3,"last_updated":"2025-01-27T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Entity Replica System","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityreplica"},"next":{"title":"EntityScript Proxy System","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/entityscriptproxy"}}');var t=s(74848),r=s(28453);const l={id:"entityscript",title:"EntityScript",description:"Core class representing all game entities and their behavior management system",sidebar_position:3,last_updated:new Date("2025-01-27T00:00:00.000Z"),build_version:676042,change_status:"stable"},d="EntityScript",c={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Class Constructor",id:"class-constructor",level:2},{value:"EntityScript(entity)",id:"constructor",level:3},{value:"Core Properties",id:"core-properties",level:2},{value:"inst.GUID",id:"instguid",level:3},{value:"inst.spawntime",id:"instspawntime",level:3},{value:"inst.persists",id:"instpersists",level:3},{value:"inst.inlimbo",id:"instinlimbo",level:3},{value:"inst.prefab",id:"instprefab",level:3},{value:"inst.components",id:"instcomponents",level:3},{value:"Component Management",id:"component-management",level:2},{value:"inst(name)",id:"add-component",level:3},{value:"inst(name)",id:"remove-component",level:3},{value:"Event System",id:"event-system",level:2},{value:"inst(event, fn, source)",id:"listen-for-event",level:3},{value:"inst(event, fn, source)",id:"remove-event-callback",level:3},{value:"inst(event, data)",id:"push-event",level:3},{value:"Task Management",id:"task-management",level:2},{value:"inst(time, fn, ...)",id:"do-task-in-time",level:3},{value:"inst(time, fn, initialdelay, ...)",id:"do-periodic-task",level:3},{value:"inst()",id:"cancel-all-pending-tasks",level:3},{value:"State Management",id:"state-management",level:2},{value:"inst(name)",id:"set-state-graph",level:3},{value:"inst(brainfn)",id:"set-brain",level:3},{value:"Position and Physics",id:"position-and-physics",level:2},{value:"inst()",id:"get-position",level:3},{value:"inst(inst)",id:"get-distance-sq-to-inst",level:3},{value:"inst(otherinst, dist)",id:"is-near",level:3},{value:"inst(x, y, z)",id:"face-point",level:3},{value:"Limbo Management",id:"limbo-management",level:2},{value:"inst()",id:"remove-from-scene",level:3},{value:"inst()",id:"return-to-scene",level:3},{value:"inst()",id:"is-in-limbo",level:3},{value:"Tag System",id:"tag-system",level:2},{value:"inst(tag)",id:"add-tag",level:3},{value:"inst(tag)",id:"remove-tag",level:3},{value:"inst(tag)",id:"has-tag",level:3},{value:"inst(...)",id:"has-tags",level:3},{value:"Display Names",id:"display-names",level:2},{value:"inst()",id:"get-display-name",level:3},{value:"inst()",id:"get-basic-display-name",level:3},{value:"Persistence",id:"persistence",level:2},{value:"inst()",id:"get-persist-data",level:3},{value:"inst(data, newents)",id:"set-persist-data",level:3},{value:"Lifecycle Management",id:"lifecycle-management",level:2},{value:"inst()",id:"remove",level:3},{value:"inst()",id:"is-valid",level:3},{value:"Debug Information",id:"debug-information",level:2},{value:"inst()",id:"get-debug-string",level:3},{value:"inst()",id:"get-time-alive",level:3},{value:"Events",id:"events",level:2},{value:"&quot;onremove&quot;",id:"onremove",level:3},{value:"&quot;enterlimbo&quot;",id:"enterlimbo",level:3},{value:"&quot;exitlimbo&quot;",id:"exitlimbo",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Component-Based Entity Setup",id:"component-based-entity-setup",level:3},{value:"Event-Driven Behavior",id:"event-driven-behavior",level:3},{value:"Position-Based Logic",id:"position-based-logic",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"entityscript",children:"EntityScript"})}),"\n",(0,t.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Build Version"}),(0,t.jsx)(n.th,{children:"Change Date"}),(0,t.jsx)(n.th,{children:"Change Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"676042"}),(0,t.jsx)(n.td,{children:"2025-01-27"}),(0,t.jsx)(n.td,{children:"stable"}),(0,t.jsx)(n.td,{children:"Current version"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"EntityScript"})," class is the core foundation of all game entities in Don't Starve Together. It wraps the low-level ",(0,t.jsx)(n.code,{children:"Entity"})," object and provides high-level functionality for managing components, events, state graphs, AI brains, networking, and persistence. Every prefab instance in the game is an EntityScript that handles the entity's lifecycle from creation to destruction."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Creating a new entity with EntityScript functionality\nlocal inst = CreateEntity()\nlocal entityscript = EntityScript(inst)\n\n-- Adding components\ninst:AddComponent("health")\ninst:AddComponent("inventory")\n\n-- Setting up events\ninst:ListenForEvent("death", function() print("Entity died!") end)\n\n-- Managing state\ninst:SetStateGraph("SGplayer")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"class-constructor",children:"Class Constructor"}),"\n",(0,t.jsx)(n.h3,{id:"constructor",children:"EntityScript(entity)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCreates a new EntityScript instance that wraps the provided Entity object and initializes all core systems."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"entity"})," (Entity): The low-level Entity object to wrap"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Properties Initialized:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"entity"}),": Reference to the wrapped Entity object"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"components"}),": Table of attached components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GUID"}),": Unique identifier for this entity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"spawntime"}),": Time when entity was created"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"persists"}),": Whether entity should be saved/loaded"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inlimbo"}),": Whether entity is currently in limbo (inactive)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"core-properties",children:"Core Properties"}),"\n",(0,t.jsx)(n.h3,{id:"instguid",children:"inst.GUID"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"number"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Unique identifier for this entity instance across the game world."]}),"\n",(0,t.jsx)(n.h3,{id:"instspawntime",children:"inst.spawntime"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"number"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Game time when this entity was created, used for calculating age."]}),"\n",(0,t.jsx)(n.h3,{id:"instpersists",children:"inst.persists"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Whether this entity should be saved to disk and persist between game sessions."]}),"\n",(0,t.jsx)(n.h3,{id:"instinlimbo",children:"inst.inlimbo"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Whether this entity is currently in limbo (inactive/paused state)."]}),"\n",(0,t.jsx)(n.h3,{id:"instprefab",children:"inst.prefab"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," The prefab name this entity was spawned from."]}),"\n",(0,t.jsx)(n.h3,{id:"instcomponents",children:"inst.components"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"table"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," Table containing all components attached to this entity, indexed by component name."]}),"\n",(0,t.jsx)(n.h2,{id:"component-management",children:"Component Management"}),"\n",(0,t.jsxs)(n.h3,{id:"add-component",children:["inst",":AddComponent","(name)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nAdds a component to the entity. Components provide specific functionality like health, inventory, or movement."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Name of the component to add"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Component): The newly added component instance"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local health_component = inst:AddComponent("health")\nhealth_component:SetMaxHealth(100)\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version History:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Available since initial implementation"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"remove-component",children:["inst",":RemoveComponent","(name)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRemoves a component from the entity and cleans up all associated functionality."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Name of the component to remove"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:RemoveComponent("health")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"event-system",children:"Event System"}),"\n",(0,t.jsxs)(n.h3,{id:"listen-for-event",children:["inst",":ListenForEvent","(event, fn, source)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRegisters a function to be called when a specific event is triggered on this or another entity."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"event"})," (string): Name of the event to listen for"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): Function to call when event occurs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"source"})," (EntityScript, optional): Entity to listen to (defaults to self)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:ListenForEvent("death", function(inst, data)\n    print("Entity died with data:", data)\nend)\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"remove-event-callback",children:["inst",":RemoveEventCallback","(event, fn, source)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRemoves a previously registered event listener."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"event"})," (string): Name of the event"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): The exact function that was registered"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"source"})," (EntityScript, optional): Source entity (defaults to self)"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"push-event",children:["inst",":PushEvent","(event, data)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTriggers an event on this entity, calling all registered listeners."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"event"})," (string): Name of the event to trigger"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," (any, optional): Data to pass to event handlers"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:PushEvent("attacked", {attacker = player, damage = 25})\n'})}),"\n",(0,t.jsx)(n.h2,{id:"task-management",children:"Task Management"}),"\n",(0,t.jsxs)(n.h3,{id:"do-task-in-time",children:["inst",":DoTaskInTime","(time, fn, ...)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nSchedules a function to be executed after a specified delay."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"time"})," (number): Delay in seconds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): Function to execute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."}),": Additional arguments to pass to the function"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Task): Task object that can be cancelled"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local task = inst:DoTaskInTime(5, function()\n    print("This runs after 5 seconds")\nend)\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"do-periodic-task",children:["inst",":DoPeriodicTask","(time, fn, initialdelay, ...)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nSchedules a function to be executed repeatedly at regular intervals."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"time"})," (number): Interval between executions in seconds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"})," (function): Function to execute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"initialdelay"})," (number, optional): Initial delay before first execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."}),": Additional arguments to pass to the function"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Task): Task object that can be cancelled"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local periodic = inst:DoPeriodicTask(1, function()\n    print("This runs every second")\nend, 2) -- Start after 2 seconds\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"cancel-all-pending-tasks",children:["inst",":CancelAllPendingTasks","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCancels all scheduled tasks for this entity."]}),"\n",(0,t.jsx)(n.h2,{id:"state-management",children:"State Management"}),"\n",(0,t.jsxs)(n.h3,{id:"set-state-graph",children:["inst",":SetStateGraph","(name)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nAssigns a state graph to control this entity's animation and behavior states."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (string): Name of the state graph file"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(StateGraphInstance): The created state graph instance"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:SetStateGraph("SGplayer")\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"set-brain",children:["inst",":SetBrain","(brainfn)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nAssigns an AI brain function to control this entity's autonomous behavior."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"brainfn"})," (function): Function that returns a brain instance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:SetBrain(require("brains/pigbrain"))\n'})}),"\n",(0,t.jsx)(n.h2,{id:"position-and-physics",children:"Position and Physics"}),"\n",(0,t.jsxs)(n.h3,{id:"get-position",children:["inst",":GetPosition","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets the current world position of the entity."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(Point): Position as a Point object"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local pos = inst:GetPosition()\nprint("Entity is at:", pos.x, pos.z)\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"get-distance-sq-to-inst",children:["inst",":GetDistanceSqToInst","(inst)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCalculates the squared distance to another entity (more efficient than actual distance)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inst"})," (EntityScript): Target entity"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(number): Squared distance"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local dist_sq = inst:GetDistanceSqToInst(target)\nif dist_sq < 9 then -- Within 3 units\n    print("Target is close!")\nend\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"is-near",children:["inst",":IsNear","(otherinst, dist)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if this entity is within a certain distance of another entity."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"otherinst"})," (EntityScript): Target entity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dist"})," (number): Maximum distance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if within distance"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'if inst:IsNear(player, 5) then\n    print("Player is nearby!")\nend\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"face-point",children:["inst",":FacePoint","(x, y, z)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRotates the entity to face a specific world position."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (number): X coordinate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (number): Y coordinate (optional)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"z"})," (number): Z coordinate"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"inst:FacePoint(player.Transform:GetWorldPosition())\n"})}),"\n",(0,t.jsx)(n.h2,{id:"limbo-management",children:"Limbo Management"}),"\n",(0,t.jsxs)(n.h3,{id:"remove-from-scene",children:["inst",":RemoveFromScene","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRemoves the entity from active simulation, placing it in limbo. The entity becomes inactive but remains in memory."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"inst:RemoveFromScene() -- Entity enters limbo\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"return-to-scene",children:["inst",":ReturnToScene","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nReturns the entity from limbo to active simulation."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"inst:ReturnToScene() -- Entity exits limbo\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"is-in-limbo",children:["inst",":IsInLimbo","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if the entity is currently in limbo."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if in limbo"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"tag-system",children:"Tag System"}),"\n",(0,t.jsxs)(n.h3,{id:"add-tag",children:["inst",":AddTag","(tag)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nAdds a tag to this entity for identification and filtering."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tag"})," (string): Tag to add"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:AddTag("player")\ninst:AddTag("fireimmune")\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"remove-tag",children:["inst",":RemoveTag","(tag)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nRemoves a tag from this entity."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tag"})," (string): Tag to remove"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"has-tag",children:["inst",":HasTag","(tag)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if this entity has a specific tag."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tag"})," (string): Tag to check for"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if entity has the tag"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'if inst:HasTag("player") then\n    print("This is a player!")\nend\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"has-tags",children:["inst",":HasTags","(...)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if this entity has all of the specified tags."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"..."})," (string or table): Tags to check for"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if entity has all tags"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'if inst:HasTags("enemy", "aggressive") then\n    print("This is an aggressive enemy!")\nend\n'})}),"\n",(0,t.jsx)(n.h2,{id:"display-names",children:"Display Names"}),"\n",(0,t.jsxs)(n.h3,{id:"get-display-name",children:["inst",":GetDisplayName","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets the full display name for this entity, including adjectives and status modifiers."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): Complete display name"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local name = inst:GetDisplayName()\n-- Returns something like "Wet Spoiled Berries"\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"get-basic-display-name",children:["inst",":GetBasicDisplayName","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets the basic display name without status modifiers."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): Basic name"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local name = inst:GetBasicDisplayName()\n-- Returns something like "Berries"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"persistence",children:"Persistence"}),"\n",(0,t.jsxs)(n.h3,{id:"get-persist-data",children:["inst",":GetPersistData","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nCollects save data from all components for persistence."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(table): Save data"}),"\n",(0,t.jsx)(n.li,{children:"(table): Entity references"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"set-persist-data",children:["inst",":SetPersistData","(data, newents)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nLoads save data into the entity and its components."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," (table): Save data to load"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"newents"})," (table): Table of newly created entities"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"lifecycle-management",children:"Lifecycle Management"}),"\n",(0,t.jsxs)(n.h3,{id:"remove",children:["inst",":Remove","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nPermanently removes the entity from the game, cleaning up all resources."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"inst:Remove() -- Entity is destroyed\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"is-valid",children:["inst",":IsValid","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nChecks if the entity is still valid and hasn't been removed."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(boolean): True if entity is valid"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"if inst:IsValid() then\n    -- Safe to use inst\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"debug-information",children:"Debug Information"}),"\n",(0,t.jsxs)(n.h3,{id:"get-debug-string",children:["inst",":GetDebugString","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nReturns a detailed debug string with entity information and component states."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(string): Debug information"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"print(inst:GetDebugString())\n-- Outputs detailed entity information\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"get-time-alive",children:["inst",":GetTimeAlive","()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nGets how long this entity has been alive."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(number): Time alive in seconds"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local age = inst:GetTimeAlive()\nprint("Entity has been alive for", age, "seconds")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,t.jsx)(n.h3,{id:"onremove",children:'"onremove"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTriggered when the entity is about to be removed from the game."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'inst:ListenForEvent("onremove", function(inst)\n    print("Entity is being removed!")\nend)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"enterlimbo",children:'"enterlimbo"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTriggered when the entity enters limbo (becomes inactive)."]}),"\n",(0,t.jsx)(n.h3,{id:"exitlimbo",children:'"exitlimbo"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Status:"})," ",(0,t.jsx)(n.code,{children:"stable"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\nTriggered when the entity exits limbo (becomes active again)."]}),"\n",(0,t.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"component-based-entity-setup",children:"Component-Based Entity Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local inst = CreateEntity()\n\n-- Add core components\ninst:AddComponent("health")\ninst:AddComponent("inventory")\ninst:AddComponent("locomotor")\n\n-- Set up behavior\ninst:SetStateGraph("SGplayer")\ninst:SetBrain(require("brains/playerbrain"))\n\n-- Add tags for identification\ninst:AddTag("player")\ninst:AddTag("character")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"event-driven-behavior",children:"Event-Driven Behavior"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Listen for health changes\ninst:ListenForEvent("healthdelta", function(inst, data)\n    if data.newpercent <= 0 then\n        inst:PushEvent("death")\n    end\nend)\n\n-- Schedule periodic actions\ninst:DoPeriodicTask(1, function()\n    -- Check surroundings every second\nend)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"position-based-logic",children:"Position-Based Logic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"-- Find nearby entities\nlocal x, y, z = inst.Transform:GetWorldPosition()\nlocal nearby = TheSim:FindEntities(x, y, z, 10)\n\n-- Face the nearest player\nlocal player = inst:GetNearestPlayer()\nif player then\n    inst:FacePoint(player.Transform:GetWorldPosition())\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/",children:"Components Overview"}),": Individual component functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../stategraphs/index.md",children:"StateGraphs"}),": Animation and state management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./events.md",children:"Events"}),": Event system details"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/fundamentals/core/class",children:"Class"}),": Base class system used by EntityScript"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);