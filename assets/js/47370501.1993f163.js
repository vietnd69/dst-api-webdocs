"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[51478],{28453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>l});var d=s(96540);const i={},o=d.createContext(i);function r(n){const e=d.useContext(o);return d.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),d.createElement(o.Provider,{value:e},n.children)}},35159:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"game-scripts/core-systems/mod-support/core/modindex","title":"Mod Index","description":"Mod registry and management system for tracking installed and enabled mods","source":"@site/docs/game-scripts/core-systems/mod-support/core/modindex.md","sourceDirName":"game-scripts/core-systems/mod-support/core","slug":"/game-scripts/core-systems/mod-support/core/modindex","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modindex","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"modindex","title":"Mod Index","description":"Mod registry and management system for tracking installed and enabled mods","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Mods System","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/mods"},"next":{"title":"Mod Utilities","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modutil"}}');var i=s(74848),o=s(28453);const r={id:"modindex",title:"Mod Index",description:"Mod registry and management system for tracking installed and enabled mods",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="Mod Index",t={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Core Functions",id:"core-functions",level:2},{value:"KnownModIndex(modname)",id:"is-mod-enabled",level:3},{value:"KnownModIndex(modname)",id:"get-mod-info",level:3},{value:"KnownModIndex()",id:"get-mod-names",level:3},{value:"KnownModIndex()",id:"get-server-mod-names",level:3},{value:"KnownModIndex()",id:"get-client-mod-names",level:3},{value:"Configuration Management",id:"configuration-management",level:2},{value:"KnownModIndex(modname, client_config)",id:"load-mod-configuration-options",level:3},{value:"KnownModIndex(modname, client_config)",id:"get-mod-configuration-path",level:3},{value:"KnownModIndex(modname, client_config)",id:"get-mod-configuration-name",level:3},{value:"Mod State Management",id:"mod-state-management",level:2},{value:"KnownModIndex(modname)",id:"enable-mod",level:3},{value:"KnownModIndex(modname)",id:"disable-mod",level:3},{value:"KnownModIndex()",id:"disable-all-mods",level:3},{value:"Startup and Loading",id:"startup-and-loading",level:2},{value:"KnownModIndex(callback)",id:"begin-startup-sequence",level:3},{value:"KnownModIndex(callback)",id:"end-startup-sequence",level:3},{value:"KnownModIndex()",id:"was-load-bad",level:3},{value:"Utility Functions",id:"utility-functions",level:2},{value:"KnownModIndex(modname)",id:"get-mod-fancy-name",level:3},{value:"KnownModIndex(fancyname)",id:"get-mod-actual-name",level:3},{value:"Helper Functions",id:"helper-functions",level:2},{value:"ResolveModname(name)",id:"resolve-modname",level:3},{value:"IsWorkshopMod(name)",id:"is-workshop-mod",level:3},{value:"Data Structures",id:"data-structures",level:2},{value:"Mod Information Structure",id:"mod-information-structure",level:3},{value:"Save Data Structure",id:"save-data-structure",level:3},{value:"Mod Override Processing",id:"mod-override-processing",level:2},{value:"KnownModIndex(overrides)",id:"process-mod-overrides",level:3},{value:"Dependency Management",id:"dependency-management",level:2},{value:"KnownModIndex(modname, include_optional)",id:"get-mod-dependencies",level:3},{value:"KnownModIndex(mod_list)",id:"do-mods-exist-any-version",level:3},{value:"Integration",id:"integration",level:2},{value:"Related Modules",id:"related-modules",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"mod-index",children:"Mod Index"})}),"\n",(0,i.jsx)(e.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Build Version"}),(0,i.jsx)(e.th,{children:"Change Date"}),(0,i.jsx)(e.th,{children:"Change Type"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"676042"}),(0,i.jsx)(e.td,{children:"2025-06-21"}),(0,i.jsx)(e.td,{children:"stable"}),(0,i.jsx)(e.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"ModIndex"})," class (accessed globally as ",(0,i.jsx)(e.code,{children:"KnownModIndex"}),") provides the central registry for all mod information, configuration, and state management. It handles mod discovery, loading, configuration management, and dependency resolution."]}),"\n",(0,i.jsx)(e.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'-- Check if a mod is enabled\nif KnownModIndex:IsModEnabled("workshop-12345") then\n    print("Mod is enabled")\nend\n\n-- Get mod information\nlocal modinfo = KnownModIndex:GetModInfo("mymod")\nprint(modinfo.name, modinfo.version)\n\n-- Load mod configuration\nlocal config = KnownModIndex:LoadModConfigurationOptions("mymod", false)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,i.jsxs)(e.h3,{id:"is-mod-enabled",children:["KnownModIndex",":IsModEnabled","(modname)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nChecks whether a mod is currently enabled and available for use."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(boolean): True if the mod is enabled, false otherwise"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'if KnownModIndex:IsModEnabled("workshop-12345") then\n    -- Mod-specific code here\nend\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-info",children:["KnownModIndex",":GetModInfo","(modname)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nRetrieves the complete information table for a specified mod, including metadata, version information, and configuration options."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(table): Mod information table, or nil if mod not found"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'local modinfo = KnownModIndex:GetModInfo("mymod")\nif modinfo then\n    print("Mod Name:", modinfo.name)\n    print("Version:", modinfo.version)\n    print("API Version:", modinfo.api_version)\nend\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-names",children:["KnownModIndex",":GetModNames","()"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns a list of all known mod names in the index."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(table): Array of mod name strings"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'local all_mods = KnownModIndex:GetModNames()\nfor i, modname in ipairs(all_mods) do\n    print("Known mod:", modname)\nend\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"get-server-mod-names",children:["KnownModIndex",":GetServerModNames","()"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns a list of all server-side mod names (excludes client-only mods)."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(table): Array of server mod name strings"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'local server_mods = KnownModIndex:GetServerModNames()\nfor i, modname in ipairs(server_mods) do\n    print("Server mod:", modname)\nend\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"get-client-mod-names",children:["KnownModIndex",":GetClientModNames","()"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns a list of all client-only mod names."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(table): Array of client mod name strings"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'local client_mods = KnownModIndex:GetClientModNames()\nfor i, modname in ipairs(client_mods) do\n    print("Client mod:", modname)\nend\n'})}),"\n",(0,i.jsx)(e.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,i.jsxs)(e.h3,{id:"load-mod-configuration-options",children:["KnownModIndex",":LoadModConfigurationOptions","(modname, client_config)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nLoads the configuration options for a specified mod, returning either server or client configuration based on the parameters."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"client_config"})," (boolean): Whether to load client configuration (true) or server configuration (false)"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(table): Configuration options table, or nil if not found"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'-- Load server configuration\nlocal server_config = KnownModIndex:LoadModConfigurationOptions("mymod", false)\n\n-- Load client configuration  \nlocal client_config = KnownModIndex:LoadModConfigurationOptions("mymod", true)\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-configuration-path",children:["KnownModIndex",":GetModConfigurationPath","(modname, client_config)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns the file path for a mod's configuration data."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"client_config"})," (boolean): Whether to get client config path"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(string): Configuration file path"}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-configuration-name",children:["KnownModIndex",":GetModConfigurationName","(modname, client_config)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns the configuration file name for a mod."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"client_config"})," (boolean): Whether to get client config name"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(string): Configuration file name"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"mod-state-management",children:"Mod State Management"}),"\n",(0,i.jsxs)(e.h3,{id:"enable-mod",children:["KnownModIndex",":EnableMod","(modname)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nEnables a mod in the index."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"disable-mod",children:["KnownModIndex",":DisableMod","(modname)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nDisables a mod in the index."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"disable-all-mods",children:["KnownModIndex",":DisableAllMods","()"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nDisables all mods in the index."]}),"\n",(0,i.jsx)(e.h2,{id:"startup-and-loading",children:"Startup and Loading"}),"\n",(0,i.jsxs)(e.h3,{id:"begin-startup-sequence",children:["KnownModIndex",":BeginStartupSequence","(callback)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nBegins the mod loading startup sequence, handling crash detection and mod state initialization."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"callback"})," (function): Function to call when startup sequence is ready"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"end-startup-sequence",children:["KnownModIndex",":EndStartupSequence","(callback)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nCompletes the mod loading startup sequence."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"callback"})," (function): Function to call when startup sequence is complete"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"was-load-bad",children:["KnownModIndex",":WasLoadBad","()"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nChecks if the last mod loading attempt resulted in a crash or failure."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(boolean): True if the last load was bad, false otherwise"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"utility-functions",children:"Utility Functions"}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-fancy-name",children:["KnownModIndex",":GetModFancyName","(modname)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns the display name for a mod (from modinfo.name or falls back to modname)."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(string): Display name for the mod"}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-actual-name",children:["KnownModIndex",":GetModActualName","(fancyname)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nConverts a display name back to the actual mod identifier."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"fancyname"})," (string): The display name"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(string): Actual mod identifier"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,i.jsx)(e.h3,{id:"resolve-modname",children:"ResolveModname(name)"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nResolves a mod name to its canonical form, handling both fancy names and actual mod identifiers."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"name"})," (string): The mod name to resolve"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(string): Resolved mod name"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"is-workshop-mod",children:"IsWorkshopMod(name)"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nDetermines if a mod is from the Steam Workshop based on its naming pattern."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"name"})," (string): The mod name to check"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:'(boolean): True if it\'s a workshop mod (starts with "workshop-"), false otherwise'}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'if IsWorkshopMod("workshop-12345") then\n    print("This is a Steam Workshop mod")\nend\n'})}),"\n",(0,i.jsx)(e.h2,{id:"data-structures",children:"Data Structures"}),"\n",(0,i.jsx)(e.h3,{id:"mod-information-structure",children:"Mod Information Structure"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:'modinfo = {\n    name = "Mod Display Name",\n    version = "1.0.0",\n    api_version = 10,\n    author = "Author Name",\n    description = "Mod description",\n    client_only_mod = false,\n    all_clients_require_mod = true,\n    dependencies = {...},\n    -- Additional mod metadata\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"save-data-structure",children:"Save Data Structure"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"savedata = {\n    known_mods = {\n        [modname] = {\n            enabled = true,\n            favorite = false,\n            temp_enabled = false,\n            temp_disabled = false,\n            disabled_bad = false,\n            disabled_incompatible_with_mode = false,\n            modinfo = {...}\n        }\n    },\n    known_api_version = 10,\n    disable_special_event_warning = false\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"mod-override-processing",children:"Mod Override Processing"}),"\n",(0,i.jsxs)(e.h3,{id:"process-mod-overrides",children:["KnownModIndex",":ProcessModOverrides","(overrides)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nProcesses mod override data from server, enabling/disabling mods based on server configuration."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"overrides"})," (table): Mod override configuration from server"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"dependency-management",children:"Dependency Management"}),"\n",(0,i.jsxs)(e.h3,{id:"get-mod-dependencies",children:["KnownModIndex",":GetModDependencies","(modname, include_optional)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nReturns the dependency list for a specified mod."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"modname"})," (string): The mod identifier"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"include_optional"})," (boolean): Whether to include optional dependencies"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(table): Array of dependency mod names"}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"do-mods-exist-any-version",children:["KnownModIndex",":DoModsExistAnyVersion","(mod_list)"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Status:"})," ",(0,i.jsx)(e.code,{children:"stable"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description:"}),"\nChecks if all mods in a list exist in any version."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"mod_list"})," (table): Array of mod names to check"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(boolean): True if all mods exist, false otherwise"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"integration",children:"Integration"}),"\n",(0,i.jsx)(e.p,{children:"The ModIndex system integrates with:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Mod Loading"}),": Core mod discovery and loading system"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Configuration"}),": Mod settings and options management"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Networking"}),": Server mod synchronization"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"UI"}),": Mod management screens and interfaces"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/mods",children:"Mods"}),": Core mod loading and management system"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modutil",children:"Mod Utilities"}),": Mod development utilities and helpers"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/mod-support/core/modcompatability",children:"Mod Compatibility"}),": Version upgrade and compatibility handling"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}}}]);