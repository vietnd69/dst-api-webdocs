"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[55096],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}},32501:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"game-scripts/core-systems/game-mechanics/crafting/recipes","title":"Recipes System","description":"Complete recipe definitions and implementation system for Don\'t Starve Together crafting","source":"@site/docs/game-scripts/core-systems/game-mechanics/crafting/recipes.md","sourceDirName":"game-scripts/core-systems/game-mechanics/crafting","slug":"/game-scripts/core-systems/game-mechanics/crafting/recipes","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"recipes","title":"Recipes System","description":"Complete recipe definitions and implementation system for Don\'t Starve Together crafting","sidebar_position":2,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"}}');var r=i(74848),t=i(28453);const c={id:"recipes",title:"Recipes System",description:"Complete recipe definitions and implementation system for Don't Starve Together crafting",sidebar_position:2,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},l="Recipes System",d={},a=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Overview",id:"overview-1",level:2},{value:"Recipe Class",id:"recipe-class",level:2},{value:"Creating a Recipe",id:"creating-a-recipe",level:3},{value:"Recipe Properties",id:"recipe-properties",level:3},{value:"Ingredient Class",id:"ingredient-class",level:2},{value:"Creating an Ingredient",id:"creating-an-ingredient",level:3},{value:"Ingredient Types",id:"ingredient-types",level:3},{value:"Tech Tree",id:"tech-tree",level:2},{value:"Available Tech Trees",id:"available-tech-trees",level:3},{value:"Tech Levels",id:"tech-levels",level:3},{value:"Tech Bonuses",id:"tech-bonuses",level:3},{value:"Prototypers",id:"prototypers",level:2},{value:"Character-Specific Recipes",id:"character-specific-recipes",level:2},{value:"Skill Tree Recipes",id:"skill-tree-recipes",level:2},{value:"Recipe Placement",id:"recipe-placement",level:2},{value:"Custom Recipe Testing",id:"custom-recipe-testing",level:2},{value:"Recipe Overrides",id:"recipe-overrides",level:2},{value:"Adding Custom Recipes in Mods",id:"adding-custom-recipes-in-mods",level:2},{value:"Special Recipe Properties",id:"special-recipe-properties",level:2},{value:"Limited Amount Recipes",id:"limited-amount-recipes",level:3},{value:"Custom Action String",id:"custom-action-string",level:3},{value:"Manufacturing",id:"manufacturing",level:3},{value:"Recipe Filters",id:"recipe-filters",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Mod Compatibility",id:"mod-compatibility",level:3},{value:"Build Version Compatibility",id:"build-version-compatibility",level:3},{value:"Related Modules",id:"related-modules",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"recipes-system",children:"Recipes System"})}),"\n",(0,r.jsx)(n.h2,{id:"version-history",children:"Version History"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Build Version"}),(0,r.jsx)(n.th,{children:"Change Date"}),(0,r.jsx)(n.th,{children:"Change Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"676042"}),(0,r.jsx)(n.td,{children:"2025-06-21"}),(0,r.jsx)(n.td,{children:"stable"}),(0,r.jsx)(n.td,{children:"Current version - comprehensive recipe system"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Recipes system in Don't Starve Together defines how items can be crafted in the game. It provides a framework for specifying ingredients, tech requirements, builder restrictions, and other properties that determine how and when players can craft items."}),"\n",(0,r.jsx)(n.h2,{id:"overview-1",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The recipe system consists of several key components:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recipe Class"}),": Defines the properties of a craftable item"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ingredient Class"}),": Defines the components needed to craft an item"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tech Tree"}),": Determines what technology level is required to craft an item"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Builder Tags"}),": Restricts recipes to specific characters or skill sets"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The main files that define the recipe system are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recipe.lua"}),": Contains the Recipe and Ingredient classes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recipes.lua"}),": Contains all the base game recipes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"techtree.lua"}),": Defines the technology tree structure"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"recipe-class",children:"Recipe Class"}),"\n",(0,r.jsx)(n.p,{children:"The Recipe class is the core of the crafting system. Each craftable item in the game is defined by a Recipe instance."}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-recipe",children:"Creating a Recipe"}),"\n",(0,r.jsxs)(n.p,{children:["Recipes are created using the ",(0,r.jsx)(n.code,{children:"Recipe2"})," function:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"Recipe2(\n    name,               -- String: The name of the recipe/item\n    ingredients,        -- Table: List of Ingredient objects\n    tech_level,         -- Table/Number: Tech level required\n    recipe_options      -- Table: Additional recipe options\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2(\n    "axe",              -- Recipe name\n    {                   -- Ingredients\n        Ingredient("twigs", 1),\n        Ingredient("flint", 1)\n    },\n    TECH.NONE,          -- Tech level\n    {                   -- Additional options\n        numtogive = 1,\n        builder_tag = "woodcutter"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"recipe-properties",children:"Recipe Properties"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"Internal name of the recipe"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"product"})}),(0,r.jsx)(n.td,{children:"Prefab name of the resulting item (defaults to name)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ingredients"})}),(0,r.jsx)(n.td,{children:"Regular ingredients required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"character_ingredients"})}),(0,r.jsx)(n.td,{children:"Character-specific ingredients (health, sanity, etc.)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tech_ingredients"})}),(0,r.jsx)(n.td,{children:"Tech-specific ingredients"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"level"})}),(0,r.jsx)(n.td,{children:"Tech level required to craft the item"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"builder_tag"})}),(0,r.jsx)(n.td,{children:"Character tag required to craft the item"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"builder_skill"})}),(0,r.jsx)(n.td,{children:"Skill required to craft the item (for skill trees)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"numtogive"})}),(0,r.jsx)(n.td,{children:"Number of items produced per craft"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"nounlock"})}),(0,r.jsx)(n.td,{children:"If true, recipe won't be unlocked in crafting menu"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"placer"})}),(0,r.jsx)(n.td,{children:"Placer prefab for buildable structures"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"min_spacing"})}),(0,r.jsx)(n.td,{children:"Minimum spacing between placed structures"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"atlas"})}),(0,r.jsx)(n.td,{children:"Atlas containing the recipe's image"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"image"})}),(0,r.jsx)(n.td,{children:"Image to show in the crafting menu"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"testfn"})}),(0,r.jsx)(n.td,{children:"Function to test if placement is valid"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"canbuild"})}),(0,r.jsx)(n.td,{children:"Function to test if recipe can be built"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sg_state"})}),(0,r.jsx)(n.td,{children:"State graph state to use when crafting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"no_deconstruction"})}),(0,r.jsx)(n.td,{children:"If true, item cannot be deconstructed"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"ingredient-class",children:"Ingredient Class"}),"\n",(0,r.jsx)(n.p,{children:"The Ingredient class defines what is required to craft an item."}),"\n",(0,r.jsx)(n.h3,{id:"creating-an-ingredient",children:"Creating an Ingredient"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"Ingredient(\n    type,       -- String: The ingredient type (prefab name or CHARACTER_INGREDIENT)\n    amount,     -- Number: Amount required\n    atlas,      -- String: Optional atlas path\n    deconstruct,-- Boolean: Whether this ingredient is returned on deconstruction\n    image       -- String: Optional image override\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Ingredient("twigs", 2)                      -- Regular ingredient\nIngredient(CHARACTER_INGREDIENT.HEALTH, 30) -- Character health cost\nIngredient(TECH_INGREDIENT.SCIENCE, 1)      -- Tech ingredient\n'})}),"\n",(0,r.jsx)(n.h3,{id:"ingredient-types",children:"Ingredient Types"}),"\n",(0,r.jsx)(n.p,{children:"There are three main types of ingredients:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Ingredients"}),': Items from the player\'s inventory (e.g., "twigs", "rocks")']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Character Ingredients"}),": Resources from the character (defined in ",(0,r.jsx)(n.code,{children:"constants.lua"}),")","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'CHARACTER_INGREDIENT = {\n    HEALTH = "health",\n    MAX_HEALTH = "max_health",\n    SANITY = "sanity",\n    MAX_SANITY = "max_sanity",\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tech Ingredients"}),": Special tech resources (defined in ",(0,r.jsx)(n.code,{children:"constants.lua"}),")","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'TECH_INGREDIENT = {\n    SCIENCE = "science",\n    MAGIC = "magic",\n    ANCIENT = "ancient",\n    SHADOW = "shadow",\n    -- etc.\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"tech-tree",children:"Tech Tree"}),"\n",(0,r.jsxs)(n.p,{children:["The tech tree system defines the technology levels required to craft items. Tech levels are defined in ",(0,r.jsx)(n.code,{children:"techtree.lua"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"available-tech-trees",children:"Available Tech Trees"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'AVAILABLE_TECH = {\n    "SCIENCE",\n    "MAGIC",\n    "ANCIENT",\n    "CELESTIAL",\n    "SHADOW",\n    "CARTOGRAPHY",\n    "SEAFARING",\n    "SCULPTING",\n    "ORPHANAGE",\n    -- and many more\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tech-levels",children:"Tech Levels"}),"\n",(0,r.jsxs)(n.p,{children:["Tech levels are defined in ",(0,r.jsx)(n.code,{children:"constants.lua"})," as:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"TECH = {\n    NONE = {},\n    SCIENCE_ONE = { SCIENCE = 1 },\n    SCIENCE_TWO = { SCIENCE = 2 },\n    MAGIC_TWO = { MAGIC = 2 },\n    MAGIC_THREE = { MAGIC = 3 },\n    ANCIENT_TWO = { ANCIENT = 2 },\n    ANCIENT_FOUR = { ANCIENT = 4 },\n    CELESTIAL_ONE = { CELESTIAL = 1 },\n    CELESTIAL_THREE = { CELESTIAL = 3 },\n    -- and many more\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tech-bonuses",children:"Tech Bonuses"}),"\n",(0,r.jsx)(n.p,{children:"Some tech trees can have bonuses applied to them, allowing characters to craft higher-tier items without the corresponding prototyper:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'BONUS_TECH = {\n    "SCIENCE",\n    "MAGIC",\n    "SEAFARING",\n    "ANCIENT",\n    "MASHTURFCRAFTING",\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"prototypers",children:"Prototypers"}),"\n",(0,r.jsxs)(n.p,{children:["Prototypers are structures that provide access to specific tech levels. They are defined in ",(0,r.jsx)(n.code,{children:"recipes.lua"})," as ",(0,r.jsx)(n.code,{children:"PROTOTYPER_DEFS"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'PROTOTYPER_DEFS = {\n    none = {\n        icon_atlas = CRAFTING_ICONS_ATLAS,\n        icon_image = "station_none.tex",\n        is_crafting_station = false\n    },\n    researchlab = {\n        icon_atlas = CRAFTING_ICONS_ATLAS,\n        icon_image = "station_science.tex",\n        is_crafting_station = false\n    },\n    -- and many more\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Each prototyper provides a specific tech level, defined in the Builder component."}),"\n",(0,r.jsx)(n.h2,{id:"character-specific-recipes",children:"Character-Specific Recipes"}),"\n",(0,r.jsxs)(n.p,{children:["Recipes can be restricted to specific characters using the ",(0,r.jsx)(n.code,{children:"builder_tag"})," property:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("lighter", \n    {\n        Ingredient("rope", 1),\n        Ingredient("goldnugget", 1),\n        Ingredient("petals", 3)\n    },\n    TECH.NONE,\n    {builder_tag = "pyromaniac"} -- Only Willow can craft this\n)\n'})}),"\n",(0,r.jsx)(n.p,{children:"Common builder tags include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pyromaniac"})," (Willow)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"masterchef"})," (Warly)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"merm_builder"})," (Wurt)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ghostlyfriend"})," (Wendy)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"werehuman"})," (Woodie)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"valkyrie"})," (Wigfrid)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pebblemaker"})," (Walter)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadowmagic"})," (Maxwell)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"skill-tree-recipes",children:"Skill Tree Recipes"}),"\n",(0,r.jsx)(n.p,{children:"With the addition of character skill trees, recipes can now be restricted to specific skills:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("wereitem_goose",\n    {\n        Ingredient("monstermeat", 3),\n        Ingredient("seeds", 3)\n    },\n    TECH.NONE,\n    {builder_skill = "woodie_were_form_goose"}\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"recipe-placement",children:"Recipe Placement"}),"\n",(0,r.jsx)(n.p,{children:"For recipes that create structures or placeable objects, additional properties control placement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("treasurechest",\n    {\n        Ingredient("boards", 3),\n        Ingredient("goldnugget", 1)\n    },\n    TECH.SCIENCE_ONE,\n    {\n        placer = "treasurechest_placer", -- Placer prefab\n        min_spacing = 2,                 -- Minimum spacing between chests\n        testfn = function(pt) return true end -- Custom placement test\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"custom-recipe-testing",children:"Custom Recipe Testing"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"testfn"})," property allows for custom placement logic:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- Only allow placement on marsh turf\nlocal function IsMarshLand(pt, rot)\n    local ground_tile = TheWorld.Map:GetTileAtPoint(pt.x, pt.y, pt.z)\n    return ground_tile and ground_tile == WORLD_TILES.MARSH\nend\n\nRecipe2("mermhouse_crafted",\n    {\n        Ingredient("boards", 4),\n        Ingredient("cutreeds", 3),\n        Ingredient("pondfish", 2)\n    },\n    TECH.SCIENCE_ONE,\n    {\n        builder_tag = "merm_builder",\n        placer = "mermhouse_crafted_placer",\n        testfn = IsMarshLand -- Custom test function\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"recipe-overrides",children:"Recipe Overrides"}),"\n",(0,r.jsxs)(n.p,{children:["Recipes can be overridden or modified using the ",(0,r.jsx)(n.code,{children:"AddRecipePostInit"})," function:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- In a mod\'s modmain.lua\nAddRecipePostInit("axe", function(recipe)\n    -- Modify the recipe\n    table.insert(recipe.ingredients, Ingredient("rocks", 1))\n    recipe.level = TECH.SCIENCE_ONE -- Require science machine\n    return recipe\nend)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"adding-custom-recipes-in-mods",children:"Adding Custom Recipes in Mods"}),"\n",(0,r.jsxs)(n.p,{children:["Mods can add new recipes using the ",(0,r.jsx)(n.code,{children:"Recipe2"})," function in their ",(0,r.jsx)(n.code,{children:"modmain.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- In a mod\'s modmain.lua\nRecipe2("mymod_customitem",\n    {\n        Ingredient("twigs", 2),\n        Ingredient("cutgrass", 3)\n    },\n    TECH.NONE,\n    {\n        atlas = "images/inventoryimages/mymod_customitem.xml",\n        image = "mymod_customitem.tex",\n        numtogive = 1\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"special-recipe-properties",children:"Special Recipe Properties"}),"\n",(0,r.jsx)(n.h3,{id:"limited-amount-recipes",children:"Limited Amount Recipes"}),"\n",(0,r.jsx)(n.p,{children:"Some recipes can only be crafted a limited number of times:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("moonrockidol",\n    {\n        Ingredient("moonrocknugget", 3),\n        Ingredient("purplegem", 1)\n    },\n    TECH.CELESTIAL_ONE,\n    {\n        limitedamount = true -- Can only be crafted once\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"custom-action-string",children:"Custom Action String"}),"\n",(0,r.jsx)(n.p,{children:"Recipes can specify a custom action string for crafting stations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("carnival_prizebooth",\n    {\n        Ingredient("boards", 4),\n        Ingredient("goldnugget", 1)\n    },\n    TECH.SCIENCE_ONE,\n    {\n        is_crafting_station = true,\n        action_str = "TRADE" -- Shows "TRADE" instead of "CRAFT"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"manufacturing",children:"Manufacturing"}),"\n",(0,r.jsx)(n.p,{children:"Some recipes delegate the actual item creation to the crafting station:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("winter_food1",\n    {\n        Ingredient("wintersfeastfuel", 1),\n        Ingredient("cookedsmallmeat", 1)\n    },\n    TECH.WINTERSFEASTCOOKING_ONE,\n    {\n        manufactured = true, -- Station handles item creation\n        station_tag = "wintersfeastcooker"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"recipe-filters",children:"Recipe Filters"}),"\n",(0,r.jsxs)(n.p,{children:["Recipes can be filtered in the crafting menu using the ",(0,r.jsx)(n.code,{children:"filter"})," property:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Recipe2("turf_carpetfloor",\n    {\n        Ingredient("boards", 1),\n        Ingredient("beefalowool", 1)\n    },\n    TECH.TURFCRAFTING_ONE,\n    {\n        filter = "CRAFTING_STATION",\n        station_tag = "turfcrafting"\n    }\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,r.jsx)(n.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recipe lookup uses hash-based indexing for fast access"}),"\n",(0,r.jsx)(n.li,{children:"Builder tag recipes are cached separately for character filtering"}),"\n",(0,r.jsx)(n.li,{children:"Image atlases are resolved lazily to reduce memory usage"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mod-compatibility",children:"Mod Compatibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recipe post-initialization hooks ensure mod compatibility"}),"\n",(0,r.jsx)(n.li,{children:"RPC ID system prevents hash collisions in multiplayer"}),"\n",(0,r.jsx)(n.li,{children:"Character-specific recipes integrate with skill tree system"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"build-version-compatibility",children:"Build Version Compatibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recipe definitions are validated against current game build (676042)"}),"\n",(0,r.jsx)(n.li,{children:"Tech tree integration ensures compatibility with prototype system"}),"\n",(0,r.jsx)(n.li,{children:"Event recipes are properly gated by seasonal availability"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipe",children:"Recipe System Core"}),": Core Recipe and Ingredient classes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/recipes_filter",children:"Recipe Filters"}),": Crafting menu categorization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/techtree",children:"Tech Tree"}),": Technology requirements and progression"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../components/builder.md",children:"Builder Component"}),": Recipe crafting implementation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./constants.md",children:"Constants"}),": Tech levels and ingredient types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/dst-api-webdocs/docs/game-scripts/core-systems/game-mechanics/crafting/craftingmenuprofile",children:"Crafting Menu Profile"}),": User preferences and favorites"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);