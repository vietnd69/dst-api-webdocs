"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[84073],{28453:(e,l,n)=>{n.d(l,{R:()=>o,x:()=>t});var s=n(96540);const i={},r=s.createContext(i);function o(e){const l=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function t(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:l},e.children)}},66015:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>a,contentTitle:()=>t,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"game-scripts/core-systems/user-interface/graphics/falloffdefs","title":"Falloff Definitions","description":"Module that defines tile falloff texture configurations for visual transitions between different terrain types","source":"@site/docs/game-scripts/core-systems/user-interface/graphics/falloffdefs.md","sourceDirName":"game-scripts/core-systems/user-interface/graphics","slug":"/game-scripts/core-systems/user-interface/graphics/falloffdefs","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/falloffdefs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"falloffdefs","title":"Falloff Definitions","description":"Module that defines tile falloff texture configurations for visual transitions between different terrain types","sidebar_position":7,"last_updated":"2025-06-21T00:00:00.000Z","build_version":676042,"change_status":"stable"},"sidebar":"docs","previous":{"title":"Emitters","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/emitters"},"next":{"title":"FX (Visual Effects)","permalink":"/dst-api-webdocs/docs/game-scripts/core-systems/user-interface/graphics/fx"}}');var i=n(74848),r=n(28453);const o={id:"falloffdefs",title:"Falloff Definitions",description:"Module that defines tile falloff texture configurations for visual transitions between different terrain types",sidebar_position:7,last_updated:new Date("2025-06-21T00:00:00.000Z"),build_version:676042,change_status:"stable"},t="Falloff Definitions",a={},d=[{value:"Version History",id:"version-history",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Falloff Texture Definitions",id:"falloff-texture-definitions",level:2},{value:"FALLOFF_IDS.FALLOFF",id:"falloff_idsfalloff",level:3},{value:"FALLOFF_IDS.DOCK_FALLOFF",id:"falloff_idsdock_falloff",level:3},{value:"FALLOFF_IDS.OCEANICE_FALLOFF",id:"falloff_idsoceanice_falloff",level:3},{value:"FALLOFF_IDS.INVISIBLE",id:"falloff_idsinvisible",level:3},{value:"Constants",id:"constants",level:2},{value:"FALLOFF_IDS",id:"falloff_ids",level:3},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Falloff Texture Configuration",id:"falloff-texture-configuration",level:3},{value:"Module Protection",id:"module-protection",level:2},{value:"Related Modules",id:"related-modules",level:2}];function f(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.header,{children:(0,i.jsx)(l.h1,{id:"falloff-definitions",children:"Falloff Definitions"})}),"\n",(0,i.jsx)(l.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{children:"Build Version"}),(0,i.jsx)(l.th,{children:"Change Date"}),(0,i.jsx)(l.th,{children:"Change Type"}),(0,i.jsx)(l.th,{children:"Description"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{children:"676042"}),(0,i.jsx)(l.td,{children:"2025-06-21"}),(0,i.jsx)(l.td,{children:"stable"}),(0,i.jsx)(l.td,{children:"Current version"})]})})]}),"\n",(0,i.jsx)(l.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(l.p,{children:["The ",(0,i.jsx)(l.code,{children:"falloffdefs.lua"})," module configures falloff textures that create smooth visual transitions between different tile types in Don't Starve Together. It uses the TileManager to register various falloff texture definitions that determine how terrain edges blend together."]}),"\n",(0,i.jsx)(l.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"-- The module is automatically loaded and configured at startup\n-- No direct function calls needed - it configures the TileManager\n"})}),"\n",(0,i.jsx)(l.h2,{id:"falloff-texture-definitions",children:"Falloff Texture Definitions"}),"\n",(0,i.jsx)(l.h3,{id:"falloff_idsfalloff",children:"FALLOFF_IDS.FALLOFF"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Status:"})," ",(0,i.jsx)(l.code,{children:"stable"})]}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Description:"}),"\nDefault falloff texture for standard land tiles, providing smooth transitions between land tiles and other terrain types."]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Configuration:"})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:'TileManager.AddFalloffTexture(\n    FALLOFF_IDS.FALLOFF,\n    {\n        name = "falloff",\n        noise_texture = "images/square.tex",\n        should_have_falloff = TileGroups.LandTilesWithDefaultFalloff,\n        should_have_falloff_result = true,\n        neighbor_needs_falloff = TileGroups.LandTilesWithDefaultFalloff,\n        neighbor_needs_falloff_result = false\n    }\n)\n'})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Properties:"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"name"}),': "falloff"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"noise_texture"}),': "images/square.tex"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"should_have_falloff"}),": Applies to tiles in ",(0,i.jsx)(l.code,{children:"TileGroups.LandTilesWithDefaultFalloff"})]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"neighbor_needs_falloff"}),": Checks against ",(0,i.jsx)(l.code,{children:"TileGroups.LandTilesWithDefaultFalloff"})]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"falloff_idsdock_falloff",children:"FALLOFF_IDS.DOCK_FALLOFF"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Status:"})," ",(0,i.jsx)(l.code,{children:"stable"})]}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Description:"}),"\nFalloff texture specifically for dock tiles, creating smooth transitions between docks and transparent ocean areas."]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Configuration:"})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:'TileManager.AddFalloffTexture(\n    FALLOFF_IDS.DOCK_FALLOFF,\n    {\n        name = "dock_falloff",\n        noise_texture = "images/square.tex",\n        should_have_falloff = TileGroups.DockTiles,\n        should_have_falloff_result = true,\n        neighbor_needs_falloff = TileGroups.TransparentOceanTiles,\n        neighbor_needs_falloff_result = true\n    }\n)\n'})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Properties:"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"name"}),': "dock_falloff"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"noise_texture"}),': "images/square.tex"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"should_have_falloff"}),": Applies to tiles in ",(0,i.jsx)(l.code,{children:"TileGroups.DockTiles"})]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"neighbor_needs_falloff"}),": Checks against ",(0,i.jsx)(l.code,{children:"TileGroups.TransparentOceanTiles"})]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"falloff_idsoceanice_falloff",children:"FALLOFF_IDS.OCEANICE_FALLOFF"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Status:"})," ",(0,i.jsx)(l.code,{children:"stable"})]}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Description:"}),"\nFalloff texture for ocean ice tiles, creating transitions between ice and transparent ocean areas."]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Configuration:"})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:'TileManager.AddFalloffTexture(\n    FALLOFF_IDS.OCEANICE_FALLOFF,\n    {\n        name = "oceanice_falloff",\n        noise_texture = "images/square.tex",\n        should_have_falloff = TileGroups.OceanIceTiles,\n        should_have_falloff_result = true,\n        neighbor_needs_falloff = TileGroups.TransparentOceanTiles,\n        neighbor_needs_falloff_result = true,\n    }\n)\n'})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Properties:"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"name"}),': "oceanice_falloff"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"noise_texture"}),': "images/square.tex"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"should_have_falloff"}),": Applies to tiles in ",(0,i.jsx)(l.code,{children:"TileGroups.OceanIceTiles"})]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"neighbor_needs_falloff"}),": Checks against ",(0,i.jsx)(l.code,{children:"TileGroups.TransparentOceanTiles"})]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"falloff_idsinvisible",children:"FALLOFF_IDS.INVISIBLE"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Status:"})," ",(0,i.jsx)(l.code,{children:"stable"})]}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Description:"}),"\nInvisible falloff texture for land tiles that need falloff effects but should remain visually invisible."]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Configuration:"})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:'TileManager.AddFalloffTexture(\n    FALLOFF_IDS.INVISIBLE,\n    {\n        name = "invisible_falloff",\n        noise_texture = "images/square.tex",\n        should_have_falloff = TileGroups.LandTilesInvisible,\n        should_have_falloff_result = true,\n        neighbor_needs_falloff = TileGroups.LandTilesWithDefaultFalloff,\n        neighbor_needs_falloff_result = true,\n    }\n)\n'})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Properties:"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"name"}),': "invisible_falloff"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"noise_texture"}),': "images/square.tex"']}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"should_have_falloff"}),": Applies to tiles in ",(0,i.jsx)(l.code,{children:"TileGroups.LandTilesInvisible"})]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"neighbor_needs_falloff"}),": Checks against ",(0,i.jsx)(l.code,{children:"TileGroups.LandTilesWithDefaultFalloff"})]}),"\n"]}),"\n",(0,i.jsx)(l.h2,{id:"constants",children:"Constants"}),"\n",(0,i.jsx)(l.h3,{id:"falloff_ids",children:"FALLOFF_IDS"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Description:"})," Enumeration of available falloff texture identifiers."]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Values:"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"FALLOFF = 1"}),": Default land tile falloff"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"DOCK_FALLOFF = 2"}),": Dock tile falloff"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"OCEANICE_FALLOFF = 3"}),": Ocean ice tile falloff"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"INVISIBLE = 4"}),": Invisible falloff for special cases"]}),"\n"]}),"\n",(0,i.jsx)(l.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,i.jsx)(l.h3,{id:"falloff-texture-configuration",children:"Falloff Texture Configuration"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Structure:"})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:'{\n    name = "string",                    -- Unique identifier name\n    noise_texture = "string",           -- Path to noise texture\n    should_have_falloff = TileGroup,    -- Tile group that should have falloff\n    should_have_falloff_result = bool,  -- Whether tiles should have falloff\n    neighbor_needs_falloff = TileGroup, -- Neighboring tile group to check\n    neighbor_needs_falloff_result = bool -- Whether neighbors need falloff\n}\n'})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"name"})," (string): Unique identifier for the falloff texture"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"noise_texture"})," (string): Texture file path used for the falloff effect"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"should_have_falloff"})," (TileGroup): Group of tiles that should apply this falloff"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"should_have_falloff_result"})," (boolean): Whether the falloff should be applied"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"neighbor_needs_falloff"})," (TileGroup): Group of neighboring tiles to consider"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"neighbor_needs_falloff_result"})," (boolean): Whether neighboring tiles require falloff"]}),"\n"]}),"\n",(0,i.jsx)(l.h2,{id:"module-protection",children:"Module Protection"}),"\n",(0,i.jsxs)(l.p,{children:["The module uses ",(0,i.jsx)(l.code,{children:"mod_protect_TileManager"})," to prevent modification of the TileManager after configuration:"]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-lua",children:"mod_protect_TileManager = false  -- Allow modifications\n-- ... TileManager.AddFalloffTexture calls ...\nmod_protect_TileManager = true   -- Protect from further modifications\n"})}),"\n",(0,i.jsx)(l.h2,{id:"related-modules",children:"Related Modules"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"./tilemanager.md",children:"TileManager"}),": Core system for managing tile textures and falloffs"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"./constants.md",children:"Constants"}),": Contains FALLOFF_IDS definitions"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"./tilegroups.md",children:"TileGroups"}),": Defines tile groupings used in falloff configurations"]}),"\n"]})]})}function c(e={}){const{wrapper:l}={...(0,r.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}}}]);