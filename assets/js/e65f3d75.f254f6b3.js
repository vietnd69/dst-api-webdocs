"use strict";(self.webpackChunkdst_api_webdocs=self.webpackChunkdst_api_webdocs||[]).push([[9230],{7453:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api-vanilla/components/equippable","title":"Equippable","description":"The Equippable component allows items to be equipped by entities with an inventory. It manages equipment slots, equip/unequip callbacks, and equipment effects.","source":"@site/docs/api-vanilla/components/equippable.md","sourceDirName":"api-vanilla/components","slug":"/api-vanilla/components/equippable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/equippable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":26,"frontMatter":{"id":"equippable","title":"Equippable","sidebar_position":26},"sidebar":"docs","previous":{"title":"Edible","permalink":"/dst-api-webdocs/docs/api-vanilla/components/edible"},"next":{"title":"Inspectable","permalink":"/dst-api-webdocs/docs/api-vanilla/components/inspectable"}}');var s=i(4848),o=i(8453);const a={id:"equippable",title:"Equippable",sidebar_position:26},r="Equippable Component",l={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Key Methods",id:"key-methods",level:2},{value:"Equip Callbacks",id:"equip-callbacks",level:3},{value:"Equipment Properties",id:"equipment-properties",level:3},{value:"Equipment Slots",id:"equipment-slots",level:2},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"Example: Creating an Equippable Weapon",id:"example-creating-an-equippable-weapon",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"equippable-component",children:"Equippable Component"})}),"\n",(0,s.jsx)(n.p,{children:"The Equippable component allows items to be equipped by entities with an inventory. It manages equipment slots, equip/unequip callbacks, and equipment effects."}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Add an equippable component to an entity\nlocal entity = CreateEntity()\nentity:AddComponent("equippable")\n\n-- Configure the equippable component\nlocal equippable = entity.components.equippable\nequippable.equipslot = EQUIPSLOTS.HANDS\nequippable:SetOnEquip(OnEquip)\nequippable:SetOnUnequip(OnUnequip)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"equipslot"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"The slot this item equips into (HANDS, HEAD, BODY)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isequipped"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"Whether the item is currently equipped"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"owner"})}),(0,s.jsx)(n.td,{children:"Entity"}),(0,s.jsx)(n.td,{children:"The entity that has this item equipped"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"walkspeedmult"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Walking speed multiplier when equipped"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dapperness"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Sanity gain/loss rate when equipped"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"restrictedtag"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Tag required to equip this item"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"insulated"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"Whether this item insulates against electricity"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"equippedmoisture"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Moisture added to wearer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"poisonimmunity"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"Whether this grants poison immunity"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dryingrate"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"How quickly this item dries the wearer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bonusmaxsanity"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Additional max sanity when equipped"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,s.jsx)(n.h3,{id:"equip-callbacks",children:"Equip Callbacks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Set callback for when item is equipped\nequippable:SetOnEquip(function(inst, owner)\n    -- Do something when equipped\n    owner.AnimState:OverrideSymbol("swap_object", "swap_axe", "swap_axe")\n    owner.AnimState:Show("ARM_carry")\n    owner.AnimState:Hide("ARM_normal")\nend)\n\n-- Set callback for when item is unequipped\nequippable:SetOnUnequip(function(inst, owner)\n    -- Do something when unequipped\n    owner.AnimState:Hide("ARM_carry")\n    owner.AnimState:Show("ARM_normal")\nend)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"equipment-properties",children:"Equipment Properties"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Set walk speed modifier\nequippable.walkspeedmult = 1.2 -- 20% faster walking\n\n-- Set sanity effect\nequippable.dapperness = TUNING.DAPPERNESS_MED -- Gain sanity over time\n\n-- Set item as insulated\nequippable.insulated = true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"equipment-slots",children:"Equipment Slots"}),"\n",(0,s.jsx)(n.p,{children:"The standard equipment slots are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EQUIPSLOTS.HANDS"})," - Hand slot for tools and weapons"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EQUIPSLOTS.HEAD"})," - Head slot for hats and helmets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EQUIPSLOTS.BODY"})," - Body slot for clothing and armor"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EQUIPSLOTS.BACK"})," - Back slot for backpacks (from the Hamlet DLC)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Custom slots can be defined for mods."}),"\n",(0,s.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,s.jsx)(n.p,{children:"The Equippable component often works with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Inventory"})," - For equipping/unequipping items"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Armor"})," - For items that provide protection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Weapon"})," - For items that can be used to attack"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Insulator"})," - For temperature protection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Waterproofer"})," - For rain protection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Fueled"})," - For items that degrade with use"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-creating-an-equippable-weapon",children:"Example: Creating an Equippable Weapon"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local function MakeWeapon()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it an inventory item\n    inst:AddComponent("inventoryitem")\n    \n    -- Make it equippable\n    inst:AddComponent("equippable")\n    inst.components.equippable.equipslot = EQUIPSLOTS.HANDS\n    \n    -- Set up equip/unequip visuals\n    inst.components.equippable:SetOnEquip(function(inst, owner)\n        owner.AnimState:OverrideSymbol("swap_object", "swap_spear", "swap_spear")\n        owner.AnimState:Show("ARM_carry")\n        owner.AnimState:Hide("ARM_normal")\n    end)\n    \n    inst.components.equippable:SetOnUnequip(function(inst, owner)\n        owner.AnimState:Hide("ARM_carry")\n        owner.AnimState:Show("ARM_normal")\n    end)\n    \n    -- Make it a weapon\n    inst:AddComponent("weapon")\n    inst.components.weapon:SetDamage(TUNING.SPEAR_DAMAGE)\n    \n    return inst\nend\n\n-- Example of an equippable hat\nlocal function MakeHat()\n    local inst = CreateEntity()\n    \n    -- Add basic components\n    inst.entity:AddTransform()\n    inst.entity:AddAnimState()\n    inst.entity:AddNetwork()\n    \n    -- Make it an inventory item\n    inst:AddComponent("inventoryitem")\n    \n    -- Make it equippable\n    inst:AddComponent("equippable")\n    inst.components.equippable.equipslot = EQUIPSLOTS.HEAD\n    inst.components.equippable.dapperness = TUNING.DAPPERNESS_SMALL\n    \n    -- Set up equip/unequip visuals\n    inst.components.equippable:SetOnEquip(function(inst, owner)\n        owner.AnimState:OverrideSymbol("swap_hat", "swap_tophat", "swap_tophat")\n        owner.AnimState:Show("HAT")\n        owner.AnimState:Show("HAT_HAIR")\n        owner.AnimState:Hide("HAIR_NOHAT")\n        owner.AnimState:Hide("HAIR")\n    end)\n    \n    inst.components.equippable:SetOnUnequip(function(inst, owner)\n        owner.AnimState:ClearOverrideSymbol("swap_hat")\n        owner.AnimState:Hide("HAT")\n        owner.AnimState:Hide("HAT_HAIR")\n        owner.AnimState:Show("HAIR_NOHAT")\n        owner.AnimState:Show("HAIR")\n    end)\n    \n    -- Add insulation\n    inst:AddComponent("insulator")\n    inst.components.insulator:SetInsulation(TUNING.INSULATION_SMALL)\n    \n    return inst\nend\n'})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);