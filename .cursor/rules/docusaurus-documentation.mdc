---
description: This project follows specific documentation standards to ensure consistency and readability across the Don't Starve Together API documentation.
globs: 
alwaysApply: false
---
# Docusaurus Documentation Standards

This project follows specific documentation standards to ensure consistency and readability across the Don't Starve Together API documentation.

## File Organization

- Documentation files are organized in the `/docs/api-vanilla/` directory
- Each major API section has its own subdirectory (components, core, world, etc.)
- Files use kebab-case naming convention (e.g., `component-system.md`)
- Each component or major API feature has its own dedicated file

## Markdown Structure

- Each documentation file should start with a frontmatter section:
  ```md
  ---
  id: unique-id
  title: Display Title
  sidebar_position: 1
  ---
  ```
- Use proper header hierarchy (H1 for page title, H2 for sections, H3 for subsections)
- Include a brief description at the top of each file
- Use code blocks with appropriate language tags:
  ```lua
  -- Lua code example
  local function example()
    return true
  end
  ```

## API Documentation Format

API documentation should follow this structure:

1. **Title and Overview** - Brief description of the component/system
2. **Basic Usage** - Simple example showing common usage
3. **Properties** - Table of properties with types and descriptions
4. **Key Methods** - Important methods with examples
5. **Events** - Events triggered or listened for by this component
6. **Integration** - How it works with other components
7. **See also** - Links to related documentation
8. **Examples** - Complete, working examples

## Cross-Referencing

- Use relative links for cross-references between documentation pages
- Link format: `[Link Text](mdc:dst-api-webdocs/path/to/file.md)`
- Always link to relevant API documentation when mentioning functions or components

## Code Examples

- All code examples should be valid Lua with proper syntax highlighting
- Include comments to explain complex parts
- Provide complete, working examples where appropriate
- Use consistent naming conventions in examples

## Navigation

The sidebar is defined in [sidebars.ts](mdc:dst-api-webdocs/dst-api-webdocs/dst-api-webdocs/sidebars.ts) and organizes documentation into logical categories.

When adding new documentation:
1. Create the markdown file in the appropriate directory
2. Add the file to the sidebar configuration
3. Set the `sidebar_position` in the frontmatter to control ordering


