---
description: 
globs: docs/**/*.md,*.md
alwaysApply: false
---
---
description: This rule outlines the workflow for creating and updating documentation for the Don't Starve Together API.
globs: 
alwaysApply: false
---

# Documentation Writing Workflow

This document outlines the step-by-step process for creating and updating documentation for the Don't Starve Together API.

## Documentation Creation Process

### Step 1: Research and Planning

Before writing documentation:

1. Research the component, system, or feature in the codebase
2. Understand its purpose, functionality, and interaction with other systems
3. Review existing documentation for similar items
4. Identify the appropriate template to use

### Step 2: Documentation Setup

1. Create a new file in the appropriate directory:
   - Components → `/docs/api-vanilla/components/`
   - Core systems → `/docs/api-vanilla/core/`
   - Data types → `/docs/api-vanilla/data-types/`
   - Examples → `/docs/api-vanilla/examples/`
   - Global objects → `/docs/api-vanilla/global-objects/`

2. Copy the template content from the appropriate template in `/docs/api-vanilla/templates/`

3. Set up frontmatter with correct metadata:
   ```
   ---
   id: document-id
   title: Document Title
   sidebar_position: X
   version: 619045
   ---
   ```

### Step 3: Content Creation

1. Fill in each section of the template with relevant content
2. Focus on clarity and accuracy
3. Include practical, working code examples
4. Link to related documentation when referencing other components or systems

### Step 4: Quality Assurance

Before submitting documentation:

1. Check all code examples to ensure they work correctly
2. Verify technical accuracy of all information
3. Review for clarity and completeness
4. Check cross-references and links
5. Ensure compliance with documentation standards

### Step 5: Submission and Review

1. Submit the documentation for review
2. Address any feedback or requested changes
3. Once approved, the documentation will be published

## Documentation Update Process

When updating existing documentation:

1. Review the current documentation
2. Identify areas that need updating
3. Make focused changes while maintaining the established structure
4. Update the version number if applicable
5. Document the changes in your submission

## Version Management

- Always include the current API version (619045) in the frontmatter
- When documenting version-specific features, note the version when the feature was introduced
- For deprecated features, clearly mark them as deprecated and provide migration guidance

## Best Practices

1. **Accuracy First**: Ensure all information is technically accurate
2. **Practical Examples**: Include working code examples
3. **Consistency**: Follow the established templates and style guidelines
4. **Cross-References**: Link to related documentation
5. **Completeness**: Cover all aspects of the component/system

## Common Documentation Mistakes to Avoid

1. Incomplete examples that don't show real-world usage
2. Missing or incorrect cross-references
3. Vague descriptions of functionality
4. Omitting important parameters or return values
5. Failing to explain integration with other components/systems



