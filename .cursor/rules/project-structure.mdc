---
description: 
globs: 
alwaysApply: true
---
# Project Structure

This project follows the standard Docusaurus project structure with TypeScript support.

## Root Configuration Files

- [docusaurus.config.ts](mdc:dst-api-webdocs/docusaurus.config.ts) - Main configuration
- [sidebars.ts](mdc:dst-api-webdocs/sidebars.ts) - Sidebar structure
- [package.json](mdc:dst-api-webdocs/package.json) - Dependencies and scripts
- [tsconfig.json](mdc:dst-api-webdocs/tsconfig.json) - TypeScript configuration

## Core Directories

- `/docs` - Documentation markdown files
  - `/api-vanilla` - API documentation for different modules
  - Other documentation files like getting-started.md

- `/src` - Source code
  - `/pages` - React components for custom pages
    - [index.tsx](mdc:dst-api-webdocs/src/pages/index.tsx) - Home page (redirects to docs)
    - [_index.tsx](mdc:dst-api-webdocs/src/pages/_index.tsx) - Reference implementation (not used in routing)
  - `/components` - Reusable React components
  - `/css` - Custom CSS files

- `/static` - Static assets
  - `/img` - Images including logo and favicon
  - [404.html](mdc:dst-api-webdocs/static/404.html) - Custom 404 page

- `/blog` - Blog posts (currently not used)

## Build Output

- `/build` - Production build output (not tracked in git)
- `/.docusaurus` - Development cache (not tracked in git)

## TypeScript Usage

The project uses TypeScript for enhanced type safety:
- React components use `.tsx` extension
- Configuration files use `.ts` extension
- Type definitions are provided by Docusaurus packages

